diff -Naur orig/bindings/Makefile.am patched/bindings/Makefile.am
--- orig/bindings/Makefile.am	2011-01-12 21:50:29.000000000 +0100
+++ patched/bindings/Makefile.am	2013-03-02 19:58:26.178486973 +0100
@@ -1 +1 @@
-SUBDIRS = mono python
+SUBDIRS = python
diff -Naur orig/bindings/Makefile.in patched/bindings/Makefile.in
--- orig/bindings/Makefile.in	2011-03-31 20:54:35.000000000 +0200
+++ patched/bindings/Makefile.in	2013-03-02 19:59:10.418895292 +0100
@@ -178,8 +178,6 @@
 MAINT = @MAINT@
 MAKEINFO = @MAKEINFO@
 MKDIR_P = @MKDIR_P@
-MONO_DEPENDENCY_CFLAGS = @MONO_DEPENDENCY_CFLAGS@
-MONO_DEPENDENCY_LIBS = @MONO_DEPENDENCY_LIBS@
 NM = @NM@
 NMEDIT = @NMEDIT@
 OBJDUMP = @OBJDUMP@
@@ -273,7 +271,7 @@
 top_build_prefix = @top_build_prefix@
 top_builddir = @top_builddir@
 top_srcdir = @top_srcdir@
-SUBDIRS = mono python
+SUBDIRS = python
 all: all-recursive
 
 .SUFFIXES:
diff -Naur orig/configure patched/configure
--- orig/configure	2011-03-31 20:54:37.000000000 +0200
+++ patched/configure	2013-03-02 20:03:15.497157288 +0100
@@ -801,8 +801,6 @@
 CSC
 RUNTIME
 AL
-MONO_DEPENDENCY_LIBS
-MONO_DEPENDENCY_CFLAGS
 VALA_API_GEN
 HAVE_INTROSPECTION_FALSE
 HAVE_INTROSPECTION_TRUE
@@ -979,8 +977,6 @@
 LIBINDICATE_LIBS
 LIBINDICATEGTK_CFLAGS
 LIBINDICATEGTK_LIBS
-MONO_DEPENDENCY_CFLAGS
-MONO_DEPENDENCY_LIBS
 GTK_SHARP_CFLAGS
 GTK_SHARP_LIBS
 GAPI_CFLAGS
@@ -12021,585 +12017,6 @@
 
 
 
-###########################
-# Check for Mono support
-###########################
-
-MONO_REQUIRED_VERSION=1.0
-
-pkg_failed=no
-{ $as_echo "$as_me:${as_lineno-$LINENO}: checking for MONO_DEPENDENCY" >&5
-$as_echo_n "checking for MONO_DEPENDENCY... " >&6; }
-
-if test -n "$MONO_DEPENDENCY_CFLAGS"; then
-    pkg_cv_MONO_DEPENDENCY_CFLAGS="$MONO_DEPENDENCY_CFLAGS"
- elif test -n "$PKG_CONFIG"; then
-    if test -n "$PKG_CONFIG" && \
-    { { $as_echo "$as_me:${as_lineno-$LINENO}: \$PKG_CONFIG --exists --print-errors \"mono >= \$MONO_REQUIRED_VERSION\""; } >&5
-  ($PKG_CONFIG --exists --print-errors "mono >= $MONO_REQUIRED_VERSION") 2>&5
-  ac_status=$?
-  $as_echo "$as_me:${as_lineno-$LINENO}: \$? = $ac_status" >&5
-  test $ac_status = 0; }; then
-  pkg_cv_MONO_DEPENDENCY_CFLAGS=`$PKG_CONFIG --cflags "mono >= $MONO_REQUIRED_VERSION" 2>/dev/null`
-else
-  pkg_failed=yes
-fi
- else
-    pkg_failed=untried
-fi
-if test -n "$MONO_DEPENDENCY_LIBS"; then
-    pkg_cv_MONO_DEPENDENCY_LIBS="$MONO_DEPENDENCY_LIBS"
- elif test -n "$PKG_CONFIG"; then
-    if test -n "$PKG_CONFIG" && \
-    { { $as_echo "$as_me:${as_lineno-$LINENO}: \$PKG_CONFIG --exists --print-errors \"mono >= \$MONO_REQUIRED_VERSION\""; } >&5
-  ($PKG_CONFIG --exists --print-errors "mono >= $MONO_REQUIRED_VERSION") 2>&5
-  ac_status=$?
-  $as_echo "$as_me:${as_lineno-$LINENO}: \$? = $ac_status" >&5
-  test $ac_status = 0; }; then
-  pkg_cv_MONO_DEPENDENCY_LIBS=`$PKG_CONFIG --libs "mono >= $MONO_REQUIRED_VERSION" 2>/dev/null`
-else
-  pkg_failed=yes
-fi
- else
-    pkg_failed=untried
-fi
-
-
-
-if test $pkg_failed = yes; then
-   	{ $as_echo "$as_me:${as_lineno-$LINENO}: result: no" >&5
-$as_echo "no" >&6; }
-
-if $PKG_CONFIG --atleast-pkgconfig-version 0.20; then
-        _pkg_short_errors_supported=yes
-else
-        _pkg_short_errors_supported=no
-fi
-        if test $_pkg_short_errors_supported = yes; then
-	        MONO_DEPENDENCY_PKG_ERRORS=`$PKG_CONFIG --short-errors --print-errors "mono >= $MONO_REQUIRED_VERSION" 2>&1`
-        else
-	        MONO_DEPENDENCY_PKG_ERRORS=`$PKG_CONFIG --print-errors "mono >= $MONO_REQUIRED_VERSION" 2>&1`
-        fi
-	# Put the nasty error message in config.log where it belongs
-	echo "$MONO_DEPENDENCY_PKG_ERRORS" >&5
-
-	has_mono=false
-elif test $pkg_failed = untried; then
-     	{ $as_echo "$as_me:${as_lineno-$LINENO}: result: no" >&5
-$as_echo "no" >&6; }
-	has_mono=false
-else
-	MONO_DEPENDENCY_CFLAGS=$pkg_cv_MONO_DEPENDENCY_CFLAGS
-	MONO_DEPENDENCY_LIBS=$pkg_cv_MONO_DEPENDENCY_LIBS
-        { $as_echo "$as_me:${as_lineno-$LINENO}: result: yes" >&5
-$as_echo "yes" >&6; }
-	has_mono=true
-fi
-
-# Extract the first word of "al", so it can be a program name with args.
-set dummy al; ac_word=$2
-{ $as_echo "$as_me:${as_lineno-$LINENO}: checking for $ac_word" >&5
-$as_echo_n "checking for $ac_word... " >&6; }
-if test "${ac_cv_path_AL+set}" = set; then :
-  $as_echo_n "(cached) " >&6
-else
-  case $AL in
-  [\\/]* | ?:[\\/]*)
-  ac_cv_path_AL="$AL" # Let the user override the test with a path.
-  ;;
-  *)
-  as_save_IFS=$IFS; IFS=$PATH_SEPARATOR
-for as_dir in $PATH
-do
-  IFS=$as_save_IFS
-  test -z "$as_dir" && as_dir=.
-    for ac_exec_ext in '' $ac_executable_extensions; do
-  if { test -f "$as_dir/$ac_word$ac_exec_ext" && $as_test_x "$as_dir/$ac_word$ac_exec_ext"; }; then
-    ac_cv_path_AL="$as_dir/$ac_word$ac_exec_ext"
-    $as_echo "$as_me:${as_lineno-$LINENO}: found $as_dir/$ac_word$ac_exec_ext" >&5
-    break 2
-  fi
-done
-  done
-IFS=$as_save_IFS
-
-  test -z "$ac_cv_path_AL" && ac_cv_path_AL="no"
-  ;;
-esac
-fi
-AL=$ac_cv_path_AL
-if test -n "$AL"; then
-  { $as_echo "$as_me:${as_lineno-$LINENO}: result: $AL" >&5
-$as_echo "$AL" >&6; }
-else
-  { $as_echo "$as_me:${as_lineno-$LINENO}: result: no" >&5
-$as_echo "no" >&6; }
-fi
-
-
-if test "x$AL" = "xno" ; then
-   as_fn_error $? "No al tool found.  You need to install Mono." "$LINENO" 5
-fi
-
-if test "x$has_mono" = "xtrue" ; then
-   GENERATED_SOURCES=generated/*.cs
-   # Extract the first word of "mono", so it can be a program name with args.
-set dummy mono; ac_word=$2
-{ $as_echo "$as_me:${as_lineno-$LINENO}: checking for $ac_word" >&5
-$as_echo_n "checking for $ac_word... " >&6; }
-if test "${ac_cv_path_RUNTIME+set}" = set; then :
-  $as_echo_n "(cached) " >&6
-else
-  case $RUNTIME in
-  [\\/]* | ?:[\\/]*)
-  ac_cv_path_RUNTIME="$RUNTIME" # Let the user override the test with a path.
-  ;;
-  *)
-  as_save_IFS=$IFS; IFS=$PATH_SEPARATOR
-for as_dir in $PATH
-do
-  IFS=$as_save_IFS
-  test -z "$as_dir" && as_dir=.
-    for ac_exec_ext in '' $ac_executable_extensions; do
-  if { test -f "$as_dir/$ac_word$ac_exec_ext" && $as_test_x "$as_dir/$ac_word$ac_exec_ext"; }; then
-    ac_cv_path_RUNTIME="$as_dir/$ac_word$ac_exec_ext"
-    $as_echo "$as_me:${as_lineno-$LINENO}: found $as_dir/$ac_word$ac_exec_ext" >&5
-    break 2
-  fi
-done
-  done
-IFS=$as_save_IFS
-
-  test -z "$ac_cv_path_RUNTIME" && ac_cv_path_RUNTIME="no"
-  ;;
-esac
-fi
-RUNTIME=$ac_cv_path_RUNTIME
-if test -n "$RUNTIME"; then
-  { $as_echo "$as_me:${as_lineno-$LINENO}: result: $RUNTIME" >&5
-$as_echo "$RUNTIME" >&6; }
-else
-  { $as_echo "$as_me:${as_lineno-$LINENO}: result: no" >&5
-$as_echo "no" >&6; }
-fi
-
-
-
-   if test "x$RUNTIME" != "no" ; then
-      RUNTIME=mono
-   fi
-
-   # Extract the first word of "gmcs", so it can be a program name with args.
-set dummy gmcs; ac_word=$2
-{ $as_echo "$as_me:${as_lineno-$LINENO}: checking for $ac_word" >&5
-$as_echo_n "checking for $ac_word... " >&6; }
-if test "${ac_cv_path_CSC+set}" = set; then :
-  $as_echo_n "(cached) " >&6
-else
-  case $CSC in
-  [\\/]* | ?:[\\/]*)
-  ac_cv_path_CSC="$CSC" # Let the user override the test with a path.
-  ;;
-  *)
-  as_save_IFS=$IFS; IFS=$PATH_SEPARATOR
-for as_dir in $PATH
-do
-  IFS=$as_save_IFS
-  test -z "$as_dir" && as_dir=.
-    for ac_exec_ext in '' $ac_executable_extensions; do
-  if { test -f "$as_dir/$ac_word$ac_exec_ext" && $as_test_x "$as_dir/$ac_word$ac_exec_ext"; }; then
-    ac_cv_path_CSC="$as_dir/$ac_word$ac_exec_ext"
-    $as_echo "$as_me:${as_lineno-$LINENO}: found $as_dir/$ac_word$ac_exec_ext" >&5
-    break 2
-  fi
-done
-  done
-IFS=$as_save_IFS
-
-  test -z "$ac_cv_path_CSC" && ac_cv_path_CSC="no"
-  ;;
-esac
-fi
-CSC=$ac_cv_path_CSC
-if test -n "$CSC"; then
-  { $as_echo "$as_me:${as_lineno-$LINENO}: result: $CSC" >&5
-$as_echo "$CSC" >&6; }
-else
-  { $as_echo "$as_me:${as_lineno-$LINENO}: result: no" >&5
-$as_echo "no" >&6; }
-fi
-
-
-   LIB_PREFIX=.so
-   LIB_SUFFIX=
-fi
-
-if test "x$CSC" = "xno" ; then
-   as_fn_error $? "No Mono compiler found." "$LINENO" 5
-fi
-
-# Extract the first word of "gacutil", so it can be a program name with args.
-set dummy gacutil; ac_word=$2
-{ $as_echo "$as_me:${as_lineno-$LINENO}: checking for $ac_word" >&5
-$as_echo_n "checking for $ac_word... " >&6; }
-if test "${ac_cv_path_GACUTIL+set}" = set; then :
-  $as_echo_n "(cached) " >&6
-else
-  case $GACUTIL in
-  [\\/]* | ?:[\\/]*)
-  ac_cv_path_GACUTIL="$GACUTIL" # Let the user override the test with a path.
-  ;;
-  *)
-  as_save_IFS=$IFS; IFS=$PATH_SEPARATOR
-for as_dir in $PATH
-do
-  IFS=$as_save_IFS
-  test -z "$as_dir" && as_dir=.
-    for ac_exec_ext in '' $ac_executable_extensions; do
-  if { test -f "$as_dir/$ac_word$ac_exec_ext" && $as_test_x "$as_dir/$ac_word$ac_exec_ext"; }; then
-    ac_cv_path_GACUTIL="$as_dir/$ac_word$ac_exec_ext"
-    $as_echo "$as_me:${as_lineno-$LINENO}: found $as_dir/$ac_word$ac_exec_ext" >&5
-    break 2
-  fi
-done
-  done
-IFS=$as_save_IFS
-
-  test -z "$ac_cv_path_GACUTIL" && ac_cv_path_GACUTIL="no"
-  ;;
-esac
-fi
-GACUTIL=$ac_cv_path_GACUTIL
-if test -n "$GACUTIL"; then
-  { $as_echo "$as_me:${as_lineno-$LINENO}: result: $GACUTIL" >&5
-$as_echo "$GACUTIL" >&6; }
-else
-  { $as_echo "$as_me:${as_lineno-$LINENO}: result: no" >&5
-$as_echo "no" >&6; }
-fi
-
-
-if test "x$GACUTIL" = "xno" ; then
-   as_fn_error $? "No gacutil tool found" "$LINENO" 5
-fi
-
-
-
-
-
-
-
-
-GLIB_SHARP_REQ_VERSION=2.12.1
-GTK_SHARP_REQ_VERSION=2.12
-
-pkg_failed=no
-{ $as_echo "$as_me:${as_lineno-$LINENO}: checking for GTK_SHARP" >&5
-$as_echo_n "checking for GTK_SHARP... " >&6; }
-
-if test -n "$GTK_SHARP_CFLAGS"; then
-    pkg_cv_GTK_SHARP_CFLAGS="$GTK_SHARP_CFLAGS"
- elif test -n "$PKG_CONFIG"; then
-    if test -n "$PKG_CONFIG" && \
-    { { $as_echo "$as_me:${as_lineno-$LINENO}: \$PKG_CONFIG --exists --print-errors \"gtk-sharp-2.0 >= \$GTK_SHARP_REQ_VERSION\""; } >&5
-  ($PKG_CONFIG --exists --print-errors "gtk-sharp-2.0 >= $GTK_SHARP_REQ_VERSION") 2>&5
-  ac_status=$?
-  $as_echo "$as_me:${as_lineno-$LINENO}: \$? = $ac_status" >&5
-  test $ac_status = 0; }; then
-  pkg_cv_GTK_SHARP_CFLAGS=`$PKG_CONFIG --cflags "gtk-sharp-2.0 >= $GTK_SHARP_REQ_VERSION" 2>/dev/null`
-else
-  pkg_failed=yes
-fi
- else
-    pkg_failed=untried
-fi
-if test -n "$GTK_SHARP_LIBS"; then
-    pkg_cv_GTK_SHARP_LIBS="$GTK_SHARP_LIBS"
- elif test -n "$PKG_CONFIG"; then
-    if test -n "$PKG_CONFIG" && \
-    { { $as_echo "$as_me:${as_lineno-$LINENO}: \$PKG_CONFIG --exists --print-errors \"gtk-sharp-2.0 >= \$GTK_SHARP_REQ_VERSION\""; } >&5
-  ($PKG_CONFIG --exists --print-errors "gtk-sharp-2.0 >= $GTK_SHARP_REQ_VERSION") 2>&5
-  ac_status=$?
-  $as_echo "$as_me:${as_lineno-$LINENO}: \$? = $ac_status" >&5
-  test $ac_status = 0; }; then
-  pkg_cv_GTK_SHARP_LIBS=`$PKG_CONFIG --libs "gtk-sharp-2.0 >= $GTK_SHARP_REQ_VERSION" 2>/dev/null`
-else
-  pkg_failed=yes
-fi
- else
-    pkg_failed=untried
-fi
-
-
-
-if test $pkg_failed = yes; then
-   	{ $as_echo "$as_me:${as_lineno-$LINENO}: result: no" >&5
-$as_echo "no" >&6; }
-
-if $PKG_CONFIG --atleast-pkgconfig-version 0.20; then
-        _pkg_short_errors_supported=yes
-else
-        _pkg_short_errors_supported=no
-fi
-        if test $_pkg_short_errors_supported = yes; then
-	        GTK_SHARP_PKG_ERRORS=`$PKG_CONFIG --short-errors --print-errors "gtk-sharp-2.0 >= $GTK_SHARP_REQ_VERSION" 2>&1`
-        else
-	        GTK_SHARP_PKG_ERRORS=`$PKG_CONFIG --print-errors "gtk-sharp-2.0 >= $GTK_SHARP_REQ_VERSION" 2>&1`
-        fi
-	# Put the nasty error message in config.log where it belongs
-	echo "$GTK_SHARP_PKG_ERRORS" >&5
-
-	as_fn_error $? "Package requirements (gtk-sharp-2.0 >= $GTK_SHARP_REQ_VERSION) were not met:
-
-$GTK_SHARP_PKG_ERRORS
-
-Consider adjusting the PKG_CONFIG_PATH environment variable if you
-installed software in a non-standard prefix.
-
-Alternatively, you may set the environment variables GTK_SHARP_CFLAGS
-and GTK_SHARP_LIBS to avoid the need to call pkg-config.
-See the pkg-config man page for more details." "$LINENO" 5
-elif test $pkg_failed = untried; then
-     	{ $as_echo "$as_me:${as_lineno-$LINENO}: result: no" >&5
-$as_echo "no" >&6; }
-	{ { $as_echo "$as_me:${as_lineno-$LINENO}: error: in \`$ac_pwd':" >&5
-$as_echo "$as_me: error: in \`$ac_pwd':" >&2;}
-as_fn_error $? "The pkg-config script could not be found or is too old.  Make sure it
-is in your PATH or set the PKG_CONFIG environment variable to the full
-path to pkg-config.
-
-Alternatively, you may set the environment variables GTK_SHARP_CFLAGS
-and GTK_SHARP_LIBS to avoid the need to call pkg-config.
-See the pkg-config man page for more details.
-
-To get pkg-config, see <http://pkg-config.freedesktop.org/>.
-See \`config.log' for more details" "$LINENO" 5 ; }
-else
-	GTK_SHARP_CFLAGS=$pkg_cv_GTK_SHARP_CFLAGS
-	GTK_SHARP_LIBS=$pkg_cv_GTK_SHARP_LIBS
-        { $as_echo "$as_me:${as_lineno-$LINENO}: result: yes" >&5
-$as_echo "yes" >&6; }
-
-fi
-
-
-
-
-pkg_failed=no
-{ $as_echo "$as_me:${as_lineno-$LINENO}: checking for GAPI" >&5
-$as_echo_n "checking for GAPI... " >&6; }
-
-if test -n "$GAPI_CFLAGS"; then
-    pkg_cv_GAPI_CFLAGS="$GAPI_CFLAGS"
- elif test -n "$PKG_CONFIG"; then
-    if test -n "$PKG_CONFIG" && \
-    { { $as_echo "$as_me:${as_lineno-$LINENO}: \$PKG_CONFIG --exists --print-errors \"gapi-2.0 >= \$GLIB_SHARP_REQ_VERSION\""; } >&5
-  ($PKG_CONFIG --exists --print-errors "gapi-2.0 >= $GLIB_SHARP_REQ_VERSION") 2>&5
-  ac_status=$?
-  $as_echo "$as_me:${as_lineno-$LINENO}: \$? = $ac_status" >&5
-  test $ac_status = 0; }; then
-  pkg_cv_GAPI_CFLAGS=`$PKG_CONFIG --cflags "gapi-2.0 >= $GLIB_SHARP_REQ_VERSION" 2>/dev/null`
-else
-  pkg_failed=yes
-fi
- else
-    pkg_failed=untried
-fi
-if test -n "$GAPI_LIBS"; then
-    pkg_cv_GAPI_LIBS="$GAPI_LIBS"
- elif test -n "$PKG_CONFIG"; then
-    if test -n "$PKG_CONFIG" && \
-    { { $as_echo "$as_me:${as_lineno-$LINENO}: \$PKG_CONFIG --exists --print-errors \"gapi-2.0 >= \$GLIB_SHARP_REQ_VERSION\""; } >&5
-  ($PKG_CONFIG --exists --print-errors "gapi-2.0 >= $GLIB_SHARP_REQ_VERSION") 2>&5
-  ac_status=$?
-  $as_echo "$as_me:${as_lineno-$LINENO}: \$? = $ac_status" >&5
-  test $ac_status = 0; }; then
-  pkg_cv_GAPI_LIBS=`$PKG_CONFIG --libs "gapi-2.0 >= $GLIB_SHARP_REQ_VERSION" 2>/dev/null`
-else
-  pkg_failed=yes
-fi
- else
-    pkg_failed=untried
-fi
-
-
-
-if test $pkg_failed = yes; then
-   	{ $as_echo "$as_me:${as_lineno-$LINENO}: result: no" >&5
-$as_echo "no" >&6; }
-
-if $PKG_CONFIG --atleast-pkgconfig-version 0.20; then
-        _pkg_short_errors_supported=yes
-else
-        _pkg_short_errors_supported=no
-fi
-        if test $_pkg_short_errors_supported = yes; then
-	        GAPI_PKG_ERRORS=`$PKG_CONFIG --short-errors --print-errors "gapi-2.0 >= $GLIB_SHARP_REQ_VERSION" 2>&1`
-        else
-	        GAPI_PKG_ERRORS=`$PKG_CONFIG --print-errors "gapi-2.0 >= $GLIB_SHARP_REQ_VERSION" 2>&1`
-        fi
-	# Put the nasty error message in config.log where it belongs
-	echo "$GAPI_PKG_ERRORS" >&5
-
-	as_fn_error $? "Package requirements (gapi-2.0 >= $GLIB_SHARP_REQ_VERSION) were not met:
-
-$GAPI_PKG_ERRORS
-
-Consider adjusting the PKG_CONFIG_PATH environment variable if you
-installed software in a non-standard prefix.
-
-Alternatively, you may set the environment variables GAPI_CFLAGS
-and GAPI_LIBS to avoid the need to call pkg-config.
-See the pkg-config man page for more details." "$LINENO" 5
-elif test $pkg_failed = untried; then
-     	{ $as_echo "$as_me:${as_lineno-$LINENO}: result: no" >&5
-$as_echo "no" >&6; }
-	{ { $as_echo "$as_me:${as_lineno-$LINENO}: error: in \`$ac_pwd':" >&5
-$as_echo "$as_me: error: in \`$ac_pwd':" >&2;}
-as_fn_error $? "The pkg-config script could not be found or is too old.  Make sure it
-is in your PATH or set the PKG_CONFIG environment variable to the full
-path to pkg-config.
-
-Alternatively, you may set the environment variables GAPI_CFLAGS
-and GAPI_LIBS to avoid the need to call pkg-config.
-See the pkg-config man page for more details.
-
-To get pkg-config, see <http://pkg-config.freedesktop.org/>.
-See \`config.log' for more details" "$LINENO" 5 ; }
-else
-	GAPI_CFLAGS=$pkg_cv_GAPI_CFLAGS
-	GAPI_LIBS=$pkg_cv_GAPI_LIBS
-        { $as_echo "$as_me:${as_lineno-$LINENO}: result: yes" >&5
-$as_echo "yes" >&6; }
-
-fi
-# Extract the first word of "gapi2-parser", so it can be a program name with args.
-set dummy gapi2-parser; ac_word=$2
-{ $as_echo "$as_me:${as_lineno-$LINENO}: checking for $ac_word" >&5
-$as_echo_n "checking for $ac_word... " >&6; }
-if test "${ac_cv_path_GAPI_PARSER+set}" = set; then :
-  $as_echo_n "(cached) " >&6
-else
-  case $GAPI_PARSER in
-  [\\/]* | ?:[\\/]*)
-  ac_cv_path_GAPI_PARSER="$GAPI_PARSER" # Let the user override the test with a path.
-  ;;
-  *)
-  as_save_IFS=$IFS; IFS=$PATH_SEPARATOR
-for as_dir in $PATH
-do
-  IFS=$as_save_IFS
-  test -z "$as_dir" && as_dir=.
-    for ac_exec_ext in '' $ac_executable_extensions; do
-  if { test -f "$as_dir/$ac_word$ac_exec_ext" && $as_test_x "$as_dir/$ac_word$ac_exec_ext"; }; then
-    ac_cv_path_GAPI_PARSER="$as_dir/$ac_word$ac_exec_ext"
-    $as_echo "$as_me:${as_lineno-$LINENO}: found $as_dir/$ac_word$ac_exec_ext" >&5
-    break 2
-  fi
-done
-  done
-IFS=$as_save_IFS
-
-  test -z "$ac_cv_path_GAPI_PARSER" && ac_cv_path_GAPI_PARSER="no"
-  ;;
-esac
-fi
-GAPI_PARSER=$ac_cv_path_GAPI_PARSER
-if test -n "$GAPI_PARSER"; then
-  { $as_echo "$as_me:${as_lineno-$LINENO}: result: $GAPI_PARSER" >&5
-$as_echo "$GAPI_PARSER" >&6; }
-else
-  { $as_echo "$as_me:${as_lineno-$LINENO}: result: no" >&5
-$as_echo "no" >&6; }
-fi
-
-
-
-# Extract the first word of "gapi2-codegen", so it can be a program name with args.
-set dummy gapi2-codegen; ac_word=$2
-{ $as_echo "$as_me:${as_lineno-$LINENO}: checking for $ac_word" >&5
-$as_echo_n "checking for $ac_word... " >&6; }
-if test "${ac_cv_path_GAPI_CODEGEN+set}" = set; then :
-  $as_echo_n "(cached) " >&6
-else
-  case $GAPI_CODEGEN in
-  [\\/]* | ?:[\\/]*)
-  ac_cv_path_GAPI_CODEGEN="$GAPI_CODEGEN" # Let the user override the test with a path.
-  ;;
-  *)
-  as_save_IFS=$IFS; IFS=$PATH_SEPARATOR
-for as_dir in $PATH
-do
-  IFS=$as_save_IFS
-  test -z "$as_dir" && as_dir=.
-    for ac_exec_ext in '' $ac_executable_extensions; do
-  if { test -f "$as_dir/$ac_word$ac_exec_ext" && $as_test_x "$as_dir/$ac_word$ac_exec_ext"; }; then
-    ac_cv_path_GAPI_CODEGEN="$as_dir/$ac_word$ac_exec_ext"
-    $as_echo "$as_me:${as_lineno-$LINENO}: found $as_dir/$ac_word$ac_exec_ext" >&5
-    break 2
-  fi
-done
-  done
-IFS=$as_save_IFS
-
-  test -z "$ac_cv_path_GAPI_CODEGEN" && ac_cv_path_GAPI_CODEGEN="no"
-  ;;
-esac
-fi
-GAPI_CODEGEN=$ac_cv_path_GAPI_CODEGEN
-if test -n "$GAPI_CODEGEN"; then
-  { $as_echo "$as_me:${as_lineno-$LINENO}: result: $GAPI_CODEGEN" >&5
-$as_echo "$GAPI_CODEGEN" >&6; }
-else
-  { $as_echo "$as_me:${as_lineno-$LINENO}: result: no" >&5
-$as_echo "no" >&6; }
-fi
-
-
-
-# Extract the first word of "gapi2-fixup", so it can be a program name with args.
-set dummy gapi2-fixup; ac_word=$2
-{ $as_echo "$as_me:${as_lineno-$LINENO}: checking for $ac_word" >&5
-$as_echo_n "checking for $ac_word... " >&6; }
-if test "${ac_cv_path_GAPI_FIXUP+set}" = set; then :
-  $as_echo_n "(cached) " >&6
-else
-  case $GAPI_FIXUP in
-  [\\/]* | ?:[\\/]*)
-  ac_cv_path_GAPI_FIXUP="$GAPI_FIXUP" # Let the user override the test with a path.
-  ;;
-  *)
-  as_save_IFS=$IFS; IFS=$PATH_SEPARATOR
-for as_dir in $PATH
-do
-  IFS=$as_save_IFS
-  test -z "$as_dir" && as_dir=.
-    for ac_exec_ext in '' $ac_executable_extensions; do
-  if { test -f "$as_dir/$ac_word$ac_exec_ext" && $as_test_x "$as_dir/$ac_word$ac_exec_ext"; }; then
-    ac_cv_path_GAPI_FIXUP="$as_dir/$ac_word$ac_exec_ext"
-    $as_echo "$as_me:${as_lineno-$LINENO}: found $as_dir/$ac_word$ac_exec_ext" >&5
-    break 2
-  fi
-done
-  done
-IFS=$as_save_IFS
-
-  test -z "$ac_cv_path_GAPI_FIXUP" && ac_cv_path_GAPI_FIXUP="no"
-  ;;
-esac
-fi
-GAPI_FIXUP=$ac_cv_path_GAPI_FIXUP
-if test -n "$GAPI_FIXUP"; then
-  { $as_echo "$as_me:${as_lineno-$LINENO}: result: $GAPI_FIXUP" >&5
-$as_echo "$GAPI_FIXUP" >&6; }
-else
-  { $as_echo "$as_me:${as_lineno-$LINENO}: result: no" >&5
-$as_echo "no" >&6; }
-fi
-
-
-
-
 ###########################
 # Check for Python support
 ###########################
diff -Naur orig/configure.ac patched/configure.ac
--- orig/configure.ac	2011-03-31 20:54:19.000000000 +0200
+++ patched/configure.ac	2013-03-02 20:01:15.152046539 +0100
@@ -88,61 +88,6 @@
 AC_PATH_PROG([VALA_API_GEN], [vapigen])
 
 ###########################
-# Check for Mono support
-###########################
-
-MONO_REQUIRED_VERSION=1.0
-PKG_CHECK_MODULES(MONO_DEPENDENCY, mono >= $MONO_REQUIRED_VERSION, has_mono=true, has_mono=false)
-
-AC_PATH_PROG(AL, al, no)
-if test "x$AL" = "xno" ; then
-   AC_MSG_ERROR([No al tool found.  You need to install Mono.])
-fi
-
-if test "x$has_mono" = "xtrue" ; then
-   GENERATED_SOURCES=generated/*.cs
-   AC_PATH_PROG(RUNTIME, mono, no)
-
-   if test "x$RUNTIME" != "no" ; then
-      RUNTIME=mono
-   fi
-
-   AC_PATH_PROG(CSC, gmcs, no)
-   LIB_PREFIX=.so
-   LIB_SUFFIX=
-fi
-
-if test "x$CSC" = "xno" ; then
-   AC_MSG_ERROR([No Mono compiler found.])
-fi
-
-AC_PATH_PROG(GACUTIL, gacutil, no)
-if test "x$GACUTIL" = "xno" ; then
-   AC_MSG_ERROR([No gacutil tool found])
-fi
-
-AC_SUBST(RUNTIME)
-AC_SUBST(CSC)
-AC_SUBST(GACUTIL)
-AC_SUBST(LIB_PREFIX)
-AC_SUBST(LIB_SUFFIX)
-AC_SUBST(GENERATED_SOURCES)
-
-GLIB_SHARP_REQ_VERSION=2.12.1
-GTK_SHARP_REQ_VERSION=2.12
-PKG_CHECK_MODULES(GTK_SHARP, gtk-sharp-2.0 >= $GTK_SHARP_REQ_VERSION)
-AC_SUBST(GTK_SHARP_LIBS)
-AC_SUBST(GTK_SHARP_CFLAGS)
-
-PKG_CHECK_MODULES(GAPI, gapi-2.0 >= $GLIB_SHARP_REQ_VERSION)
-AC_PATH_PROG(GAPI_PARSER, gapi2-parser, no)
-AC_SUBST(GAPI_PARSER)
-AC_PATH_PROG(GAPI_CODEGEN, gapi2-codegen, no)
-AC_SUBST(GAPI_CODEGEN)
-AC_PATH_PROG(GAPI_FIXUP, gapi2-fixup, no)
-AC_SUBST(GAPI_FIXUP)
-
-###########################
 # Check for Python support
 ###########################
 
