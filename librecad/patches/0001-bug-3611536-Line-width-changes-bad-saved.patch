--- a/libraries/libdxfrw/src/drw_base.h
+++ b/libraries/libdxfrw/src/drw_base.h
@@ -196,36 +196,98 @@ private:
 class DRW_LW_Conv{
 public:
     enum lineWidth {
-        width00 = 0,       /*!< 0.00mm */
-        width01 = 1,       /*!< 0.05mm */
-        width02 = 2,       /*!< 0.09mm */
-        width03 = 3,       /*!< 0.13mm */
-        width04 = 4,       /*!< 0.15mm */
-        width05 = 5,       /*!< 0.18mm */
-        width06 = 6,       /*!< 0.20mm */
-        width07 = 7,       /*!< 0.25mm */
-        width08 = 8,       /*!< 0.30mm */
-        width09 = 9,       /*!< 0.35mm */
-        width10 = 10,      /*!< 0.40mm */
-        width11 = 11,      /*!< 0.50mm */
-        width12 = 12,      /*!< 0.53mm */
-        width13 = 13,      /*!< 0.60mm */
-        width14 = 14,      /*!< 0.70mm */
-        width15 = 15,      /*!< 0.80mm */
-        width16 = 16,      /*!< 0.90mm */
-        width17 = 17,      /*!< 1.00mm */
-        width18 = 18,      /*!< 1.06mm */
-        width19 = 19,      /*!< 1.20mm */
-        width20 = 20,      /*!< 1.40mm */
-        width21 = 21,      /*!< 1.58mm */
-        width22 = 22,      /*!< 2.00mm */
-        width23 = 23,      /*!< 2.11mm */
+        width00 = 0,       /*!< 0.00mm (dxf 0)*/
+        width01 = 1,       /*!< 0.05mm (dxf 5)*/
+        width02 = 2,       /*!< 0.09mm (dxf 9)*/
+        width03 = 3,       /*!< 0.13mm (dxf 13)*/
+        width04 = 4,       /*!< 0.15mm (dxf 15)*/
+        width05 = 5,       /*!< 0.18mm (dxf 18)*/
+        width06 = 6,       /*!< 0.20mm (dxf 20)*/
+        width07 = 7,       /*!< 0.25mm (dxf 25)*/
+        width08 = 8,       /*!< 0.30mm (dxf 30)*/
+        width09 = 9,       /*!< 0.35mm (dxf 35)*/
+        width10 = 10,      /*!< 0.40mm (dxf 40)*/
+        width11 = 11,      /*!< 0.50mm (dxf 50)*/
+        width12 = 12,      /*!< 0.53mm (dxf 53)*/
+        width13 = 13,      /*!< 0.60mm (dxf 60)*/
+        width14 = 14,      /*!< 0.70mm (dxf 70)*/
+        width15 = 15,      /*!< 0.80mm (dxf 80)*/
+        width16 = 16,      /*!< 0.90mm (dxf 90)*/
+        width17 = 17,      /*!< 1.00mm (dxf 100)*/
+        width18 = 18,      /*!< 1.06mm (dxf 106)*/
+        width19 = 19,      /*!< 1.20mm (dxf 120)*/
+        width20 = 20,      /*!< 1.40mm (dxf 140)*/
+        width21 = 21,      /*!< 1.58mm (dxf 158)*/
+        width22 = 22,      /*!< 2.00mm (dxf 200)*/
+        width23 = 23,      /*!< 2.11mm (dxf 211)*/
         widthByLayer = 29, /*!< by layer (dxf -1) */
         widthByBlock = 30, /*!< by block (dxf -2) */
         widthDefault = 31  /*!< by default (dxf -3) */
     };
 
-    static int lineWidth2int(enum lineWidth lw){
+    static int lineWidth2dxfInt(enum lineWidth lw){
+        switch (lw){
+        case widthByLayer:
+            return -1;
+        case widthByBlock:
+            return -2;
+        case widthDefault:
+            return -3;
+        case width00:
+            return 0;
+        case width01:
+            return 5;
+        case width02:
+            return 9;
+        case width03:
+            return 13;
+        case width04:
+            return 15;
+        case width05:
+            return 18;
+        case width06:
+            return 20;
+        case width07:
+            return 25;
+        case width08:
+            return 30;
+        case width09:
+            return 35;
+        case width10:
+            return 40;
+        case width11:
+            return 50;
+        case width12:
+            return 53;
+        case width13:
+            return 60;
+        case width14:
+            return 70;
+        case width15:
+            return 80;
+        case width16:
+            return 90;
+        case width17:
+            return 100;
+        case width18:
+            return 106;
+        case width19:
+            return 120;
+        case width20:
+            return 140;
+        case width21:
+            return 158;
+        case width22:
+            return 200;
+        case width23:
+            return 211;
+        default:
+            return -3;
+        }
+        return static_cast<int> (lw);
+    }
+
+    static int lineWidth2dwgInt(enum lineWidth lw){
         return static_cast<int> (lw);
     }
 

--- a/libraries/libdxfrw/src/libdxfrw.cpp
+++ b/libraries/libdxfrw/src/libdxfrw.cpp
@@ -168,7 +168,7 @@ bool dxfRW::writeEntity(DRW_Entity *ent) {
         writer->writeInt32(420, ent->color24);
     }
     if (version > DRW::AC1014) {
-        writer->writeInt16(370, ent->lWeight);
+        writer->writeInt16(370, DRW_LW_Conv::lineWidth2dxfInt(ent->lWeight));
     }
     return true;
 }
@@ -239,7 +239,7 @@ bool dxfRW::writeLayer(DRW_Layer *ent){
         writer->writeUtf8String(6, ent->lineType);
         if (! ent->plotF)
             writer->writeBool(290, ent->plotF);
-        writer->writeInt16(370, ent->lWeight);
+        writer->writeInt16(370, DRW_LW_Conv::lineWidth2dxfInt(ent->lWeight));
         writer->writeString(390, "F");
     } else
         writer->writeUtf8Caps(6, ent->lineType);
-- 
1.8.2.3

