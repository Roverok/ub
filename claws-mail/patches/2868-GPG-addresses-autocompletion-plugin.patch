diff -Naur orig/configure.ac patched/configure.ac
--- orig/configure.ac	2013-12-14 11:14:50.000000000 +0100
+++ patched/configure.ac	2014-04-24 10:23:40.502058861 +0200
@@ -964,6 +964,14 @@
 		[  --disable-geolocation-plugin    Do not build geolocation plugin],
 		[enable_geolocation_plugin=$enableval], [enable_geolocation_plugin=auto])
 
+AC_ARG_ENABLE(gpgaddress-plugin,
+		[  --disable-gpgaddress-plugin        Do not build gpgaddress plugin],
+		[enable_gpgaddress_plugin=$enableval], [enable_gpgaddress_plugin=auto])
+
+AC_ARG_ENABLE(gpgaddress-plugin,
+		[  --disable-gpgaddress-plugin        Do not build gpgaddress plugin],
+		[enable_gpgaddress_plugin=$enableval], [enable_gpgaddress_plugin=auto])
+
 AC_ARG_ENABLE(mailmbox-plugin,
 		[  --disable-mailmbox-plugin       Do not build mailmbox plugin],
 		[enable_mailmbox_plugin=$enableval], [enable_mailmbox_plugin=auto])
@@ -1470,6 +1478,24 @@
 	AC_MSG_RESULT(no)
 fi
 
+AC_MSG_CHECKING([whether to build gpgaddress plugin])
+if test x"$enable_gpgaddress_plugin" != xno; then
+	PLUGINS="$PLUGINS gpgaddress"
+	AC_MSG_RESULT(yes)
+else
+	DISABLED_PLUGINS="$DISABLED_PLUGINS gpgaddress"
+	AC_MSG_RESULT(no)
+fi
+
+AC_MSG_CHECKING([whether to build gpgaddress plugin])
+if test x"$enable_gpgaddress_plugin" != xno; then
+	PLUGINS="$PLUGINS gpgaddress"
+	AC_MSG_RESULT(yes)
+else
+	DISABLED_PLUGINS="$DISABLED_PLUGINS gpgaddress"
+	AC_MSG_RESULT(no)
+fi
+
 AC_MSG_CHECKING([whether to build mailmbox plugin])
 if test x"$enable_mailmbox_plugin" != xno; then
 	PLUGINS="$PLUGINS mailmbox"
@@ -1830,6 +1856,7 @@
 AM_CONDITIONAL(BUILD_FETCHINFO_PLUGIN,		test x"$enable_fetchinfo_plugin" != xno)
 AM_CONDITIONAL(BUILD_GDATA_PLUGIN,		test x"$enable_gdata_plugin" != xno)
 AM_CONDITIONAL(BUILD_GEOLOCATION_PLUGIN,	test x"$enable_geolocation_plugin" != xno)
+AM_CONDITIONAL(BUILD_GPGADDRESS_PLUGIN,		test x"$enable_gpgaddress_plugin" != xno)
 AM_CONDITIONAL(BUILD_MAILMBOX_PLUGIN,		test x"$enable_mailmbox_plugin" != xno)
 AM_CONDITIONAL(BUILD_NEWMAIL_PLUGIN,		test x"$enable_newmail_plugin" != xno)
 AM_CONDITIONAL(BUILD_NOTIFICATION_PLUGIN,	test x"$enable_notification_plugin" != xno)
@@ -1877,6 +1904,7 @@
 src/plugins/fetchinfo/Makefile
 src/plugins/gdata/Makefile
 src/plugins/geolocation/Makefile
+src/plugins/gpgaddress/Makefile
 src/plugins/mailmbox/Makefile
 src/plugins/newmail/Makefile
 src/plugins/notification/Makefile
diff -Naur orig/src/plugins/gpgaddress/gpgaddress.c patched/src/plugins/gpgaddress/gpgaddress.c
--- orig/src/plugins/gpgaddress/gpgaddress.c	1970-01-01 01:00:00.000000000 +0100
+++ patched/src/plugins/gpgaddress/gpgaddress.c	2014-04-24 10:18:24.995146841 +0200
@@ -0,0 +1,159 @@
+/*
+ * gpgaddress - A plugin for Claws Mail
+ *
+ * Copyright (C) 2014 Christian Hesse <mail@eworm.de>
+ *
+ * This program is free software; you can redistribute it and/or modify
+ * it under the terms of the GNU General Public License as published by
+ * the Free Software Foundation; either version 3 of the License, or
+ * (at your option) any later version.
+ *
+ * This program is distributed in the hope that it will be useful,
+ * but WITHOUT ANY WARRANTY; without even the implied warranty of
+ * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
+ * GNU General Public License for more details.
+ *
+ * You should have received a copy of the GNU General Public License
+ * along with this program; if not, write to the Free Software
+ * Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA 02111-1307, USA.
+ */
+
+
+#include <errno.h>
+#include <inttypes.h>
+#include <stdlib.h>
+
+#include <glib.h>
+#include <glib/gi18n.h>
+
+#include <gpgme.h>
+
+#include "addr_compl.h"
+#include "claws.h"
+#include "hooks.h"
+#include "plugin.h"
+#include "procmsg.h"
+#include "utils.h"
+#include "version.h"
+
+static guint hook_id;
+
+static gboolean gpgaddress_completion_hook(gpointer source, gpointer data)
+{
+	gpgme_ctx_t ctx;
+	gpgme_key_t key;
+	gpgme_error_t err;
+	gpgme_user_id_t uid;
+	address_entry *ae;
+
+	/* initialize */
+	gpgme_check_version(NULL);
+
+	if ((err = gpgme_new(&ctx)) == 0) {
+		err = gpgme_op_keylist_start(ctx, NULL, 0);
+
+		/* walk the available keys */
+		while (err == 0) {
+			if ((err = gpgme_op_keylist_next(ctx, &key)) != 0)
+				break;
+
+			/* skip keys that are revoked, expired, ... */
+			if ((key->revoked || key->expired || key->disabled || key->invalid) == FALSE) {
+				uid = key->uids;
+
+				/* walk all user ids within a key */
+				while (uid != NULL) {
+					if (uid->email != NULL && *uid->email != 0) {
+						ae = g_new0(address_entry, 1);
+
+						ae->address = g_strdup(uid->email);
+						addr_compl_add_address1(ae->address, ae);
+
+						if (uid->name != NULL && *uid->name != 0) {
+							ae->name = g_strdup(uid->name);
+							addr_compl_add_address1(ae->name, ae);
+						} else
+							ae->name = NULL;
+
+						ae->grp_emails = NULL;
+
+						source = g_list_prepend(source, ae);
+
+						debug_print("%s <%s>\n", uid->name, uid->email);
+					}
+					uid = uid->next;
+				}
+			}
+			gpgme_key_release(key);
+		}
+		gpgme_release(ctx);
+	}
+
+	if (gpg_err_code(err) != GPG_ERR_EOF) {
+		debug_print("can not list keys: %s\n", gpgme_strerror(err));
+		exit(EXIT_FAILURE);
+	}
+
+	return EXIT_SUCCESS;
+}
+
+gboolean plugin_done(void)
+{
+	hooks_unregister_hook(ADDDRESS_COMPLETION_BUILD_ADDRESS_LIST_HOOKLIST, hook_id);
+
+	debug_print("GPG-Addresses plugin unloaded\n");
+
+	return TRUE;
+}
+
+gint plugin_init(gchar **error)
+{
+	if (!check_plugin_version(MAKE_NUMERIC_VERSION(2,9,2,72),
+				VERSION_NUMERIC, _("GPG-Addresses"), error))
+		return -1;
+
+	if ((hook_id = hooks_register_hook(ADDDRESS_COMPLETION_BUILD_ADDRESS_LIST_HOOKLIST, gpgaddress_completion_hook, NULL)) == -1)
+	{
+		*error = g_strdup(_("Failed to register GPG-Addresses completion hook"));
+		return -1;
+	}
+
+	debug_print("GPG-Addresses plugin loaded\n");
+
+	return EXIT_SUCCESS;
+}
+
+const gchar *plugin_name(void)
+{
+	return _("GPG Addesses");
+}
+
+const gchar *plugin_desc(void)
+{
+	return _("This plugin handles Address autocompletion via GPG keyring.\n"
+		"\n"
+		"Copyright 2014 by Christian Hesse <mail@eworm.de>");
+}
+
+const gchar *plugin_type(void)
+{
+	return "Common";
+}
+
+const gchar *plugin_licence(void)
+{
+	return "GPL3+";
+}
+
+const gchar *plugin_version(void)
+{
+	return VERSION;
+}
+
+struct PluginFeature *plugin_provides(void)
+{
+	static struct PluginFeature features[] =
+		{ {PLUGIN_UTILITY, N_("GPG Address autocompletion")},
+		  {PLUGIN_NOTHING, NULL}};
+	return features;
+}
diff -Naur orig/src/plugins/gpgaddress/Makefile.am patched/src/plugins/gpgaddress/Makefile.am
--- orig/src/plugins/gpgaddress/Makefile.am	1970-01-01 01:00:00.000000000 +0100
+++ patched/src/plugins/gpgaddress/Makefile.am	2014-04-24 10:18:24.995146841 +0200
@@ -0,0 +1,22 @@
+plugindir = $(pkglibdir)/plugins
+
+if BUILD_GPGADDRESS_PLUGIN
+plugin_LTLIBRARIES = gpgaddress.la
+endif
+
+gpgaddress_la_SOURCES = \
+	gpgaddress.c
+
+gpgaddress_la_LDFLAGS = \
+	-lgpgme \
+	-avoid-version -module
+
+AM_CPPFLAGS = \
+	$(GLIB_CFLAGS) \
+	$(GTK_CFLAGS)
+
+INCLUDES = \
+	-I$(top_srcdir)/src \
+	-I$(top_srcdir)/src/common \
+	-I$(top_builddir)/src/common \
+	-I$(top_srcdir)/src/gtk
diff -Naur orig/src/plugins/Makefile.am patched/src/plugins/Makefile.am
--- orig/src/plugins/Makefile.am	2013-12-14 11:15:04.000000000 +0100
+++ patched/src/plugins/Makefile.am	2014-04-24 10:24:47.282675222 +0200
@@ -12,6 +12,7 @@
 	fetchinfo \
 	gdata \
 	geolocation \
+	gpgaddress \
 	mailmbox \
 	newmail \
 	notification \
