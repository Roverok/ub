diff -Naur orig/ChangeLog git/ChangeLog
--- orig/ChangeLog	2011-01-01 11:03:14.000000000 +0100
+++ git/ChangeLog	2013-08-06 05:04:22.629970696 +0200
@@ -1,3 +1,127 @@
+=== xdg-utils 1.1.x ===
+
+2012-10-08 Rex Dieter <rdieter@fedoraproject.org>
+   * xdg-mime does not search mimeinfo.cache (BR31629)
+
+2012-09-16 Rex Dieter <rdieter@fedoraproject.org>
+   * recognize XDG_CURRENT_DESKTOP/DESKTOP_SESSION=MATE (BR54941)
+   * xdg-su: use gnomesu for mate (BR54941)
+
+2012-08-20 Rex Dieter <rdieter@fedoraproject.org>
+   * xdg-su: stop checking xsu (thanks to Jiri Slaby)
+   * xdg-su: use gnomesu for xfce if available (thanks to Jiri Slaby)
+
+2012-08-09 Rex Dieter  <rdieter@fedoraproject.org>
+   * xdg-open fails to open a url in a "generic" environment (BR45859)
+   * xdg-screensaver syntax error if DISPLAY isn't set (BR41144)
+   * do not check for /etc/debian_version before using xdg-open (BR46814)
+   * Setting $BROWSER=xdg-open can cause infinite loop (BR44047)
+
+2012-03-10 Rex Dieter <rdieter@fedoraproject.org>
+   * allow DESKTOP_SESSION='Xfce Session' to match xfce
+
+2012-03-02 Rex Dieter <rdieter@fedoraproject.org>
+   * "unknown DE" improvements (BR45295)
+   * xdg-terminal incompatible with TERM=screen and TERM=rxvt-unicode (BR44357)
+   * xdg-terminal doesn't handle TERM values like TERM=linux (BR44358)
+   * add lubuntu support (BR44775)
+   * xdg-open replaces "&" with "%U" in URLs (BR46002)
+
+2011-12-09 Rex Dieter <rdieter@fedoraproject.org>
+   * initial DE=mate support (mostly just xdg-open so far)
+
+2011-12-07 Rex Dieter <rdieter@fedoraproject.org>
+   * xdg-screensaver: gnome-screensaver detection broken (BR43575)
+   * xdg-open: fix spurious 'x-www-browser: command not found' (RH755553)
+
+2011-09-30 Rex Dieter <rdieter@fedoraproject.org>
+   * xdg-open: use x-scheme-handler/ instead of uri/ (BR35700)
+
+2011-09-28 Rex Dieter <rdieter@fedoraproject.org>
+   * Documentation spelling fixes (BR41193).  Thanks to Ville Skyttä
+   * Fix external links in docs, use <ulink> for them (BR41194). Thanks to
+     Ville Skyttä
+   * Avoid some unnecessary stat calls (BR41195). Thanks to Ville Skyttä
+   * xdg-open: improve debugging output (BR40959)
+   * xdg-open: look up default applications by URI scheme (BR35700) 
+   * xdg-settings: support registering default scheme handler (merge from
+     chromium folks)
+
+2011-08-29 Rex Dieter <rdieter@fedoraproject.org>
+   * xdg-open cant open some valid urls if URL doesnt match existing
+   filename (BR34915).  Thanks to Leho Kraav.
+
+2011-08-27 Rex Dieter <rdieter@fedoraproject.org>
+   * xdg-terminal fails to open terminal on generic desktop (BR40418)
+
+2011-08-12 Rex Dieter <rdieter@fedoraproject.org>
+   * xdg-email fails with unicode strings if using gawk (BR13139)
+   * xdg-email: Thunderbird 5 needs unescaped addresses (BR40041)
+
+2011-08-11 Rex Dieter <rdieter@fedoraproject.org>
+   * xdg-terminal : remove remaining '==' bash'isms (BR38959)
+
+2011-07-19 Rex Dieter <rdieter@fedoraproject.org>
+   * xdg-utils-common.in: support $XDG_CURRENT_DESKTOP
+
+2011-07-13 Rex Dieter <rdieter@fedoraproject.org>
+   * xdg-mime : use 'file --mime-type' instead of 'file -i' (BR39166)
+
+2011-05-10 Rex Dieter <rdieter@fedoraproject.org>
+   * xdg-mime : handle home dirs with spaces, mimeapps.list not existing.  Thanks to Mike Mammarella. 
+
+2011-05-05 Rex Dieter <rdieter@fedoraproject.org>
+   * xdg-utils-common.in : add missing ;;
+
+2011-05-04 Rex Dieter <rdieter@fedoraproject.org>
+   * xdg-utils-common.in : move a couple of utility functions here (from
+   xdg-settings), needed for xdg-email
+   * xdg-utils-common.in : binary_to_desktop_file, handle vendor dirs
+
+2011-04-20 Rex Dieter <rdieter@fedoraproject.org>
+   * xdg-desktop-icon does not work when user desktop dir has spaces (BR36417)
+
+2011-04-14 Rex Dieter <rdieter@fedoraproject.org>
+   * xdg-open does not detect xfce (BR25941)
+   * xdg-open's list of fallback browsers excludes seamonkey (BR33699)
+   * text BROWSER=+elinks
+   * xdg-open is sensitive to default grep options (BR34164)
+   * xdg-{open,email} should try x-www-browser (BR33095)
+   * xdg-email outputs errors with localized KDE4 (BR32924)
+   * xdg-email runs kmailservice with incorrect locale (BR33106)
+   * spurious capture of which in KMIMETYPEFINDER (BR31444)
+
+2011-04-12 Rex Dieter <rdieter@fedoraproject.org>
+   * suppress 'which gnome-default-applications-properties' output.  Thanks to Mike Mammarella.
+
+2011-04-08 Rex Dieter <rdieter@fedoraproject.org>
+   * xdg-mime: add mimeapps.list support. Thanks to Chris Coulson.
+
+2011-03-31 Rex Dieter <rdieter@fedoraproject.org>
+   * Don't overwrite a /usr/share/applications/defaults.list symlink (BR35794)
+   * Use D-Bus API for GNOME screensaver (BR29860)
+   * Initial support for DE=Darwin, Default for $BROWSER under Mac OS (BR35500)
+
+2011-03-28 Rex Dieter <rdieter@fedoraproject.org>
+   * xdg-open cannot detect xfce 4.8 correctly (BR33321)
+   * xdg-mime's info_generic doesn't normalize symlinks (BR33097)
+   * mimetype support for xdg-mime (generic) (BR33094)
+   * open_generic_xdg_mime is broken when a .desktop file 
+     Exec has arguments (BR30453)
+
+2011-02-01 Rex Dieter <rdieter@fedoraproject.org>
+   * add support for GNOME 3.x
+
+2011-01-09 Fathi Boudra <fabo@freedesktop.org>
+   * xdg-email: call kfmclient_fix_exit_code() under KDE 3 only.
+     Thanks to Luc Menut. (BR32924)
+   * xdg-utils-common: set C.UTF-8 locale to make sure the version parsing is
+     done as expected. Under some locales the KDE version string doesn't start
+     with "KDE".
+   * xdg-terminal: Fix failure because the which std output is wrongly
+     redirected to /dev/null in terminal_kde(). Thanks to Luc Menut.
+     (BR32927)
+
 === xdg-utils 1.1.0-rc1 ===
 
 2010-12-31 Fathi Boudra <fabo@freedesktop.org>
diff -Naur orig/Makefile git/Makefile
--- orig/Makefile	2011-01-01 11:09:15.000000000 +0100
+++ git/Makefile	1970-01-01 01:00:00.000000000 +0100
@@ -1,39 +0,0 @@
-SUBDIRS = scripts tests
-
-all:		$(SUBDIRS)
-install:	$(SUBDIRS:%=%/__install__)
-uninstall:	$(SUBDIRS:%=%/__uninstall__)
-test:		dummy
-	cd tests && $(MAKE) test
-clean:		$(SUBDIRS:%=%/__clean__)
-distclean:	clean $(SUBDIRS:%=%/__distclean__)
-	rm -f config.* Makefile
-	rm -rf autom4te.cache
-
-release:	$(SUBDIRS:%=%/__release__) distclean
-	rm -f *~
-
-help:	
-	@echo "Usage: make [install|uninstall|release]"
-
-.PHONY: all install uninstall clean distclean dummy
-dummy:
-
-$(SUBDIRS): dummy
-	@cd $@ && $(MAKE)
-
-$(SUBDIRS:%=%/__uninstall__): dummy
-	cd `dirname $@` && $(MAKE) uninstall
-
-$(SUBDIRS:%=%/__install__): dummy
-	cd `dirname $@` && $(MAKE) install
-
-$(SUBDIRS:%=%/__clean__): dummy
-	cd `dirname $@` && $(MAKE) clean
-
-$(SUBDIRS:%=%/__release__): dummy
-	cd `dirname $@` && $(MAKE) release
-
-$(SUBDIRS:%=%/__distclean__): dummy
-	cd `dirname $@` && $(MAKE) distclean
-
diff -Naur orig/README git/README
--- orig/README	2011-01-01 11:03:14.000000000 +0100
+++ git/README	2013-08-06 05:04:22.629970696 +0200
@@ -90,7 +90,7 @@
 and then invoking them without a specific path name.
 
 That will allow your users and their system providers to
-use custom versions of the xdg-utils to adjust for system spsecific
+use custom versions of the xdg-utils to adjust for system specific
 differences.
 
 If you wish to absolutely force the issue and only use the versions
diff -Naur orig/scripts/desc/xdg-copy.xml git/scripts/desc/xdg-copy.xml
--- orig/scripts/desc/xdg-copy.xml	1970-01-01 01:00:00.000000000 +0100
+++ git/scripts/desc/xdg-copy.xml	2013-08-06 05:04:22.629970696 +0200
@@ -0,0 +1,153 @@
+<?xml version="1.0"?>
+<?xml-stylesheet type="text/xsl"
+   href="http://docbook.sourceforge.net/release/xsl/current/manpages/docbook.xsl"?>
+<!DOCTYPE refentry PUBLIC "-//OASIS//DTD DocBook XML V4.1.2//EN"
+    "http://www.oasis-open.org/docbook/xml/4.1.2/docbookx.dtd" [
+]>
+<refentry id="xdg-copy">
+  <refentryinfo>
+    <title>xdg-copy Manual</title>
+    <copyright>
+      <year>2006</year>
+    </copyright>
+    <author>
+      <firstname>Kevin</firstname>
+      <surname>Krammer</surname>
+    </author>
+    <address><email>kevin.krammer@gmx.at</email></address>
+    <author>
+      <firstname>Jeremy</firstname>
+      <surname>White</surname>
+    </author>
+    <address><email>jwhite@codeweavers.com</email></address>
+    <releaseinfo>This is release 0.5 of the xdg-copy Manual.</releaseinfo>
+  </refentryinfo>
+
+  <refmeta>
+    <refentrytitle>xdg-copy</refentrytitle>
+    <manvolnum>1</manvolnum>
+  </refmeta>
+
+  <refnamediv>
+    <refname>xdg-copy</refname>
+    <refpurpose>command line tool for copying files between desktop URIs</refpurpose>
+  </refnamediv>
+
+  <refsynopsisdiv>
+    <cmdsynopsis>
+      <command>xdg-copy</command>
+      <arg choice="plain"><option><replaceable>source</replaceable></option></arg>
+      <arg choice="plain"><option><replaceable>destination</replaceable></option></arg>
+    </cmdsynopsis>
+    <cmdsynopsis>
+      <command>xdg-copy</command>
+      <group choice="req">
+        <arg choice="plain"><option>--help</option></arg>
+        <arg choice="plain"><option>--manual</option></arg>
+        <arg choice="plain"><option>--version</option></arg>
+      </group>
+    </cmdsynopsis>
+  </refsynopsisdiv>
+
+  <refsect1 id="description">
+    <title>Description</title>
+    <para>
+      xdg-copy copies <replaceable>source</replaceable> to
+      <replaceable>destination</replaceable> and provides visual feedback to
+      the user during the operation. Both <replaceable>source</replaceable>
+      and <replaceable>destination</replaceable> can either be a file or
+      URL. Supported URL types are file, ftp, http and https. Additional
+      URL types may be supported depending on the desktop environment.
+    </para>
+    <para>
+      xdg-copy is for use inside a desktop session only.
+      It is not recommended to use xdg-copy as root.
+    </para>
+  </refsect1>
+  <refsect1 id="options">
+    <title>Options</title>
+    <variablelist>
+      <varlistentry>
+	<term><option>--help</option></term>
+	<listitem>
+	  <simpara>
+	    Show command synopsis.
+	  </simpara>
+	</listitem>
+      </varlistentry>
+
+      <varlistentry>
+	<term><option>--manual</option></term>
+	<listitem>
+	  <simpara>
+	    Show this manual page.
+	  </simpara>
+	</listitem>
+      </varlistentry>
+
+      <varlistentry>
+        <term><option>--version</option></term>
+        <listitem>
+          <simpara>
+            Show the xdg-utils version information.
+          </simpara>
+        </listitem>
+      </varlistentry>
+
+    </variablelist>
+  </refsect1>
+  <refsect1 id="exitcodes">
+    <title>Exit Codes</title>
+    <para>
+      An exit code of 0 indicates success while a non-zero exit code
+      indicates failure. The following failure codes can be returned:
+    </para>
+    <variablelist>
+      <varlistentry>
+	<term><option>1</option></term>
+	<listitem>
+	  <simpara>
+	    Error in command line syntax.
+	  </simpara>
+	</listitem>
+      </varlistentry>
+      <varlistentry>
+	<term><option>2</option></term>
+	<listitem>
+	  <simpara>
+	    One of the files passed on the command line did not exist.
+	  </simpara>
+	</listitem>
+      </varlistentry>
+      <varlistentry>
+	<term><option>3</option></term>
+	<listitem>
+	  <simpara>
+	    A required tool could not be found. 
+	  </simpara>
+	</listitem>
+      </varlistentry>
+      <varlistentry>
+	<term><option>4</option></term>
+	<listitem>
+	  <simpara>
+	    The action failed. 
+	  </simpara>
+	</listitem>
+      </varlistentry>
+    </variablelist>
+  </refsect1>
+  <refsect1 id="examples">
+    <title>Examples</title>
+    <para>
+<programlisting>
+xdg-copy "http://portland.freedesktop.org/png/freedesktop-logo.png" .
+</programlisting>
+    </para>
+    <para>
+<programlisting>
+xdg-copy "/tmp/foobar.png" "/home/user/foobar-copy.png"
+</programlisting>
+    </para>
+  </refsect1>
+</refentry>
diff -Naur orig/scripts/desc/xdg-desktop-icon.xml git/scripts/desc/xdg-desktop-icon.xml
--- orig/scripts/desc/xdg-desktop-icon.xml	1970-01-01 01:00:00.000000000 +0100
+++ git/scripts/desc/xdg-desktop-icon.xml	2013-08-06 05:04:22.633970726 +0200
@@ -0,0 +1,364 @@
+<?xml version="1.0"?>
+<?xml-stylesheet type="text/xsl"
+   href="http://docbook.sourceforge.net/release/xsl/current/manpages/docbook.xsl"?>
+<!DOCTYPE refentry PUBLIC "-//OASIS//DTD DocBook XML V4.1.2//EN"
+    "http://www.oasis-open.org/docbook/xml/4.1.2/docbookx.dtd" [
+]>
+<refentry id="xdg-desktop-icon">
+  <refentryinfo>
+    <title>xdg-desktop-icon Manual</title>
+    <copyright>
+      <year>2006</year>
+    </copyright>
+    <author>
+      <firstname>Kevin</firstname>
+      <surname>Krammer</surname>
+    </author>
+    <address><email>kevin.krammer@gmx.at</email></address>
+    <author>
+      <firstname>Jeremy</firstname>
+      <surname>White</surname>
+    </author>
+    <address><email>jwhite@codeweavers.com</email></address>
+    <releaseinfo>xdg-utils 1.0</releaseinfo>
+  </refentryinfo>
+
+  <refmeta>
+    <refentrytitle>xdg-desktop-icon</refentrytitle>
+    <manvolnum>1</manvolnum>
+  </refmeta>
+
+  <refnamediv>
+    <refname>xdg-desktop-icon</refname>
+    <refpurpose>command line tool for (un)installing icons to the desktop</refpurpose>
+  </refnamediv>
+
+  <refsynopsisdiv>
+    <cmdsynopsis>
+      <command>xdg-desktop-icon</command>
+      <arg choice="plain">install</arg>
+      <arg><option>--novendor</option></arg>
+      <arg choice="plain"><replaceable>FILE</replaceable></arg>
+    </cmdsynopsis>
+    <cmdsynopsis>
+      <command>xdg-desktop-icon</command>
+      <arg choice="plain">uninstall</arg>
+      <arg choice="plain"><replaceable>FILE</replaceable></arg>
+    </cmdsynopsis>
+    <cmdsynopsis>
+      <command>xdg-desktop-icon</command>
+      <group choice="req">
+        <arg choice="plain"><option>--help</option></arg>
+        <arg choice="plain"><option>--manual</option></arg>
+        <arg choice="plain"><option>--version</option></arg>
+      </group>
+    </cmdsynopsis>
+  </refsynopsisdiv>
+
+  <refsect1 id="description">
+    <title>Description</title>
+    <para>
+      The xdg-desktop-icon program can be used to install an application launcher
+      or other file on the desktop of the current user.
+    </para>
+    <para>
+      An application launcher is represented by a *.desktop file.
+      Desktop files are defined by the freedesktop.org Desktop Entry
+      Specification. The most important aspects of *.desktop files
+      are summarized below.
+    </para>
+  </refsect1>
+  <refsect1 id="commands">
+    <title>Commands</title>
+    <variablelist>
+      <varlistentry>
+	<term>install</term>
+	<listitem>
+	  <simpara>
+	    Installs <replaceable>FILE</replaceable> to the desktop of the current user.
+	    <replaceable>FILE</replaceable> can be a *.desktop file or any
+            other type of file.
+	  </simpara>
+	</listitem>
+      </varlistentry>
+
+      <varlistentry>
+	<term>uninstall</term>
+	<listitem>
+	  <simpara>
+	    Removes <replaceable>FILE</replaceable> from the desktop
+            of the current user.
+	  </simpara>
+	</listitem>
+      </varlistentry>
+    </variablelist>
+  </refsect1>
+  <refsect1 id="options">
+    <title>Options</title>
+    <variablelist>
+      <varlistentry>
+	<term><option>--novendor</option></term>
+	<listitem>
+	  <simpara>
+	    Normally, xdg-desktop-icon checks to ensure that a *.desktop file
+	    to be installed has a vendor prefix. This option can be
+	    used to disable that check.
+	  </simpara>
+	  <simpara>
+            A vendor prefix consists of alpha characters ([a-zA-Z]) and is
+            terminated with a dash ("-").
+            Companies and organizations are encouraged to use a word
+            or phrase, preferably the organizations name, for which they hold
+            a trademark as their vendor prefix.
+            The purpose of the vendor prefix is to prevent name conflicts.
+          </simpara>
+	</listitem>
+      </varlistentry>
+
+      <varlistentry>
+	<term><option>--help</option></term>
+	<listitem>
+	  <simpara>
+	    Show command synopsis.
+	  </simpara>
+	</listitem>
+      </varlistentry>
+
+      <varlistentry>
+	<term><option>--manual</option></term>
+	<listitem>
+	  <simpara>
+	    Show this manual page.
+	  </simpara>
+	</listitem>
+      </varlistentry>
+
+      <varlistentry>
+        <term><option>--version</option></term>
+        <listitem>
+          <simpara>
+            Show the xdg-utils version information.
+          </simpara>
+        </listitem>
+      </varlistentry>
+
+    </variablelist>
+  </refsect1>
+  <refsect1 id="desktopfiles">
+    <title>Desktop Files</title>
+    <para>
+      An application launcher can be added to the desktop by installing a
+      *.desktop file. A *.desktop file consists of a
+      <emphasis>[Desktop Entry]</emphasis> header followed by several
+      <replaceable>Key</replaceable>=<replaceable>Value</replaceable> lines.
+    </para>
+    <para>
+      A *.desktop file can provide a name and description for an application
+      in several different languages. This is done by adding a language
+      code as used by LC_MESSAGES in square brackets behind the 
+      <replaceable>Key</replaceable>. This way one can specify different
+      values for the same <replaceable>Key</replaceable> depending on the
+      currently selected language.
+    </para>
+    <para>
+      The following keys are often used:
+    </para>
+    <variablelist>
+      <varlistentry>
+	<term>Value=1.0</term>
+	<listitem>
+	  <simpara>
+	    This is a mandatory field to indicate that the *.desktop file
+	    follows the 1.0 version of the specification.
+	  </simpara>
+	</listitem>
+      </varlistentry>
+
+      <varlistentry>
+	<term>Type=Application</term>
+	<listitem>
+	  <simpara>
+	    This is a mandatory field that indicates that the *.desktop file
+	    describes an application launcher.
+	  </simpara>
+	</listitem>
+      </varlistentry>
+
+      <varlistentry>
+	<term>Name=<replaceable>Application Name</replaceable></term>
+	<listitem>
+	  <simpara>
+	    The name of the application.
+	    For example <emphasis>Mozilla</emphasis>
+	  </simpara>
+	</listitem>
+      </varlistentry>
+
+      <varlistentry>
+	<term>GenericName=<replaceable>Generic Name</replaceable></term>
+	<listitem>
+	  <simpara>
+	    A generic description of the application.
+	    For example <emphasis>Web Browser</emphasis>
+	  </simpara>
+	</listitem>
+      </varlistentry>
+
+      <varlistentry>
+	<term>Comment=<replaceable>Comment</replaceable></term>
+	<listitem>
+	  <simpara>
+	    Optional field to specify a tooltip for the application. 
+	    For example <emphasis>Visit websites on the Internet</emphasis>
+	  </simpara>
+	</listitem>
+      </varlistentry>
+
+      <varlistentry>
+	<term>Icon=<replaceable>Icon File</replaceable></term>
+	<listitem>
+	  <simpara>
+	    The icon to use for the application. This can either be
+	    an absolute path to an image file or an icon-name.
+	    If an icon-name is provided an image lookup by name is done
+	    in the user's current icon theme. The <command>xdg-icon-resource</command>
+	    command can be used to install image files into icon themes.
+	    The advantage of using an icon-name instead of an absolute
+	    path is that with an icon-name the application icon can be
+	    provided in several different sizes as well as in several
+	    differently themed styles.
+	  </simpara>
+	</listitem>
+      </varlistentry>
+
+      <varlistentry>
+	<term>Exec=<replaceable>Command Line</replaceable></term>
+	<listitem>
+	  <simpara>
+	    The command line to start the application. If the application
+	    can open files the %f placeholder should be specified. When
+	    a file is dropped on the application launcher the %f is replaced
+	    with the file path of the dropped file. If multiple files
+	    can be specified on the command line the %F placeholder should
+	    be used instead of %f. If the application is able to open URLs
+	    in addition to local files then  %u or %U can be used instead
+	    of %f or %F.
+	  </simpara>
+	</listitem>
+      </varlistentry>
+    </variablelist>
+    <para>
+      For a complete overview of the *.desktop file format please
+      visit <ulink url="http://www.freedesktop.org/wiki/Specifications/desktop-entry-spec"/>
+    </para>
+  </refsect1>
+  <refsect1 id="env_vars">
+    <title>Environment Variables</title>
+    <para>
+      xdg-desktop-icon honours the following environment variables:
+    </para>
+    <variablelist>
+      <varlistentry>
+	<term>XDG_UTILS_DEBUG_LEVEL</term>
+	<listitem>
+	  <simpara>
+	    Setting this environment variable to a non-zero numerical value
+	    makes xdg-desktop-icon do more verbose reporting on stderr.
+	    Setting a higher value increases the verbosity.
+	  </simpara>
+	</listitem>
+      </varlistentry>
+    </variablelist>
+  </refsect1>
+  <refsect1 id="exitcodes">
+    <title>Exit Codes</title>
+    <para>
+      An exit code of 0 indicates success while a non-zero exit code
+      indicates failure. The following failure codes can be returned:
+    </para>
+    <variablelist>
+      <varlistentry>
+	<term><option>1</option></term>
+	<listitem>
+	  <simpara>
+	    Error in command line syntax.
+	  </simpara>
+	</listitem>
+      </varlistentry>
+      <varlistentry>
+	<term><option>2</option></term>
+	<listitem>
+	  <simpara>
+	    One of the files passed on the command line did not exist.
+	  </simpara>
+	</listitem>
+      </varlistentry>
+      <varlistentry>
+	<term><option>3</option></term>
+	<listitem>
+	  <simpara>
+	    A required tool could not be found. 
+	  </simpara>
+	</listitem>
+      </varlistentry>
+      <varlistentry>
+	<term><option>4</option></term>
+	<listitem>
+	  <simpara>
+	    The action failed. 
+	  </simpara>
+	</listitem>
+      </varlistentry>
+      <varlistentry>
+	<term><option>5</option></term>
+	<listitem>
+	  <simpara>
+	    No permission to read one of the files passed on the command
+            line.
+	  </simpara>
+	</listitem>
+      </varlistentry>
+    </variablelist>
+  </refsect1>
+  <refsect1 id="seealso">
+    <title>See Also</title>
+    <para><citerefentry><refentrytitle>xdg-icon-resource</refentrytitle>
+        <manvolnum>1</manvolnum>
+      </citerefentry>
+    </para>
+  </refsect1>
+  <refsect1 id="examples">
+    <title>Examples</title>
+    <para>
+      The company ShinyThings Inc. has developed an application named
+      "WebMirror" and would like to add a launcher for for on the desktop.
+      The company will use "shinythings" as its vendor id.
+      In order to add the application to the desktop there needs to be a
+      .desktop file for the application:
+<programlisting>
+shinythings-webmirror.desktop:
+
+  [Desktop Entry]
+  Encoding=UTF-8
+  Type=Application
+
+  Exec=webmirror
+  Icon=shinythings-webmirror
+
+  Name=WebMirror
+  Name[nl]=WebSpiegel
+</programlisting>
+    </para>
+    <para>Now the xdg-desktop-icon tool can be used to add the webmirror.desktop file
+    to the desktop:
+<programlisting>
+xdg-desktop-icon install ./shinythings-webmirror.desktop
+</programlisting>
+    </para>
+    <para>To add a README file to the desktop as well, the following command can be used:  
+<programlisting>
+xdg-desktop-icon install ./shinythings-README
+</programlisting>
+    </para>
+  </refsect1>
+</refentry>
diff -Naur orig/scripts/desc/xdg-desktop-menu.xml git/scripts/desc/xdg-desktop-menu.xml
--- orig/scripts/desc/xdg-desktop-menu.xml	1970-01-01 01:00:00.000000000 +0100
+++ git/scripts/desc/xdg-desktop-menu.xml	2013-08-06 05:04:22.633970726 +0200
@@ -0,0 +1,685 @@
+<?xml version="1.0"?>
+<?xml-stylesheet type="text/xsl"
+   href="http://docbook.sourceforge.net/release/xsl/current/manpages/docbook.xsl"?>
+<!DOCTYPE refentry PUBLIC "-//OASIS//DTD DocBook XML V4.1.2//EN"
+    "http://www.oasis-open.org/docbook/xml/4.1.2/docbookx.dtd" [
+]>
+<refentry id="xdg-desktop-menu">
+  <refentryinfo>
+    <title>xdg-desktop-menu Manual</title>
+    <copyright>
+      <year>2006</year>
+    </copyright>
+    <author>
+      <firstname>Kevin</firstname>
+      <surname>Krammer</surname>
+    </author>
+    <address><email>kevin.krammer@gmx.at</email></address>
+    <author>
+      <firstname>Jeremy</firstname>
+      <surname>White</surname>
+    </author>
+    <address><email>jwhite@codeweavers.com</email></address>
+    <releaseinfo>xdg-utils 1.0</releaseinfo>
+  </refentryinfo>
+
+  <refmeta>
+    <refentrytitle>xdg-desktop-menu</refentrytitle>
+    <manvolnum>1</manvolnum>
+  </refmeta>
+
+  <refnamediv>
+    <refname>xdg-desktop-menu</refname>
+    <refpurpose>command line tool for (un)installing desktop menu items</refpurpose>
+  </refnamediv>
+
+  <refsynopsisdiv>
+    <cmdsynopsis>
+      <command>xdg-desktop-menu</command>
+      <arg choice="plain">install</arg>
+      <arg><option>--noupdate</option></arg>
+      <arg><option>--novendor</option></arg>
+      <arg><option>--mode <replaceable>mode</replaceable></option></arg>
+      <arg choice="plain"><replaceable>directory-file(s)</replaceable></arg>
+      <arg choice="plain"><replaceable>desktop-file(s)</replaceable></arg>
+    </cmdsynopsis>
+    <cmdsynopsis>
+      <command>xdg-desktop-menu</command>
+      <arg choice="plain">uninstall</arg>
+      <arg><option>--noupdate</option></arg>
+      <arg><option>--mode <replaceable>mode</replaceable></option></arg>
+      <arg choice="plain"><replaceable>directory-file(s)</replaceable></arg>
+      <arg choice="plain"><replaceable>desktop-file(s)</replaceable></arg>
+    </cmdsynopsis>
+    <cmdsynopsis>
+      <command>xdg-desktop-menu</command>
+      <arg choice="plain">forceupdate</arg>
+      <arg><option>--mode <replaceable>mode</replaceable></option></arg>
+    </cmdsynopsis>
+    <cmdsynopsis>
+      <command>xdg-desktop-menu</command>
+      <group choice="req">
+	<arg choice="plain"><option>--help</option></arg>
+        <arg choice="plain"><option>--manual</option></arg>
+	<arg choice="plain"><option>--version</option></arg>
+      </group>
+    </cmdsynopsis>
+  </refsynopsisdiv>
+
+  <refsect1 id="description">
+    <title>Description</title>
+    <para>
+      The xdg-desktop-menu program can be used to install new menu entries
+      to the desktop's application menu.
+    </para>
+    <para>
+      The application menu works according to the
+      XDG Desktop Menu Specification at
+      <ulink url="http://www.freedesktop.org/wiki/Specifications/menu-spec"/>
+    </para>
+  </refsect1>
+  <refsect1 id="commands">
+    <title>Commands</title>
+    <variablelist>
+      <varlistentry>
+	<term>install</term>
+	<listitem>
+	  <simpara>
+	    Install one or more applications in a submenu of
+	    the desktop menu system.
+	  </simpara>
+	  <simpara><replaceable>desktop-file</replaceable>:
+            A desktop file represents a single menu entry in the menu.
+            Desktop files are defined by the freedesktop.org Desktop Entry
+            Specification. The most important aspects of *.desktop
+            files are summarized below.
+	  </simpara>
+	  <simpara>
+            Menu entries can be added to the menu system in two different
+            ways. They can either be added to a predefined submenu in the
+            menu system based on one or more category keywords, or they can
+            be added to a new submenu. 
+	  </simpara>
+	  <simpara>
+	    To add a menu entry to a predefined submenu the desktop file
+	    that represents the menu entry must have a Categories= entry
+	    that lists one or more keywords. The menu item will be included
+	    in an appropriate submenu based on the included keywords.
+	  </simpara>
+	  <simpara>
+            To add menu items to a new submenu the desktop-files must be
+            preceded by a directory-file that describes the submenu.
+            If multiple desktop-files are specified, all entries will
+            be added to the same menu. If entries are installed to a menu
+            that has been created with a previous call to
+            <command>xdg-desktop-menu</command> the entries will be
+            installed in addition to any already existing entries.
+	  </simpara>
+	  <simpara><replaceable>directory-file</replaceable>:
+	    The *.directory file indicated by
+	    <replaceable>directory-file</replaceable> represents a submenu.
+	    The directory file provides the name and icon for a submenu. The
+	    name of the directory file is used to identify the submenu. 
+	  </simpara>
+	  <simpara>
+	    If multiple directory files are provided each file will
+	    represent a submenu within the menu that precedes it, creating
+	    a nested menu hierarchy (sub-sub-menus).
+	    The menu entries themselves will be added to the last submenu.
+	  </simpara>
+	  <simpara>
+            Directory files follow the syntax defined by the freedesktop.org
+            Desktop Entry Specification.
+	  </simpara>
+	</listitem>
+      </varlistentry>
+
+      <varlistentry>
+	<term>uninstall</term>
+	<listitem>
+	  <simpara>
+	    Remove applications or submenus from the desktop menu system
+            previously installed with <command>xdg-desktop-menu install</command>.
+	  </simpara>
+	  <simpara>
+	    A submenu and the associated directory file is only removed
+	    when the submenu no longer contains any menu entries.
+	  </simpara>
+	</listitem>
+      </varlistentry>
+
+      <varlistentry>
+	<term>forceupdate</term>
+	<listitem>
+	  <simpara>
+	    Force an update of the menu system.
+	  </simpara>
+	  <simpara>
+	    This command is only useful if the last call to
+	    xdg-desktop-menu included the <option>--noupdate</option> option.
+	  </simpara>
+	</listitem>
+      </varlistentry>
+    </variablelist>
+  </refsect1>
+  <refsect1 id="options">
+    <title>Options</title>
+    <variablelist>
+      <varlistentry>
+	<term><option>--noupdate</option></term>
+	<listitem>
+	  <simpara>
+	    Postpone updating the menu system. If multiple updates to the
+            menu system are made in sequence this flag can be used to
+            indicate that additional changes will follow and that it is not
+            necessary to update the menu system right away.
+	  </simpara>
+	</listitem>
+      </varlistentry>
+
+      <varlistentry>
+	<term><option>--novendor</option></term>
+	<listitem>
+	  <simpara>
+	    Normally, xdg-desktop-menu checks to ensure that any *.directory
+	    and *.desktop files to be installed has a vendor prefix.
+	    This option can be used to disable that check.
+	  </simpara>
+	  <simpara>
+            A vendor prefix consists of alpha characters ([a-zA-Z]) and is
+            terminated with a dash ("-").
+            Companies and organizations are encouraged to use a word
+            or phrase, preferably the organizations name, for which they hold
+            a trademark as their vendor prefix.
+            The purpose of the vendor prefix is to prevent name conflicts.
+          </simpara>
+	</listitem>
+      </varlistentry>
+
+      <varlistentry>
+	<term><option>--mode</option> <replaceable>mode</replaceable></term>
+	<listitem>
+	  <simpara><replaceable>mode</replaceable> can be
+            <emphasis>user</emphasis> or <emphasis>system</emphasis>.
+            In user mode the file is (un)installed for the current user
+            only. In system mode the file is (un)installed for all users
+            on the system. Usually only root is allowed to install in
+            system mode.
+	  </simpara>
+	  <simpara>
+	    The default is to use system mode when called by root
+	    and to use user mode when called by a non-root user.
+	  </simpara>
+	</listitem>
+      </varlistentry>
+
+      <varlistentry>
+	<term><option>--help</option></term>
+	<listitem>
+	  <simpara>
+	    Show command synopsis.
+	  </simpara>
+	</listitem>
+      </varlistentry>
+
+      <varlistentry>
+	<term><option>--manual</option></term>
+	<listitem>
+	  <simpara>
+	    Show this manual page.
+	  </simpara>
+	</listitem>
+      </varlistentry>
+
+      <varlistentry>
+        <term><option>--version</option></term>
+        <listitem>
+          <simpara>
+            Show the xdg-utils version information.
+          </simpara>
+        </listitem>
+      </varlistentry>
+
+    </variablelist>
+  </refsect1>
+  <refsect1 id="desktopfiles">
+    <title>Desktop Files</title>
+    <para>
+      An application item in the application menu is represented by a
+      *.desktop file. A *.desktop file consists of a
+      <emphasis>[Desktop Entry]</emphasis> header followed by several
+      <replaceable>Key</replaceable>=<replaceable>Value</replaceable> lines.
+    </para>
+    <para>
+      A *.desktop file can provide a name and description for an application
+      in several different languages. This is done by adding a language
+      code as used by LC_MESSAGES in square brackets behind the 
+      <replaceable>Key</replaceable>. This way one can specify different
+      values for the same <replaceable>Key</replaceable> depending on the
+      currently selected language.
+    </para>
+    <para>
+      The following keys are often used:
+    </para>
+    <variablelist>
+      <varlistentry>
+	<term>Value=1.0</term>
+	<listitem>
+	  <simpara>
+	    This is a mandatory field to indicate that the *.desktop file
+	    follows the 1.0 version of the specification.
+	  </simpara>
+	</listitem>
+      </varlistentry>
+
+      <varlistentry>
+	<term>Type=Application</term>
+	<listitem>
+	  <simpara>
+	    This is a mandatory field that indicates that the *.desktop file
+	    describes an application launcher.
+	  </simpara>
+	</listitem>
+      </varlistentry>
+
+      <varlistentry>
+	<term>Name=<replaceable>Application Name</replaceable></term>
+	<listitem>
+	  <simpara>
+	    The name of the application.
+	    For example <emphasis>Mozilla</emphasis>
+	  </simpara>
+	</listitem>
+      </varlistentry>
+
+      <varlistentry>
+	<term>GenericName=<replaceable>Generic Name</replaceable></term>
+	<listitem>
+	  <simpara>
+	    A generic description of the application.
+	    For example <emphasis>Web Browser</emphasis>
+	  </simpara>
+	</listitem>
+      </varlistentry>
+
+      <varlistentry>
+	<term>Comment=<replaceable>Comment</replaceable></term>
+	<listitem>
+	  <simpara>
+	    Optional field to specify a tooltip for the application. 
+	    For example <emphasis>Visit websites on the Internet</emphasis>
+	  </simpara>
+	</listitem>
+      </varlistentry>
+
+      <varlistentry>
+	<term>Icon=<replaceable>Icon File</replaceable></term>
+	<listitem>
+	  <simpara>
+	    The icon to use for the application. This can either be
+	    an absolute path to an image file or an icon-name.
+	    If an icon-name is provided an image lookup by name is done
+	    in the user's current icon theme. The <command>xdg-icon-resource</command>
+	    command can be used to install image files into icon themes.
+	    The advantage of using an icon-name instead of an absolute
+	    path is that with an icon-name the application icon can be
+	    provided in several different sizes as well as in several
+	    differently themed styles.
+	  </simpara>
+	</listitem>
+      </varlistentry>
+
+      <varlistentry>
+	<term>Exec=<replaceable>Command Line</replaceable></term>
+	<listitem>
+	  <simpara>
+	    The command line to start the application. If the application
+	    can open files the %f placeholder should be specified. When
+	    a file is dropped on the application launcher the %f is replaced
+	    with the file path of the dropped file. If multiple files
+	    can be specified on the command line the %F placeholder should
+	    be used instead of %f. If the application is able to open URLs
+	    in addition to local files then  %u or %U can be used instead
+	    of %f or %F.
+	  </simpara>
+	</listitem>
+      </varlistentry>
+
+      <varlistentry>
+	<term>Categories=<replaceable>Categories</replaceable></term>
+	<listitem>
+	  <simpara>
+	    A list of categories separated by semi-colons. A category is
+	    a keyword that describes and classifies the application.
+	    By default applications are organized in the application menu
+            based on category. When menu entries are explicitly assigned
+            to a new submenu it is not necessary to list any categories.
+          </simpara>
+          <simpara>
+            When using categories it is recommended to include
+            one of the following categories:
+            AudioVideo, Development, Education, Game, Graphics, Network, 
+            Office, Settings, System, Utility.
+          </simpara>
+          <simpara>
+            See Appendix A of the XDG Desktop Menu Specification
+            for information about additional categories:
+            <ulink url="http://standards.freedesktop.org/menu-spec/menu-spec-1.0.html#category-registry"/>
+	  </simpara>
+	</listitem>
+      </varlistentry>
+
+      <varlistentry>
+	<term>MimeType=<replaceable>Mimetypes</replaceable></term>
+	<listitem>
+	  <simpara>
+	    A list of mimetypes separated by semi-colons. This field is
+	    used to indicate which file types the application is able to
+	    open.
+	  </simpara>
+	</listitem>
+      </varlistentry>
+    </variablelist>
+    <para>
+      For a complete overview of the *.desktop file format please
+      visit <ulink url="http://www.freedesktop.org/wiki/Specifications/desktop-entry-spec"/>
+    </para>
+  </refsect1>
+  <refsect1 id="directoryfiles">
+    <title>Directory Files</title>
+    <para>
+      The appearance of submenu in the application menu is
+      provided by a *.directory file. In particular it provides the title
+      of the submenu and a possible icon. A *.directory file consists of a
+      <emphasis>[Desktop Entry]</emphasis> header followed by several
+      <replaceable>Key</replaceable>=<replaceable>Value</replaceable> lines.
+    </para>
+    <para>
+      A *.directory file can provide a title (name) for the submenu
+      in several different languages. This is done by adding a language
+      code as used by LC_MESSAGES in square brackets behind the 
+      <replaceable>Key</replaceable>. This way one can specify different
+      values for the same <replaceable>Key</replaceable> depending on the
+      currently selected language.
+    </para>
+    <para>
+      The following keys are relevant for submenus:
+    </para>
+    <variablelist>
+      <varlistentry>
+	<term>Value=1.0</term>
+	<listitem>
+	  <simpara>
+	    This is a mandatory field to indicate that the *.directory file
+	    follows the 1.0 version of the Desktop Entry specification.
+	  </simpara>
+	</listitem>
+      </varlistentry>
+
+      <varlistentry>
+	<term>Type=Directory</term>
+	<listitem>
+	  <simpara>
+	    This is a mandatory field that indicates that the *.directory file
+	    describes a submenu.
+	  </simpara>
+	</listitem>
+      </varlistentry>
+
+      <varlistentry>
+	<term>Name=<replaceable>Menu Name</replaceable></term>
+	<listitem>
+	  <simpara>
+	    The title of submenu.
+	    For example <emphasis>Mozilla</emphasis>
+	  </simpara>
+	</listitem>
+      </varlistentry>
+
+      <varlistentry>
+	<term>Comment=<replaceable>Comment</replaceable></term>
+	<listitem>
+	  <simpara>
+	    Optional field to specify a tooltip for the submenu. 
+	  </simpara>
+	</listitem>
+      </varlistentry>
+
+      <varlistentry>
+	<term>Icon=<replaceable>Icon File</replaceable></term>
+	<listitem>
+	  <simpara>
+	    The icon to use for the submenu. This can either be
+	    an absolute path to an image file or an icon-name.
+	    If an icon-name is provided an image lookup by name is done
+	    in the user's current icon theme.
+	    The <command>xdg-icon-resource</command>
+	    command can be used to install image files into icon themes.
+	    The advantage of using an icon-name instead of an absolute
+	    path is that with an icon-name the submenu icon can be
+	    provided in several different sizes as well as in several
+	    differently themed styles.
+	  </simpara>
+	</listitem>
+      </varlistentry>
+
+    </variablelist>
+  </refsect1>
+  <refsect1 id="env_vars">
+    <title>Environment Variables</title>
+    <para>
+      xdg-desktop-menu honours the following environment variables:
+    </para>
+    <variablelist>
+      <varlistentry>
+	<term>XDG_UTILS_DEBUG_LEVEL</term>
+	<listitem>
+	  <simpara>
+	    Setting this environment variable to a non-zero numerical value
+	    makes xdg-desktop-menu do more verbose reporting on stderr.
+	    Setting a higher value increases the verbosity.
+	  </simpara>
+	</listitem>
+      </varlistentry>
+      <varlistentry>
+	<term>XDG_UTILS_INSTALL_MODE</term>
+	<listitem>
+	  <simpara>
+	    This environment variable can be used by the user or
+            administrator to override the installation mode.
+	    Valid values are <emphasis>user</emphasis> and
+            <emphasis>system</emphasis>.  
+	  </simpara>
+	</listitem>
+      </varlistentry>
+    </variablelist>
+  </refsect1>
+
+  <refsect1 id="exitcodes">
+    <title>Exit Codes</title>
+    <para>
+      An exit code of 0 indicates success while a non-zero exit code
+      indicates failure. The following failure codes can be returned:
+    </para>
+    <variablelist>
+      <varlistentry>
+	<term><option>1</option></term>
+	<listitem>
+	  <simpara>
+	    Error in command line syntax.
+	  </simpara>
+	</listitem>
+      </varlistentry>
+      <varlistentry>
+	<term><option>2</option></term>
+	<listitem>
+	  <simpara>
+	    One of the files passed on the command line did not exist.
+	  </simpara>
+	</listitem>
+      </varlistentry>
+      <varlistentry>
+	<term><option>3</option></term>
+	<listitem>
+	  <simpara>
+	    A required tool could not be found. 
+	  </simpara>
+	</listitem>
+      </varlistentry>
+      <varlistentry>
+	<term><option>4</option></term>
+	<listitem>
+	  <simpara>
+	    The action failed. 
+	  </simpara>
+	</listitem>
+      </varlistentry>
+      <varlistentry>
+	<term><option>5</option></term>
+	<listitem>
+	  <simpara>
+	    No permission to read one of the files passed on the command
+            line.
+	  </simpara>
+	</listitem>
+      </varlistentry>
+    </variablelist>
+  </refsect1>
+  <refsect1 id="seealso">
+    <title>See Also</title>
+    <para><citerefentry><refentrytitle>xdg-desktop-icon</refentrytitle>
+        <manvolnum>1</manvolnum>
+      </citerefentry>,
+      <citerefentry><refentrytitle>xdg-icon-resource</refentrytitle>
+        <manvolnum>1</manvolnum>
+      </citerefentry>,
+      <citerefentry><refentrytitle>xdg-mime</refentrytitle>
+        <manvolnum>1</manvolnum>
+      </citerefentry>
+    </para>
+  </refsect1>
+  <refsect1 id="examples">
+    <title>Examples</title>
+
+    <para>
+      The company ShinyThings Inc. has developed an application named
+      "WebMirror" and would like to add it to the application menu.
+      The company will use "shinythings" as its vendor id.
+      In order to add the application to the menu there needs to be a
+      .desktop file with a suitable <emphasis>Categories</emphasis> entry:
+<programlisting>
+shinythings-webmirror.desktop:
+
+  [Desktop Entry]
+  Encoding=UTF-8
+  Type=Application
+
+  Exec=webmirror
+  Icon=webmirror
+
+  Name=WebMirror
+  Name[nl]=WebSpiegel
+
+  Categories=Network;WebDevelopment;
+</programlisting>
+    </para>
+    <para>Now the xdg-desktop-menu tool can be used to add the
+    shinythings-webmirror.desktop file to the desktop application menu:
+<programlisting>
+xdg-desktop-menu install ./shinythings-webmirror.desktop
+</programlisting>
+    </para>
+    <para>
+      Note that for the purpose of this example the menu items are available
+      in two languages, English and Dutch.
+      The language code for Dutch is nl.
+    </para>
+    <para>
+      In the next example the company ShinyThings Inc. will add its own
+      submenu to the desktop application menu consisting of a
+      "WebMirror" menu item and a "WebMirror Admin Tool" menu item.
+    </para>
+    <para>
+      First the company needs to create two .desktop files that describe
+      the two menu items. Since the items are to be added to a new submenu
+      it is not necessary to include a Categories= line:
+<programlisting>
+shinythings-webmirror.desktop:
+
+  [Desktop Entry]
+  Encoding=UTF-8
+  Type=Application
+
+  Exec=webmirror
+  Icon=shinythings-webmirror
+
+  Name=WebMirror
+  Name[nl]=WebSpiegel
+
+
+shinythings-webmirror-admin.desktop:
+
+  [Desktop Entry]
+  Encoding=UTF-8
+  Type=Application
+
+  Exec=webmirror-admintool
+  Icon=shinythings-webmirror-admintool
+
+  Name=WebMirror Admin Tool
+  Name[nl]=WebSpiegel Administratie Tool
+</programlisting>
+    </para>
+    <para>
+      In addition a .directory file needs to be created to provide a title and icon
+      for the sub-menu itself:
+<programlisting>
+shinythings-webmirror.directory:
+
+  [Desktop Entry]
+  Encoding=UTF-8
+
+  Icon=shinythings-webmirror-menu
+
+  Name=WebMirror
+  Name[nl]=WebSpiegel
+</programlisting>
+    </para>
+    <para>
+      These file can now be installed with:
+<programlisting>
+xdg-desktop-menu install ./shinythings-webmirror.directory \
+      ./shinythings-webmirror.desktop ./shinythings-webmirror-admin.desktop
+</programlisting>
+    </para>
+    <para>
+      The menu entries could also be installed one by one:
+<programlisting>
+xdg-desktop-menu install --noupdate ./shinythings-webmirror.directory \
+      ./shinythings-webmirror.desktop
+xdg-desktop-menu install --noupdate ./shinythings-webmirror.directory \
+      ./shinythings-webmirror-admin.desktop
+xdg-desktop-menu forceupdate
+</programlisting>
+    </para>
+    <para>
+      Although the result is the same it is slightly more efficient to
+      install all files at the same time.
+    </para>
+    <para>
+      The *.desktop and *.directory files reference icons with the names
+      webmirror, webmirror-admin and webmirror-menu which should also be
+      installed. In this example the icons are installed in two different
+      sizes, once with a size of 22x22 pixels and once with a size
+      of 64x64 pixels:
+<programlisting>
+xdg-icon-resource install --size 22 ./wmicon-22.png shinythings-webmirror
+xdg-icon-resource install --size 22 ./wmicon-menu-22.png shinythings-webmirror-menu
+xdg-icon-resource install --size 22 ./wmicon-admin-22.png shinythings-webmirror-admin
+xdg-icon-resource install --size 64 ./wmicon-64.png shinythings-webmirror
+xdg-icon-resource install --size 64 ./wmicon-menu-64.png shinythings-webmirror-menu
+xdg-icon-resource install --size 64 ./wmicon-admin-64.png shinythings-webmirror-admin
+</programlisting>
+    </para>
+  </refsect1>
+</refentry>
diff -Naur orig/scripts/desc/xdg-email.xml git/scripts/desc/xdg-email.xml
--- orig/scripts/desc/xdg-email.xml	1970-01-01 01:00:00.000000000 +0100
+++ git/scripts/desc/xdg-email.xml	2013-08-06 05:04:22.633970726 +0200
@@ -0,0 +1,281 @@
+<?xml version="1.0"?>
+<?xml-stylesheet type="text/xsl"
+   href="http://docbook.sourceforge.net/release/xsl/current/manpages/docbook.xsl"?>
+<!DOCTYPE refentry PUBLIC "-//OASIS//DTD DocBook XML V4.1.2//EN"
+    "http://www.oasis-open.org/docbook/xml/4.1.2/docbookx.dtd" [
+]>
+<refentry id="xdg-email">
+  <refentryinfo>
+    <title>xdg-email Manual</title>
+    <copyright>
+      <year>2006</year>
+    </copyright>
+    <author>
+      <firstname>Kevin</firstname>
+      <surname>Krammer</surname>
+    </author>
+    <address><email>kevin.krammer@gmx.at</email></address>
+    <author>
+      <firstname>Jeremy</firstname>
+      <surname>White</surname>
+    </author>
+    <address><email>jwhite@codeweavers.com</email></address>
+    <releaseinfo>xdg-utils 1.0</releaseinfo>
+  </refentryinfo>
+
+  <refmeta>
+    <refentrytitle>xdg-email</refentrytitle>
+    <manvolnum>1</manvolnum>
+  </refmeta>
+
+  <refnamediv>
+    <refname>xdg-email</refname>
+    <refpurpose>command line tool for sending mail using the user's preferred e-mail composer</refpurpose>
+  </refnamediv>
+
+  <refsynopsisdiv>
+    <cmdsynopsis>
+      <command>xdg-email</command>
+      <arg><option>--utf8</option></arg>
+      <arg><option>--cc</option> <replaceable>address</replaceable></arg>
+      <arg><option>--bcc</option> <replaceable>address</replaceable></arg>
+      <arg><option>--subject</option> <replaceable>text</replaceable></arg>
+      <arg><option>--body</option> <replaceable>text</replaceable></arg>
+      <arg><option>--attach</option> <replaceable>file</replaceable></arg>
+      <group choice="opt">
+        <arg choice="plain"><replaceable>mailto-uri</replaceable></arg>
+        <arg choice="plain"><replaceable>address(es)</replaceable></arg>
+      </group>
+    </cmdsynopsis>
+    <cmdsynopsis>
+      <command>xdg-email</command>
+      <group choice="req">
+        <arg choice="plain"><option>--help</option></arg>
+        <arg choice="plain"><option>--manual</option></arg>
+        <arg choice="plain"><option>--version</option></arg>
+      </group>
+    </cmdsynopsis>
+  </refsynopsisdiv>
+
+  <refsect1 id="description">
+    <title>Description</title>
+    <para>
+      xdg-email opens the user's preferred e-mail composer in order to send
+      a mail to <replaceable>address(es)</replaceable> or
+      <replaceable>mailto-uri</replaceable>. RFC2368 defines mailto:
+      URIs. xdg-email limits support to, cc, subject and body fields in
+      <replaceable>mailto-uri</replaceable>, all other fields are silently
+      ignored. <replaceable>address(es)</replaceable> must follow the
+      syntax of RFC822. Multiple addresses may be provided as 
+      separate arguments.
+    </para>
+    <para>
+      All information provided on the command line is used to
+      prefill corresponding fields in the user's e-mail composer. The user
+      will have the opportunity to change any of this information before
+      actually sending the e-mail.
+    </para>
+    <para>
+      xdg-email is for use inside a desktop session only.
+      It is not recommended to use xdg-email as root.
+    </para>
+    <para>
+      See <ulink url="http://portland.freedesktop.org/wiki/EmailConfig"/> for information on
+      how the user can change the e-mail composer that is used.
+    </para>
+  </refsect1>
+  <refsect1 id="options">
+    <title>Options</title>
+    <variablelist>
+      <varlistentry>
+	<term><option>--utf8</option></term>
+	<listitem>
+	  <simpara>
+	    Indicates that all command line options that follow are in utf8.
+	    Without this option, command line options are expected to be
+	    encoded according to locale.
+            If the locale already specifies utf8 this option has no effect.
+            This option does not affect mailto URIs that are passed on the
+            command line.
+	  </simpara>
+	</listitem>
+      </varlistentry>
+
+      <varlistentry>
+	<term><option>--cc</option> <replaceable>address</replaceable></term>
+	<listitem>
+	  <simpara>
+	    Specify a recipient to be copied on the e-mail.
+	  </simpara>
+	</listitem>
+      </varlistentry>
+
+      <varlistentry>
+	<term><option>--bcc</option> <replaceable>address</replaceable></term>
+	<listitem>
+	  <simpara>
+	    Specify a recipient to be blindly copied on the e-mail.
+	  </simpara>
+	</listitem>
+      </varlistentry>
+
+      <varlistentry>
+	<term><option>--subject</option> <replaceable>text</replaceable></term>
+	<listitem>
+	  <simpara>
+	    Specify a subject for the e-mail.
+	  </simpara>
+	</listitem>
+      </varlistentry>
+
+      <varlistentry>
+	<term><option>--body</option> <replaceable>text</replaceable></term>
+	<listitem>
+	  <simpara>
+	    Specify a body for the e-mail. Since the user will be able to 
+	    make changes before actually sending the e-mail, this can be 
+	    used to provide the user with a template for the e-mail.
+	    <replaceable>text</replaceable> may contain linebreaks. 
+	  </simpara>
+	</listitem>
+      </varlistentry>
+
+      <varlistentry>
+	<term><option>--attach</option> <replaceable>file</replaceable></term>
+	<listitem>
+	  <simpara>
+	    Specify an attachment for the e-mail. <replaceable>file</replaceable>
+	    must point to an existing file.
+	  </simpara>
+	  <simpara>
+	    Some e-mail applications require the file to remain present
+            after xdg-email returns.
+	  </simpara>
+	</listitem>
+      </varlistentry>
+      
+      <varlistentry>
+	<term><option>--help</option></term>
+	<listitem>
+	  <simpara>
+	    Show command synopsis.
+	  </simpara>
+	</listitem>
+      </varlistentry>
+
+      <varlistentry>
+	<term><option>--manual</option></term>
+	<listitem>
+	  <simpara>
+	    Show this manual page.
+	  </simpara>
+	</listitem>
+      </varlistentry>
+
+      <varlistentry>
+        <term><option>--version</option></term>
+        <listitem>
+          <simpara>
+            Show the xdg-utils version information.
+          </simpara>
+        </listitem>
+      </varlistentry>
+    </variablelist>
+  </refsect1>
+  <refsect1 id="env_vars">
+    <title>Environment Variables</title>
+    <para>
+      xdg-email honours the following environment variables:
+    </para>
+    <variablelist>
+      <varlistentry>
+	<term>XDG_UTILS_DEBUG_LEVEL</term>
+	<listitem>
+	  <simpara>
+	    Setting this environment variable to a non-zero numerical value
+	    makes xdg-email do more verbose reporting on stderr.
+	    Setting a higher value increases the verbosity.
+	  </simpara>
+	</listitem>
+      </varlistentry>
+    </variablelist>
+  </refsect1>
+  <refsect1 id="exitcodes">
+    <title>Exit Codes</title>
+    <para>
+      An exit code of 0 indicates success while a non-zero exit code
+      indicates failure. The following failure codes can be returned:
+    </para>
+    <variablelist>
+      <varlistentry>
+	<term><option>1</option></term>
+	<listitem>
+	  <simpara>
+	    Error in command line syntax.
+	  </simpara>
+	</listitem>
+      </varlistentry>
+      <varlistentry>
+	<term><option>2</option></term>
+	<listitem>
+	  <simpara>
+	    One of the files passed on the command line did not exist.
+	  </simpara>
+	</listitem>
+      </varlistentry>
+      <varlistentry>
+	<term><option>3</option></term>
+	<listitem>
+	  <simpara>
+	    A required tool could not be found. 
+	  </simpara>
+	</listitem>
+      </varlistentry>
+      <varlistentry>
+	<term><option>4</option></term>
+	<listitem>
+	  <simpara>
+	    The action failed. 
+	  </simpara>
+	</listitem>
+      </varlistentry>
+      <varlistentry>
+	<term><option>5</option></term>
+	<listitem>
+	  <simpara>
+	    No permission to read one of the files passed on the command
+            line.
+	  </simpara>
+	</listitem>
+      </varlistentry>
+    </variablelist>
+  </refsect1>
+  <refsect1 id="configuration">
+    <title>Configuration</title>
+    <para>Visit <ulink url="http://portland.freedesktop.org/wiki/EmailConfig"/> for information
+      how to configure xdg-email to use the email client of your choice.
+    </para>
+  </refsect1>
+  <refsect1 id="examples">
+    <title>Examples</title>
+    <para>
+<programlisting>
+xdg-email 'Jeremy White &lt;jwhite@example.com&gt;'
+</programlisting>
+    </para>
+    <para>
+<programlisting>
+xdg-email --attach /tmp/logo.png \
+          --subject 'Logo contest' \
+          --body 'Attached you find the logo for the contest.' \
+          'jwhite@example.com'
+</programlisting>
+    </para>
+    <para>
+<programlisting>
+xdg-email --subject 'Your password is about to expire' \
+          'jwhite@example.com' 'bastian@example.com' 'whipple@example.com'
+</programlisting>
+    </para>
+  </refsect1>
+</refentry>
diff -Naur orig/scripts/desc/xdg-file-dialog.xml git/scripts/desc/xdg-file-dialog.xml
--- orig/scripts/desc/xdg-file-dialog.xml	1970-01-01 01:00:00.000000000 +0100
+++ git/scripts/desc/xdg-file-dialog.xml	2013-08-06 05:04:22.633970726 +0200
@@ -0,0 +1,222 @@
+<?xml version="1.0"?>
+<?xml-stylesheet type="text/xsl"
+   href="http://docbook.sourceforge.net/release/xsl/current/manpages/docbook.xsl"?>
+<!DOCTYPE refentry PUBLIC "-//OASIS//DTD DocBook XML V4.1.2//EN"
+    "http://www.oasis-open.org/docbook/xml/4.1.2/docbookx.dtd" [
+]>
+<refentry id="xdg-file-dialog">
+  <refentryinfo>
+    <title>xdg-file-dialog Manual</title>
+    <copyright>
+      <year>2006</year>
+    </copyright>
+    <author>
+      <firstname>Kevin</firstname>
+      <surname>Krammer</surname>
+    </author>
+    <address><email>kevin.krammer@gmx.at</email></address>
+    <releaseinfo>This is release 0.5 of the xdg-mime Manual.</releaseinfo>
+  </refentryinfo>
+
+  <refmeta>
+    <refentrytitle>xdg-file-dialog</refentrytitle>
+    <manvolnum>1</manvolnum>
+  </refmeta>
+
+  <refnamediv>
+    <refname>xdg-file-dialog</refname>
+    <refpurpose>command line tool for providing file and directory selection dialogs</refpurpose>
+  </refnamediv>
+
+  <refsynopsisdiv>
+    <cmdsynopsis>
+      <command>xdg-file-dialog</command>
+      <arg choice="plain">openfilename</arg>
+      <arg><option>--title <replaceable>TITLE</replaceable></option></arg>
+      <arg><replaceable>FILENAME</replaceable></arg>
+    </cmdsynopsis>
+    <cmdsynopsis>
+      <command>xdg-file-dialog</command>
+      <arg choice="plain">openfilenamelist</arg>
+      <arg><option>--title <replaceable>TITLE</replaceable></option></arg>
+      <arg><replaceable>FILENAME</replaceable></arg>
+    </cmdsynopsis>
+    <cmdsynopsis>
+      <command>xdg-file-dialog</command>
+      <arg choice="plain">savefilename</arg>
+      <arg><option>--title <replaceable>TITLE</replaceable></option></arg>
+      <arg><replaceable>FILENAME</replaceable></arg>
+    </cmdsynopsis>
+    <cmdsynopsis>
+      <command>xdg-file-dialog</command>
+      <arg choice="plain">directory</arg>
+      <arg><option>--title <replaceable>TITLE</replaceable></option></arg>
+      <arg><replaceable>DIRNAME</replaceable></arg>
+    </cmdsynopsis>
+    <cmdsynopsis>
+      <command>xdg-file-dialog</command>
+      <group choice="req">
+        <arg choice="plain"><option>--help</option></arg>
+        <arg choice="plain"><option>--manual</option></arg>
+        <arg choice="plain"><option>--version</option></arg>
+      </group>
+    </cmdsynopsis>
+  </refsynopsisdiv>
+
+  <refsect1 id="description">
+    <title>Description</title>
+    <para>
+      The xdg-file-dialog program can be used to let the native file selection dialog
+      handle file and directory input.
+    </para>
+    <para>
+      xdg-file-dialog is for use inside a desktop session only.
+      It is not recommended to use xdg-file-dialog as root.
+    </para>
+  </refsect1>
+  <refsect1 id="commands">
+    <title>Commands</title>
+    <variablelist>
+      <varlistentry>
+        <term>openfilename</term>
+        <listitem>
+          <simpara>
+              Returns the filename with path for a file to read from.
+              <replaceable>FILENAME</replaceable> can optionally be used to
+              specify path and filename of a preselection.
+          </simpara>
+        </listitem>
+      </varlistentry>
+
+      <varlistentry>
+        <term>openfilenamelist</term>
+        <listitem>
+          <simpara>
+            Returns one or more filenames with path for files to read from,
+            each on a new line. <replaceable>FILENAME</replaceable> can optionally
+            be used to specify path and filename of a preselection.
+          </simpara>
+        </listitem>
+      </varlistentry>
+
+      <varlistentry>
+        <term>savefilename</term>
+        <listitem>
+          <simpara>
+            Returns the filename with path for file to write to.
+            <replaceable>FILENAME</replaceable> can optionally be used to
+            specify path and filename of a preselection.
+          </simpara>
+        </listitem>
+      </varlistentry>
+
+      <varlistentry>
+        <term>directory</term>
+        <listitem>
+          <simpara>
+            Returns the path for an existing directory.
+            <replaceable>DIRNAME</replaceable> can optionally be used to
+            specify a path of a preselection.
+            </simpara>
+        </listitem>
+      </varlistentry>
+    </variablelist>
+  </refsect1>
+  <refsect1 id="options">
+    <title>Options</title>
+    <variablelist>
+      <varlistentry>
+        <term><option>--title</option> <replaceable>TITLE</replaceable></term>
+        <listitem>
+          <simpara>
+              Sets the dialog's title (caption) to the specified text.
+          </simpara>
+        </listitem>
+      </varlistentry>
+
+      <varlistentry>
+	<term><option>--help</option></term>
+	<listitem>
+	  <simpara>
+	    Show command synopsis.
+	  </simpara>
+	</listitem>
+      </varlistentry>
+
+      <varlistentry>
+	<term><option>--manual</option></term>
+	<listitem>
+	  <simpara>
+	    Show this manual page.
+	  </simpara>
+	</listitem>
+      </varlistentry>
+
+      <varlistentry>
+        <term><option>--version</option></term>
+        <listitem>
+          <simpara>
+            Show the xdg-utils version information.
+          </simpara>
+        </listitem>
+      </varlistentry>
+
+    </variablelist>
+  </refsect1>
+  <refsect1 id="exitcodes">
+    <title>Exit Codes</title>
+    <para>
+      An exit code of 0 indicates success while a non-zero exit code
+      indicates failure. The following failure codes can be returned:
+    </para>
+    <variablelist>
+      <varlistentry>
+	<term><option>1</option></term>
+	<listitem>
+	  <simpara>
+	    Error in command line syntax.
+	  </simpara>
+	</listitem>
+      </varlistentry>
+      <varlistentry>
+	<term><option>2</option></term>
+	<listitem>
+	  <simpara>
+	    One of the files passed on the command line did not exist.
+	  </simpara>
+	</listitem>
+      </varlistentry>
+      <varlistentry>
+	<term><option>3</option></term>
+	<listitem>
+	  <simpara>
+	    A required tool could not be found. 
+	  </simpara>
+	</listitem>
+      </varlistentry>
+      <varlistentry>
+	<term><option>4</option></term>
+	<listitem>
+	  <simpara>
+	    The action failed. 
+	  </simpara>
+	</listitem>
+      </varlistentry>
+    </variablelist>
+  </refsect1>
+  <refsect1 id="examples">
+    <title>Examples</title>
+    <para>
+<programlisting>
+xdg-file-dialog savefilename /tmp/foobar.png
+</programlisting>
+      Asks for a save file name starting in directory /tmp and suggesting foobar.png as the filename
+    </para>
+    <para>
+<programlisting>
+xdg-file-dialog directory --title "Select a target folder" /tmp
+</programlisting>
+      Asks for a directory name starting in directory /tmp using the text "Select a target folder" as the dialog's title/caption.
+    </para>
+  </refsect1>
+</refentry>
diff -Naur orig/scripts/desc/xdg-icon-resource.xml git/scripts/desc/xdg-icon-resource.xml
--- orig/scripts/desc/xdg-icon-resource.xml	1970-01-01 01:00:00.000000000 +0100
+++ git/scripts/desc/xdg-icon-resource.xml	2013-08-06 05:04:22.633970726 +0200
@@ -0,0 +1,372 @@
+<?xml version="1.0"?>
+<?xml-stylesheet type="text/xsl"
+   href="http://docbook.sourceforge.net/release/xsl/current/manpages/docbook.xsl"?>
+<!DOCTYPE refentry PUBLIC "-//OASIS//DTD DocBook XML V4.1.2//EN"
+    "http://www.oasis-open.org/docbook/xml/4.1.2/docbookx.dtd" [
+]>
+<refentry id="xdg-icon-resource">
+  <refentryinfo>
+    <title>xdg-icon-resource Manual</title>
+    <copyright>
+      <year>2006</year>
+    </copyright>
+    <author>
+      <firstname>Kevin</firstname>
+      <surname>Krammer</surname>
+    </author>
+    <address><email>kevin.krammer@gmx.at</email></address>
+    <author>
+      <firstname>Jeremy</firstname>
+      <surname>White</surname>
+    </author>
+    <address><email>jwhite@codeweavers.com</email></address>
+    <releaseinfo>xdg-utils 1.0</releaseinfo>
+  </refentryinfo>
+
+  <refmeta>
+    <refentrytitle>xdg-icon-resource</refentrytitle>
+    <manvolnum>1</manvolnum>
+  </refmeta>
+
+  <refnamediv>
+    <refname>xdg-icon-resource</refname>
+    <refpurpose>command line tool for (un)installing icon resources</refpurpose>
+  </refnamediv>
+
+  <refsynopsisdiv>
+    <cmdsynopsis>
+      <command>xdg-icon-resource</command>
+      <arg choice="plain">install</arg>
+      <arg><option>--noupdate</option></arg>
+      <arg><option>--novendor</option></arg>
+      <arg><option>--theme <replaceable>theme</replaceable></option></arg>
+      <arg><option>--context <replaceable>context</replaceable></option></arg>
+      <arg><option>--mode <replaceable>mode</replaceable></option></arg>
+      <arg choice="plain"><option>--size <replaceable>size</replaceable></option></arg>
+      <arg choice="plain"><replaceable>icon-file</replaceable></arg>
+      <arg><replaceable>icon-name</replaceable></arg>
+    </cmdsynopsis>
+    <cmdsynopsis>
+      <command>xdg-icon-resource</command>
+      <arg choice="plain">uninstall</arg>
+      <arg><option>--noupdate</option></arg>
+      <arg><option>--theme <replaceable>theme</replaceable></option></arg>
+      <arg><option>--context <replaceable>context</replaceable></option></arg>
+      <arg><option>--mode <replaceable>mode</replaceable></option></arg>
+      <arg choice="plain"><option>--size <replaceable>size</replaceable></option></arg>
+      <arg choice="plain"><replaceable>icon-name</replaceable></arg>
+    </cmdsynopsis>
+    <cmdsynopsis>
+      <command>xdg-icon-resource</command>
+      <arg choice="plain">forceupdate</arg>
+      <arg><option>--theme <replaceable>theme</replaceable></option></arg>
+      <arg><option>--mode <replaceable>mode</replaceable></option></arg>
+    </cmdsynopsis>
+    <cmdsynopsis>
+      <command>xdg-icon-resource</command>
+      <group choice="req">
+        <arg choice="plain"><option>--help</option></arg>
+        <arg choice="plain"><option>--manual</option></arg>
+        <arg choice="plain"><option>--version</option></arg>
+      </group>
+    </cmdsynopsis>
+  </refsynopsisdiv>
+
+  <refsect1 id="description">
+    <title>Description</title>
+    <para>
+      The xdg-icon-resource program can be used to install icon resources
+      into the desktop icon system in order to illustrate menu entries,
+      to depict desktop icons or to graphically represent file types.
+    </para>
+    <para>
+      The desktop icon system identifies icons by name. Depending on the
+      required size, the choice of icon theme and the context in which the
+      icon is used, the desktop icon system locates an appropriate
+      icon resource to depict an icon. Icon resources can be XPM files or
+      PNG files. 
+    </para>
+    <para>
+      The desktop icon system works according to the
+      XDG Icon Theme Specification at
+      <ulink url="http://www.freedesktop.org/wiki/Specifications/icon-theme-spec"/>
+    </para>
+  </refsect1>
+  <refsect1 id="commands">
+    <title>Commands</title>
+    <variablelist>
+      <varlistentry>
+	<term>install</term>
+	<listitem>
+	  <simpara>
+	    Installs the icon file indicated by <replaceable>icon-file</replaceable>
+            to the desktop icon system under the name 
+            <replaceable>icon-name</replaceable>. 
+            Icon names do not have an extension.
+            If <replaceable>icon-name</replaceable> is not provided the name is
+            derived from <replaceable>icon-file</replaceable>.
+            The icon file must have
+            <emphasis>.png</emphasis> or <emphasis>.xpm</emphasis>
+            as extension. If a corresponding <emphasis>.icon</emphasis>
+            file exists in the same location as <replaceable>icon-file</replaceable>
+            it will be installed as well.
+	  </simpara>
+	</listitem>
+      </varlistentry>
+
+      <varlistentry>
+	<term>uninstall</term>
+	<listitem>
+	  <simpara>
+	    Removes the icon indicated by <replaceable>icon-name</replaceable>
+            from the desktop icon system. Note that icon names do not have
+            an extension.
+	  </simpara>
+	</listitem>
+      </varlistentry>
+
+      <varlistentry>
+	<term>forceupdate</term>
+	<listitem>
+	  <simpara>
+	    Force an update of the desktop icon system. This is only useful if
+	    the last call to xdg-icon-resource included the <option>--noupdate</option> option.
+	  </simpara>
+	</listitem>
+      </varlistentry>
+    </variablelist>
+  </refsect1>
+  <refsect1 id="options">
+    <title>Options</title>
+    <variablelist>
+      <varlistentry>
+	<term><option>--noupdate</option></term>
+	<listitem>
+	  <simpara>
+	    Postpone updating the desktop icon system. If multiple icons are
+	    added in sequence this flag can be used to indicate that
+	    additional changes will follow and that it is not
+            necessary to update the desktop icon system right away.
+	  </simpara>
+	</listitem>
+      </varlistentry>
+      <varlistentry>
+	<term><option>--novendor</option></term>
+	<listitem>
+	  <simpara>
+	    Normally, xdg-icon-resource checks to ensure that an icon file
+	    to be installed in the <emphasis>apps</emphasis> context has
+	    a proper vendor prefix. This option can be used to disable
+	    that check.
+	  </simpara>
+	  <simpara>
+            A vendor prefix consists of alpha characters ([a-zA-Z]) and is
+            terminated with a dash ("-").
+            Companies and organizations are encouraged to use a word
+            or phrase, preferably the organizations name, for which they hold
+            a trademark as their vendor prefix.
+            The purpose of the vendor prefix is to prevent name conflicts.
+          </simpara>
+	</listitem>
+      </varlistentry>
+
+      <varlistentry>
+	<term><option>--theme</option> <replaceable>theme</replaceable></term>
+	<listitem>
+	  <simpara>
+	    Installs or removes the icon file as part of 
+	    <replaceable>theme</replaceable>. If no theme is specified the
+	    icons will be installed as part of the default <emphasis>hicolor</emphasis> theme.
+	    Applications may install icons under multiple themes but should
+	    at least install icons for the default <emphasis>hicolor</emphasis> theme.
+	  </simpara>
+	</listitem>
+      </varlistentry>
+
+      <varlistentry>
+	<term><option>--context</option> <replaceable>context</replaceable></term>
+	<listitem>
+	  <simpara>
+	    Specifies the context for the icon. Icons to be used in the
+            application menu and as desktop icon should use
+            <emphasis>apps</emphasis> as context which is the default
+            context. Icons to be used as file icons should use
+            <emphasis>mimetypes</emphasis> as context.
+            Other common contexts are <emphasis>actions</emphasis>,
+            <emphasis>devices</emphasis>, <emphasis>emblems</emphasis>,
+            <emphasis>filesystems</emphasis> and <emphasis>stock</emphasis>.
+	  </simpara>
+	</listitem>
+      </varlistentry>
+
+      <varlistentry>
+	<term><option>--size</option> <replaceable>size</replaceable></term>
+	<listitem>
+	  <simpara>
+	    Specifies the size of the icon. All icons must be square.
+	    Common sizes for icons in the apps context are:
+	    16, 22, 32, 48, 64 and 128.  
+	    Common sizes for icons in the mimetypes context are:
+	    16, 22, 32, 48, 64 and 128
+	  </simpara>
+	</listitem>
+      </varlistentry>
+
+      <varlistentry>
+	<term><option>--mode</option> <replaceable>mode</replaceable></term>
+	<listitem>
+	  <simpara><replaceable>mode</replaceable> can be
+            <emphasis>user</emphasis> or <emphasis>system</emphasis>.
+            In user mode the file is (un)installed for the current user
+            only. In system mode the file is (un)installed for all users
+            on the system. Usually only root is allowed to install in
+            system mode.
+	  </simpara>
+	  <simpara>
+	    The default is to use system mode when called by root
+	    and to use user mode when called by a non-root user.
+	  </simpara>
+	</listitem>
+      </varlistentry>
+
+      <varlistentry>
+	<term><option>--help</option></term>
+	<listitem>
+	  <simpara>
+	    Show command synopsis.
+	  </simpara>
+	</listitem>
+      </varlistentry>
+
+      <varlistentry>
+	<term><option>--manual</option></term>
+	<listitem>
+	  <simpara>
+	    Show this manual page.
+	  </simpara>
+	</listitem>
+      </varlistentry>
+
+      <varlistentry>
+        <term><option>--version</option></term>
+        <listitem>
+          <simpara>
+            Show the xdg-utils version information.
+          </simpara>
+        </listitem>
+      </varlistentry>
+
+    </variablelist>
+  </refsect1>
+  <refsect1 id="env_vars">
+    <title>Environment Variables</title>
+    <para>
+      xdg-icon-resource honours the following environment variables:
+    </para>
+    <variablelist>
+      <varlistentry>
+	<term>XDG_UTILS_DEBUG_LEVEL</term>
+	<listitem>
+	  <simpara>
+	    Setting this environment variable to a non-zero numerical value
+	    makes xdg-icon-resource do more verbose reporting on stderr.
+	    Setting a higher value increases the verbosity.
+	  </simpara>
+	</listitem>
+      </varlistentry>
+      <varlistentry>
+	<term>XDG_UTILS_INSTALL_MODE</term>
+	<listitem>
+	  <simpara>
+	    This environment variable can be used by the user or
+            administrator to override the installation mode.
+	    Valid values are <emphasis>user</emphasis> and
+            <emphasis>system</emphasis>.  
+	  </simpara>
+	</listitem>
+      </varlistentry>
+    </variablelist>
+  </refsect1>
+
+  <refsect1 id="exitcodes">
+    <title>Exit Codes</title>
+    <para>
+      An exit code of 0 indicates success while a non-zero exit code
+      indicates failure. The following failure codes can be returned:
+    </para>
+    <variablelist>
+      <varlistentry>
+	<term><option>1</option></term>
+	<listitem>
+	  <simpara>
+	    Error in command line syntax.
+	  </simpara>
+	</listitem>
+      </varlistentry>
+      <varlistentry>
+	<term><option>2</option></term>
+	<listitem>
+	  <simpara>
+	    One of the files passed on the command line did not exist.
+	  </simpara>
+	</listitem>
+      </varlistentry>
+      <varlistentry>
+	<term><option>3</option></term>
+	<listitem>
+	  <simpara>
+	    A required tool could not be found. 
+	  </simpara>
+	</listitem>
+      </varlistentry>
+      <varlistentry>
+	<term><option>4</option></term>
+	<listitem>
+	  <simpara>
+	    The action failed. 
+	  </simpara>
+	</listitem>
+      </varlistentry>
+      <varlistentry>
+	<term><option>5</option></term>
+	<listitem>
+	  <simpara>
+	    No permission to read one of the files passed on the command
+            line.
+	  </simpara>
+	</listitem>
+      </varlistentry>
+    </variablelist>
+  </refsect1>
+  <refsect1 id="seealso">
+    <title>See Also</title>
+    <para><citerefentry><refentrytitle>xdg-desktop-icon</refentrytitle>
+        <manvolnum>1</manvolnum>
+      </citerefentry>,
+      <citerefentry><refentrytitle>xdg-desktop-menu</refentrytitle>
+        <manvolnum>1</manvolnum>
+      </citerefentry>,
+      <citerefentry><refentrytitle>xdg-mime</refentrytitle>
+        <manvolnum>1</manvolnum>
+      </citerefentry>
+    </para>
+  </refsect1>
+  <refsect1 id="examples">
+    <title>Examples</title>
+    <para>
+To install an icon resource to depict a launcher for the application
+myfoobar, the company ShinyThings Inc. can use:
+<programlisting>
+xdg-icon-resource install --size 64 shinythings-myfoobar.png
+</programlisting>
+    </para>
+    <para>
+To install an icon for a new application/x-foobar file type one can use:
+<programlisting>
+xdg-icon-resource install --context mimetypes --size 48 ./mime-foobar-48.png application-x-foobar
+xdg-icon-resource install --context mimetypes --size 64 ./mime-foobar-64.png application-x-foobar
+</programlisting>This will install two icons with the name application-x-foobar
+but with different sizes.
+    </para>
+  </refsect1>
+</refentry>
diff -Naur orig/scripts/desc/xdg-mime.xml git/scripts/desc/xdg-mime.xml
--- orig/scripts/desc/xdg-mime.xml	1970-01-01 01:00:00.000000000 +0100
+++ git/scripts/desc/xdg-mime.xml	2013-08-06 05:04:22.633970726 +0200
@@ -0,0 +1,373 @@
+<?xml version="1.0"?>
+<?xml-stylesheet type="text/xsl"
+   href="http://docbook.sourceforge.net/release/xsl/current/manpages/docbook.xsl"?>
+<!DOCTYPE refentry PUBLIC "-//OASIS//DTD DocBook XML V4.1.2//EN"
+    "http://www.oasis-open.org/docbook/xml/4.1.2/docbookx.dtd" [
+]>
+<refentry id="xdg-mime">
+  <refentryinfo>
+    <title>xdg-mime Manual</title>
+    <copyright>
+      <year>2006</year>
+    </copyright>
+    <author>
+      <firstname>Kevin</firstname>
+      <surname>Krammer</surname>
+    </author>
+    <address><email>kevin.krammer@gmx.at</email></address>
+    <author>
+      <firstname>Jeremy</firstname>
+      <surname>White</surname>
+    </author>
+    <address><email>jwhite@codeweavers.com</email></address>
+    <releaseinfo>xdg-utils 1.0</releaseinfo>
+  </refentryinfo>
+
+  <refmeta>
+    <refentrytitle>xdg-mime</refentrytitle>
+    <manvolnum>1</manvolnum>
+  </refmeta>
+
+  <refnamediv>
+    <refname>xdg-mime</refname>
+    <refpurpose>command line tool for querying information about file type handling
+and adding descriptions for new file types</refpurpose>
+  </refnamediv>
+
+  <refsynopsisdiv>
+    <cmdsynopsis>
+      <command>xdg-mime</command>
+      <arg choice="plain">query</arg>
+      <group choice="req">
+	<arg choice="plain">filetype</arg>
+	<arg choice="plain">default</arg>
+      </group>
+      <arg choice="plain">...</arg>
+    </cmdsynopsis>
+    <cmdsynopsis>
+      <command>xdg-mime</command>
+      <arg choice="plain">default</arg>
+      <arg choice="plain"><replaceable>application</replaceable></arg>
+      <arg choice="plain"><replaceable>mimetype(s)</replaceable></arg>
+    </cmdsynopsis>
+    <cmdsynopsis>
+      <command>xdg-mime</command>
+      <arg choice="plain">install</arg>	
+      <arg><option>--mode <replaceable>mode</replaceable></option></arg>
+      <arg><option>--novendor</option></arg>
+      <arg choice="plain"><replaceable>mimetypes-file</replaceable></arg>
+    </cmdsynopsis>
+    <cmdsynopsis>
+      <command>xdg-mime</command>
+      <arg choice="plain">uninstall</arg>	
+      <arg><option>--mode <replaceable>mode</replaceable></option></arg>
+      <arg choice="plain"><replaceable>mimetypes-file</replaceable></arg>
+    </cmdsynopsis>
+    <cmdsynopsis>
+      <command>xdg-mime</command>
+      <group choice="req">
+        <arg choice="plain"><option>--help</option></arg>
+        <arg choice="plain"><option>--manual</option></arg>
+        <arg choice="plain"><option>--version</option></arg>
+      </group>
+    </cmdsynopsis>
+  </refsynopsisdiv>
+
+  <refsect1 id="description">
+    <title>Description</title>
+    <para>
+      The xdg-mime program can be used to query information about file types
+      and to add descriptions for new file types.
+    </para>
+  </refsect1>
+  <refsect1 id="commands">
+    <title>Commands</title>
+    <variablelist>
+      <varlistentry>
+	<term>query</term>
+	<listitem>
+	  <simpara>
+	    Returns information related to file types.
+	  </simpara>
+	  <simpara>
+            The <emphasis>query</emphasis> option is for use inside a desktop session only.
+            It is not recommended to use xdg-mime query as root.
+	  </simpara>
+	  <simpara>
+            The following queries are supported:
+	  </simpara>
+	  <simpara>query filetype <replaceable>FILE</replaceable>:
+	    Returns the file type of <replaceable>FILE</replaceable> in the form of a MIME type.
+	  </simpara>
+	  <simpara>query default <replaceable>mimetype</replaceable>:
+	    Returns the default application that the desktop environment uses for opening
+	    files of type <replaceable>mimetype</replaceable>. The default application is
+            identified by its *.desktop file.
+	  </simpara>
+	</listitem>
+      </varlistentry>
+
+      <varlistentry>
+	<term>default</term>
+	<listitem>
+	  <simpara>
+	    Ask the desktop environment to make <replaceable>application</replaceable>
+	    the default application for opening
+	    files of type <replaceable>mimetype</replaceable>. An
+            application can be made the default for several file types by
+            specifying multiple mimetypes.
+	  </simpara>
+	  <simpara>
+	    <replaceable>application</replaceable> is the desktop file
+	    id of the application and has the form vendor-name.desktop
+	    <replaceable>application</replaceable> must already be installed
+	    in the desktop menu before it can be made the default handler.
+	    The application's desktop file must list support for all the
+	    MIME types that it wishes to be the default handler for.
+	  </simpara>
+	  <simpara>
+	    Requests to make an application a default handler may be
+	    subject to system policy or approval by the end-user. xdg-mime
+            query can be used to verify whether an application is the
+            actual default handler for a specific file type.   
+	  </simpara>
+	  <simpara>
+            The <emphasis>default</emphasis> option is for use inside a desktop session only.
+            It is not recommended to use xdg-mime default as root.
+	  </simpara>
+	</listitem>
+      </varlistentry>
+
+      <varlistentry>
+	<term>install</term>
+	<listitem>
+	  <simpara>
+	    Adds the file type descriptions provided in <replaceable>mimetypes-file</replaceable>
+            to the desktop environment. <replaceable>mimetypes-file</replaceable>
+            must be a XML file that follows the freedesktop.org
+            Shared MIME-info Database specification
+            and that has a mime-info element as its document root. For
+            each new file type one or more icons with name
+            <replaceable>type</replaceable>-<replaceable>subtype</replaceable>
+            must be installed with the <command>xdg-icon-resource</command>
+            command in the <emphasis>mimetypes</emphasis> context. For example the
+            filetype application/vnd.oasis.opendocument.text requires an
+            icon named application-vnd.oasis.opendocument.text
+            to be installed (unless the file type recommends another icon name).
+	  </simpara>
+	</listitem>
+      </varlistentry>
+
+      <varlistentry>
+	<term>uninstall</term>
+	<listitem>
+	  <simpara>
+	    Removes the file type descriptions provided in <replaceable>mimetypes-file</replaceable>
+            and previously added with <command>xdg-mime install</command> from the
+            desktop environment. <replaceable>mimetypes-file</replaceable>
+            must be a XML file that follows the freedesktop.org
+            Shared MIME-info Database specification
+            and that has a mime-info element as its document root.
+	  </simpara>
+	</listitem>
+      </varlistentry>
+    </variablelist>
+  </refsect1>
+
+  <refsect1 id="options">
+    <title>Options</title>
+    <variablelist>
+      <varlistentry>
+	<term><option>--mode</option> <replaceable>mode</replaceable></term>
+	<listitem>
+	  <simpara><replaceable>mode</replaceable> can be
+            <emphasis>user</emphasis> or <emphasis>system</emphasis>.
+            In user mode the file is (un)installed for the current user
+            only. In system mode the file is (un)installed for all users
+            on the system. Usually only root is allowed to install in
+            system mode.
+	  </simpara>
+	  <simpara>
+	    The default is to use system mode when called by root
+	    and to use user mode when called by a non-root user.
+	  </simpara>
+	</listitem>
+      </varlistentry>
+      <varlistentry>
+	<term><option>--novendor</option></term>
+	<listitem>
+	  <simpara>
+	    Normally, xdg-mime checks to ensure that the
+	    <replaceable>mimetypes-file</replaceable> to be installed
+	    has a proper vendor prefix. This option can be
+	    used to disable that check.
+	  </simpara>
+	  <simpara>
+            A vendor prefix consists of alpha characters ([a-zA-Z]) and is
+            terminated with a dash ("-").
+            Companies and organizations are encouraged to use a word
+            or phrase, preferably the organizations name, for which they hold
+            a trademark as their vendor prefix.
+            The purpose of the vendor prefix is to prevent name conflicts.
+          </simpara>
+	</listitem>
+      </varlistentry>
+
+      <varlistentry>
+	<term><option>--help</option></term>
+	<listitem>
+	  <simpara>
+	    Show command synopsis.
+	  </simpara>
+	</listitem>
+      </varlistentry>
+
+      <varlistentry>
+	<term><option>--manual</option></term>
+	<listitem>
+	  <simpara>
+	    Show this manual page.
+	  </simpara>
+	</listitem>
+      </varlistentry>
+
+      <varlistentry>
+        <term><option>--version</option></term>
+        <listitem>
+          <simpara>
+            Show the xdg-utils version information.
+          </simpara>
+        </listitem>
+      </varlistentry>
+
+    </variablelist>
+  </refsect1>
+  <refsect1 id="env_vars">
+    <title>Environment Variables</title>
+    <para>
+      xdg-mime honours the following environment variables:
+    </para>
+    <variablelist>
+      <varlistentry>
+	<term>XDG_UTILS_DEBUG_LEVEL</term>
+	<listitem>
+	  <simpara>
+	    Setting this environment variable to a non-zero numerical value
+	    makes xdg-mime do more verbose reporting on stderr.
+	    Setting a higher value increases the verbosity.
+	  </simpara>
+	</listitem>
+      </varlistentry>
+      <varlistentry>
+	<term>XDG_UTILS_INSTALL_MODE</term>
+	<listitem>
+	  <simpara>
+	    This environment variable can be used by the user or
+            administrator to override the installation mode.
+	    Valid values are <emphasis>user</emphasis> and
+            <emphasis>system</emphasis>.  
+	  </simpara>
+	</listitem>
+      </varlistentry>
+    </variablelist>
+  </refsect1>
+
+  <refsect1 id="exitcodes">
+    <title>Exit Codes</title>
+    <para>
+      An exit code of 0 indicates success while a non-zero exit code
+      indicates failure. The following failure codes can be returned:
+    </para>
+    <variablelist>
+      <varlistentry>
+	<term><option>1</option></term>
+	<listitem>
+	  <simpara>
+	    Error in command line syntax.
+	  </simpara>
+	</listitem>
+      </varlistentry>
+      <varlistentry>
+	<term><option>2</option></term>
+	<listitem>
+	  <simpara>
+	    One of the files passed on the command line did not exist.
+	  </simpara>
+	</listitem>
+      </varlistentry>
+      <varlistentry>
+	<term><option>3</option></term>
+	<listitem>
+	  <simpara>
+	    A required tool could not be found. 
+	  </simpara>
+	</listitem>
+      </varlistentry>
+      <varlistentry>
+	<term><option>4</option></term>
+	<listitem>
+	  <simpara>
+	    The action failed. 
+	  </simpara>
+	</listitem>
+      </varlistentry>
+      <varlistentry>
+	<term><option>5</option></term>
+	<listitem>
+	  <simpara>
+	    No permission to read one of the files passed on the command
+            line.
+	  </simpara>
+	</listitem>
+      </varlistentry>
+    </variablelist>
+  </refsect1>
+  <refsect1 id="seealso">
+    <title>See Also</title>
+    <para><citerefentry><refentrytitle>xdg-icon-resource</refentrytitle>
+        <manvolnum>1</manvolnum>
+      </citerefentry>,
+      <citerefentry><refentrytitle>xdg-desktop-menu</refentrytitle>
+        <manvolnum>1</manvolnum>
+      </citerefentry>
+    </para>
+  </refsect1>
+  <refsect1 id="examples">
+    <title>Examples</title>
+    <para>
+<programlisting>
+xdg-mime query filetype /tmp/foobar.png
+</programlisting>Prints the MIME type of the file /tmp/foobar.png, in this
+case image/png
+    </para>
+    <para>
+<programlisting>
+xdg-mime query default image/png
+</programlisting>Prints the .desktop filename of the application which is
+      registered to open PNG files.
+    </para>
+    <para>
+<programlisting>
+xdg-mime install shinythings-shiny.xml
+</programlisting>Adds a file type description for "shiny"-files.
+      "shinythings-" is used as the vendor prefix.
+      The file type description could look as follows.  
+<programlisting>
+shinythings-shiny.xml:
+
+&lt;?xml version="1.0"?&gt;
+&lt;mime-info xmlns='http://www.freedesktop.org/standards/shared-mime-info'&gt;
+  &lt;mime-type type="text/x-shiny"&gt;
+    &lt;comment&gt;Shiny new file type&lt;/comment&gt;
+    &lt;glob pattern="*.shiny"/&gt;
+    &lt;glob pattern="*.shi"/&gt;
+  &lt;/mime-type&gt;
+&lt;/mime-info&gt;
+</programlisting>An icon for this new file type must also be installed, for
+example with:
+<programlisting>
+xdg-icon-resource install --context mimetypes --size 64 shiny-file-icon.png text-x-shiny
+</programlisting>
+    </para>
+  </refsect1>
+</refentry>
diff -Naur orig/scripts/desc/xdg-open.xml git/scripts/desc/xdg-open.xml
--- orig/scripts/desc/xdg-open.xml	1970-01-01 01:00:00.000000000 +0100
+++ git/scripts/desc/xdg-open.xml	2013-08-06 05:04:22.633970726 +0200
@@ -0,0 +1,156 @@
+<?xml version="1.0"?>
+<?xml-stylesheet type="text/xsl"
+   href="http://docbook.sourceforge.net/release/xsl/current/manpages/docbook.xsl"?>
+<!DOCTYPE refentry PUBLIC "-//OASIS//DTD DocBook XML V4.1.2//EN"
+    "http://www.oasis-open.org/docbook/xml/4.1.2/docbookx.dtd" [
+]>
+<refentry id="xdg-open">
+  <refentryinfo>
+    <title>xdg-open Manual</title>
+    <copyright>
+      <year>2006</year>
+    </copyright>
+    <author>
+      <firstname>Kevin</firstname>
+      <surname>Krammer</surname>
+    </author>
+    <address><email>kevin.krammer@gmx.at</email></address>
+    <author>
+      <firstname>Jeremy</firstname>
+      <surname>White</surname>
+    </author>
+    <address><email>jwhite@codeweavers.com</email></address>
+    <releaseinfo>xdg-utils 1.0</releaseinfo>
+  </refentryinfo>
+
+  <refmeta>
+    <refentrytitle>xdg-open</refentrytitle>
+    <manvolnum>1</manvolnum>
+  </refmeta>
+
+  <refnamediv>
+    <refname>xdg-open</refname>
+    <refpurpose>opens a file or URL in the user's preferred application</refpurpose>
+  </refnamediv>
+
+  <refsynopsisdiv>
+    <cmdsynopsis>
+      <command>xdg-open</command>
+      <group choice="req">
+        <arg choice="plain"><option><replaceable>file</replaceable></option></arg>
+        <arg choice="plain"><option><replaceable>URL</replaceable></option></arg>
+      </group>
+    </cmdsynopsis>
+    <cmdsynopsis>
+      <command>xdg-open</command>
+      <group choice="req">
+        <arg choice="plain"><option>--help</option></arg>
+        <arg choice="plain"><option>--manual</option></arg>
+        <arg choice="plain"><option>--version</option></arg>
+      </group>
+    </cmdsynopsis>
+  </refsynopsisdiv>
+
+  <refsect1 id="description">
+    <title>Description</title>
+    <para>
+      xdg-open opens a file or URL in the user's preferred application.
+      If a URL is provided the URL will be opened in the user's preferred
+      web browser. If a file is provided the file will be opened in the
+      preferred application for files of that type. xdg-open supports
+      file, ftp, http and https URLs.
+    </para>
+    <para>
+      xdg-open is for use inside a desktop session only.
+      It is not recommended to use xdg-open as root.
+    </para>
+  </refsect1>
+  <refsect1 id="options">
+    <title>Options</title>
+    <variablelist>
+      <varlistentry>
+	<term><option>--help</option></term>
+	<listitem>
+	  <simpara>
+	    Show command synopsis.
+	  </simpara>
+	</listitem>
+      </varlistentry>
+
+      <varlistentry>
+	<term><option>--manual</option></term>
+	<listitem>
+	  <simpara>
+	    Show this manual page.
+	  </simpara>
+	</listitem>
+      </varlistentry>
+
+      <varlistentry>
+        <term><option>--version</option></term>
+        <listitem>
+          <simpara>
+            Show the xdg-utils version information.
+          </simpara>
+        </listitem>
+      </varlistentry>
+    </variablelist>
+  </refsect1>
+  <refsect1 id="exitcodes">
+    <title>Exit Codes</title>
+    <para>
+      An exit code of 0 indicates success while a non-zero exit code
+      indicates failure. The following failure codes can be returned:
+    </para>
+    <variablelist>
+      <varlistentry>
+	<term><option>1</option></term>
+	<listitem>
+	  <simpara>
+	    Error in command line syntax.
+	  </simpara>
+	</listitem>
+      </varlistentry>
+      <varlistentry>
+	<term><option>2</option></term>
+	<listitem>
+	  <simpara>
+	    One of the files passed on the command line did not exist.
+	  </simpara>
+	</listitem>
+      </varlistentry>
+      <varlistentry>
+	<term><option>3</option></term>
+	<listitem>
+	  <simpara>
+	    A required tool could not be found. 
+	  </simpara>
+	</listitem>
+      </varlistentry>
+      <varlistentry>
+	<term><option>4</option></term>
+	<listitem>
+	  <simpara>
+	    The action failed. 
+	  </simpara>
+	</listitem>
+      </varlistentry>
+    </variablelist>
+  </refsect1>
+  <refsect1 id="examples">
+    <title>Examples</title>
+    <para>
+<programlisting>
+xdg-open 'http://www.freedesktop.org/'
+</programlisting>
+      Opens the freedesktop.org website in the user's default browser.
+    </para>
+    <para>
+<programlisting>
+xdg-open /tmp/foobar.png
+</programlisting>
+      Opens the PNG image file /tmp/foobar.png in the user's default image
+      viewing application.
+    </para>
+  </refsect1>
+</refentry>
diff -Naur orig/scripts/desc/xdg-screensaver.xml git/scripts/desc/xdg-screensaver.xml
--- orig/scripts/desc/xdg-screensaver.xml	1970-01-01 01:00:00.000000000 +0100
+++ git/scripts/desc/xdg-screensaver.xml	2013-08-06 05:04:22.633970726 +0200
@@ -0,0 +1,227 @@
+<?xml version="1.0"?>
+<?xml-stylesheet type="text/xsl"
+   href="http://docbook.sourceforge.net/release/xsl/current/manpages/docbook.xsl"?>
+<!DOCTYPE refentry PUBLIC "-//OASIS//DTD DocBook XML V4.1.2//EN"
+    "http://www.oasis-open.org/docbook/xml/4.1.2/docbookx.dtd" [
+]>
+<refentry id="xdg-screensaver">
+  <refentryinfo>
+    <title>xdg-screensaver Manual</title>
+    <copyright>
+      <year>2006</year>
+    </copyright>
+    <author>
+      <firstname>Bryce</firstname>
+      <surname>Harrington</surname>
+    </author>
+    <address><email>bryce@osdl.org</email></address>
+    <releaseinfo>xdg-utils 1.0</releaseinfo>
+  </refentryinfo>
+
+  <refmeta>
+    <refentrytitle>xdg-screensaver</refentrytitle>
+    <manvolnum>1</manvolnum>
+  </refmeta>
+
+  <refnamediv>
+    <refname>xdg-screensaver</refname>
+    <refpurpose>command line tool for controlling the screensaver</refpurpose>
+  </refnamediv>
+
+  <refsynopsisdiv>
+    <cmdsynopsis>
+      <command>xdg-screensaver</command>
+      <arg choice="plain"><option>suspend <replaceable>WindowID</replaceable></option></arg>
+    </cmdsynopsis>
+    <cmdsynopsis>
+      <command>xdg-screensaver</command>
+      <arg choice="plain"><option>resume <replaceable>WindowID</replaceable></option></arg>
+    </cmdsynopsis>
+    <cmdsynopsis>
+      <command>xdg-screensaver</command>
+      <group choice="req">
+        <arg choice="plain"><option>activate</option></arg>
+        <arg choice="plain"><option>lock</option></arg>
+        <arg choice="plain"><option>reset</option></arg>
+        <arg choice="plain"><option>status</option></arg>
+      </group>
+    </cmdsynopsis>
+    <cmdsynopsis>
+      <command>xdg-screensaver</command>
+      <group choice="req">
+        <arg choice="plain"><option>--help</option></arg>
+        <arg choice="plain"><option>--manual</option></arg>
+        <arg choice="plain"><option>--version</option></arg>
+      </group>
+    </cmdsynopsis>
+  </refsynopsisdiv>
+
+  <refsect1 id="description">
+    <title>Description</title>
+    <para>
+      xdg-screensaver provides commands to control the screensaver.
+    </para>
+    <para>
+      xdg-screensaver is for use inside a desktop session only.
+      It is not recommended to use xdg-screensaver as root.
+    </para>
+  </refsect1>
+  <refsect1 id="commands">
+    <title>Commands</title>
+    <variablelist>
+      <varlistentry>
+        <term><option>suspend <replaceable>WindowID</replaceable></option></term>
+        <listitem>
+          <simpara>
+            Suspends the screensaver and monitor power management.
+            <replaceable>WindowID</replaceable> must be the X Window ID
+            of an existing window of the calling application. The window
+            must remain in existence for the duration of the suspension.
+          </simpara>
+          <simpara>
+            WindowID can be represented as either a decimal number
+            or as a hexadecimal number consisting of the prefix
+            <emphasis>0x</emphasis> followed by one or more hexadecimal
+            digits. 
+          </simpara>
+          <simpara>
+            The screensaver can be suspended in relation to multiple
+            windows at the same time. In that case screensaver
+            operation is only restored once the screensaver has been
+            resumed in relation to each of the windows
+          </simpara>
+        </listitem>
+      </varlistentry>
+
+      <varlistentry>
+        <term><option>resume <replaceable>WindowID</replaceable></option></term>
+        <listitem>
+          <simpara>
+            Resume the screensaver and monitor power management after being
+            suspended.
+            <replaceable>WindowID</replaceable>
+            must be the same X Window ID that was passed to a previous call
+            of <command>xdg-screensaver suspend</command>
+          </simpara>
+        </listitem>
+      </varlistentry>
+
+      <varlistentry>
+        <term><option>activate</option></term>
+        <listitem>
+          <simpara>
+            Turns the screensaver on immediately. This may result in the
+            screen getting locked, depending on existing system policies.
+          </simpara>
+        </listitem>
+      </varlistentry>
+
+      <varlistentry>
+        <term><option>lock</option></term>
+        <listitem>
+          <simpara>
+            Lock the screen immediately.
+          </simpara>
+        </listitem>
+      </varlistentry>
+
+      <varlistentry>
+        <term><option>reset</option></term>
+        <listitem>
+          <simpara>
+            Turns the screensaver off immediately. If the screen was locked
+            the user may be asked to authenticate first.
+          </simpara>
+        </listitem>
+      </varlistentry>
+
+      <varlistentry>
+        <term><option>status</option></term>
+        <listitem>
+          <simpara>
+            Prints <emphasis>enabled</emphasis> to stdout if the
+            screensaver is enabled to turn on after a period of
+            inactivity and prints
+            <emphasis>disabled</emphasis> if the screensaver is
+            not enabled.
+          </simpara>
+        </listitem>
+      </varlistentry>
+    </variablelist>
+  </refsect1>
+  <refsect1 id="options">
+    <title>Options</title>
+    <variablelist>
+      <varlistentry>
+	<term><option>--help</option></term>
+	<listitem>
+	  <simpara>
+	    Show command synopsis.
+	  </simpara>
+	</listitem>
+      </varlistentry>
+
+      <varlistentry>
+	<term><option>--manual</option></term>
+	<listitem>
+	  <simpara>
+	    Show this manual page.
+	  </simpara>
+	</listitem>
+      </varlistentry>
+
+      <varlistentry>
+        <term><option>--version</option></term>
+        <listitem>
+          <simpara>
+            Show the xdg-utils version information.
+          </simpara>
+        </listitem>
+      </varlistentry>
+    </variablelist>
+  </refsect1>
+  <refsect1 id="exitcodes">
+    <title>Exit Codes</title>
+    <para>
+      An exit code of 0 indicates success while a non-zero exit code
+      indicates failure. The following failure codes can be returned:
+    </para>
+    <variablelist>
+      <varlistentry>
+	<term><option>1</option></term>
+	<listitem>
+	  <simpara>
+	    Error in command line syntax.
+	  </simpara>
+	</listitem>
+      </varlistentry>
+      <varlistentry>
+	<term><option>3</option></term>
+	<listitem>
+	  <simpara>
+	    A required tool could not be found. 
+	  </simpara>
+	</listitem>
+      </varlistentry>
+      <varlistentry>
+	<term><option>4</option></term>
+	<listitem>
+	  <simpara>
+	    The action failed. 
+	  </simpara>
+	</listitem>
+      </varlistentry>
+    </variablelist>
+  </refsect1>
+  <refsect1 id="examples">
+    <title>Examples</title>
+    <para>
+<programlisting>
+xdg-screensaver suspend 0x1c00007
+</programlisting>Causes the screensaver to be disabled till
+        <command>xdg-screensaver resume 0x1c00007</command> is called.
+        <emphasis>0x1c00007</emphasis> must be the X Window ID of an
+        existing window.
+    </para>
+  </refsect1>
+</refentry>
diff -Naur orig/scripts/desc/xdg-settings.xml git/scripts/desc/xdg-settings.xml
--- orig/scripts/desc/xdg-settings.xml	1970-01-01 01:00:00.000000000 +0100
+++ git/scripts/desc/xdg-settings.xml	2013-08-06 05:04:22.633970726 +0200
@@ -0,0 +1,197 @@
+<?xml version="1.0"?>
+<?xml-stylesheet type="text/xsl"
+   href="http://docbook.sourceforge.net/release/xsl/current/manpages/docbook.xsl"?>
+<!DOCTYPE refentry PUBLIC "-//OASIS//DTD DocBook XML V4.1.2//EN"
+    "http://www.oasis-open.org/docbook/xml/4.1.2/docbookx.dtd" [
+]>
+<refentry id="xdg-settings">
+  <refentryinfo>
+    <title>xdg-settings Manual</title>
+    <copyright>
+      <year>2009-2011</year>
+    </copyright>
+    <author>
+      <firstname>Mike</firstname>
+      <surname>Mammarella</surname>
+    </author>
+    <address><email>mdm@google.com</email></address>
+    <!--<releaseinfo>xdg-utils 1.0</releaseinfo>-->
+  </refentryinfo>
+
+  <refmeta>
+    <refentrytitle>xdg-settings</refentrytitle>
+    <manvolnum>1</manvolnum>
+  </refmeta>
+
+  <refnamediv>
+    <refname>xdg-settings</refname>
+    <refpurpose>get various settings from the desktop environment</refpurpose>
+  </refnamediv>
+
+  <refsynopsisdiv>
+    <cmdsynopsis>
+      <command>xdg-settings</command>
+      <group choice="req">
+        <arg choice="plain"><option><replaceable>get</replaceable></option></arg>
+        <arg choice="plain"><option><replaceable>check</replaceable></option></arg>
+        <arg choice="plain"><option><replaceable>set</replaceable></option></arg>
+      </group>
+      <group choice="req">
+	<option>property</option>
+      </group>
+      <group choice="opt">
+        <option>subproperty</option>
+      </group>
+      <group choice="opt">
+	<option>value</option>
+      </group>
+    </cmdsynopsis>
+    <cmdsynopsis>
+      <command>xdg-settings</command>
+      <group choice="req">
+        <arg choice="plain"><option>--help</option></arg>
+        <arg choice="plain"><option>--list</option></arg>
+        <arg choice="plain"><option>--manual</option></arg>
+        <arg choice="plain"><option>--version</option></arg>
+      </group>
+    </cmdsynopsis>
+  </refsynopsisdiv>
+
+  <refsect1 id="description">
+    <title>Description</title>
+    <para>
+      xdg-settings gets various settings from the desktop environment.
+      For instance, desktop environments often provide proxy configuration
+      and default web browser settings. Using xdg-settings these parameters
+      can be extracted for use by applications that do not use the desktop
+      environment's libraries (which would use the settings natively).
+    </para>
+    <para>
+      xdg-settings is for use inside a desktop session only.
+      It is not recommended to use xdg-settings as root.
+    </para>
+  </refsect1>
+  <refsect1 id="options">
+    <title>Options</title>
+    <variablelist>
+      <varlistentry>
+        <term><option>--help</option></term>
+        <listitem>
+          <simpara>
+            Show command synopsis.
+          </simpara>
+        </listitem>
+      </varlistentry>
+
+      <varlistentry>
+        <term><option>--list</option></term>
+        <listitem>
+          <simpara>
+            List all properties xdg-settings knows about.
+          </simpara>
+        </listitem>
+      </varlistentry>
+
+      <varlistentry>
+        <term><option>--manual</option></term>
+        <listitem>
+          <simpara>
+            Show this manual page.
+          </simpara>
+        </listitem>
+      </varlistentry>
+
+      <varlistentry>
+        <term><option>--version</option></term>
+        <listitem>
+          <simpara>
+            Show the xdg-utils version information.
+          </simpara>
+        </listitem>
+      </varlistentry>
+    </variablelist>
+  </refsect1>
+  <refsect1 id="properties">
+    <title>Properties</title>
+    <para>
+      When using xdg-settings to get, check or set a destkop setting, properties
+      and possibly sub-properties are used to specify the setting to be changed.
+    </para>
+    <para>
+      Some properties (such as default-web-browser) fully describe the setting
+      to be changed. Other properties (such as default-url-scheme-handler) require
+      more information (in this case the actual scheme to set the default handler
+      for) which must be provided in a sub-property.
+    </para>
+  </refsect1>
+  <refsect1 id="exitcodes">
+    <title>Exit Codes</title>
+    <para>
+      An exit code of 0 indicates success while a non-zero exit code
+      indicates failure. The following failure codes can be returned:
+    </para>
+    <variablelist>
+      <varlistentry>
+        <term><option>1</option></term>
+        <listitem>
+          <simpara>
+            Error in command line syntax.
+          </simpara>
+        </listitem>
+      </varlistentry>
+      <varlistentry>
+        <term><option>2</option></term>
+        <listitem>
+          <simpara>
+            One of the files passed on the command line did not exist.
+          </simpara>
+        </listitem>
+      </varlistentry>
+      <varlistentry>
+        <term><option>3</option></term>
+        <listitem>
+          <simpara>
+            A required tool could not be found. 
+          </simpara>
+        </listitem>
+      </varlistentry>
+      <varlistentry>
+        <term><option>4</option></term>
+        <listitem>
+          <simpara>
+            The action failed. 
+          </simpara>
+        </listitem>
+      </varlistentry>
+    </variablelist>
+  </refsect1>
+  <refsect1 id="examples">
+    <title>Examples</title>
+    <para>
+      Get the desktop file name of the current default web browser
+      <programlisting>
+        xdg-settings get default-web-browser
+      </programlisting>
+    </para>
+    <para>
+      Check whether the default web browser is firefox.desktop, which can be
+      false even if "get default-web-browser" says that is the current value
+      (if only some of the underlying settings actually reflect that value)
+      <programlisting>
+        xdg-settings check default-web-browser firefox.desktop
+      </programlisting>
+    </para>
+    <para>
+      Set the default web browser to google-chrome.desktop
+      <programlisting>
+        xdg-settings set default-web-browser google-chrome.desktop
+      </programlisting>
+    </para>
+    <para>
+      Set the default mailto URL scheme handler to be evolution.desktop
+      <programlisting>
+        xdg-settings set default-url-scheme-handler mailto evolution.desktop
+      </programlisting>
+    </para>
+  </refsect1>
+</refentry>
diff -Naur orig/scripts/desc/xdg-su.xml git/scripts/desc/xdg-su.xml
--- orig/scripts/desc/xdg-su.xml	1970-01-01 01:00:00.000000000 +0100
+++ git/scripts/desc/xdg-su.xml	2013-08-06 05:04:22.633970726 +0200
@@ -0,0 +1,166 @@
+<?xml version="1.0"?>
+<?xml-stylesheet type="text/xsl"
+   href="http://docbook.sourceforge.net/release/xsl/current/manpages/docbook.xsl"?>
+<!DOCTYPE refentry PUBLIC "-//OASIS//DTD DocBook XML V4.1.2//EN"
+    "http://www.oasis-open.org/docbook/xml/4.1.2/docbookx.dtd" [
+]>
+<refentry id="xdg-su">
+  <refentryinfo>
+    <title>xdg-su Manual</title>
+    <copyright>
+      <year>2006</year>
+    </copyright>
+    <author>
+      <firstname>Kevin</firstname>
+      <surname>Krammer</surname>
+    </author>
+    <address><email>kevin.krammer@gmx.at</email></address>
+    <author>
+      <firstname>Jeremy</firstname>
+      <surname>White</surname>
+    </author>
+    <address><email>jwhite@codeweavers.com</email></address>
+    <releaseinfo>This is release 0.5 of the xdg-su Manual.</releaseinfo>
+  </refentryinfo>
+
+  <refmeta>
+    <refentrytitle>xdg-su</refentrytitle>
+    <manvolnum>1</manvolnum>
+  </refmeta>
+
+  <refnamediv>
+    <refname>xdg-su</refname>
+    <refpurpose>run a GUI program as root after prompting for the root password</refpurpose>
+  </refnamediv>
+
+  <refsynopsisdiv>
+    <cmdsynopsis>
+      <command>xdg-su</command>
+      <arg><option>-u <replaceable>user</replaceable></option></arg>
+      <arg choice="plain"><option>-c <replaceable>command</replaceable></option></arg>
+    </cmdsynopsis>
+    <cmdsynopsis>
+      <command>xdg-su</command>
+      <group choice="req">
+        <arg choice="plain"><option>--help</option></arg>
+        <arg choice="plain"><option>--manual</option></arg>
+        <arg choice="plain"><option>--version</option></arg>
+      </group>
+    </cmdsynopsis>
+  </refsynopsisdiv>
+
+  <refsect1 id="description">
+    <title>Description</title>
+    <para>
+      xdg-su provides a graphical dialog that prompts the user for a password
+      to run <replaceable>command</replaceable> as <replaceable>user</replaceable>
+      or as root if no user was specified.
+    </para>
+    <para>
+      xdg-su is for use inside a desktop session only.
+    </para>
+    <para>
+      xdg-su discards any stdout and stderr output from
+      <replaceable>command</replaceable>.
+    </para>
+  </refsect1>
+  <refsect1 id="options">
+    <title>Options</title>
+    <variablelist>
+      <varlistentry>
+	<term><option>-u <replaceable>user</replaceable></option></term>
+	<listitem>
+	  <simpara>
+	    run <replaceable>command</replaceable> as
+            <replaceable>user</replaceable>. The default is to run as root.
+	  </simpara>
+	</listitem>
+      </varlistentry>
+
+      <varlistentry>
+	<term><option>--help</option></term>
+	<listitem>
+	  <simpara>
+	    Show command synopsis.
+	  </simpara>
+	</listitem>
+      </varlistentry>
+
+      <varlistentry>
+	<term><option>--manual</option></term>
+	<listitem>
+	  <simpara>
+	    Show this manual page.
+	  </simpara>
+	</listitem>
+      </varlistentry>
+
+      <varlistentry>
+        <term><option>--version</option></term>
+        <listitem>
+          <simpara>
+            Show the xdg-utils version information.
+          </simpara>
+        </listitem>
+      </varlistentry>
+
+    </variablelist>
+  </refsect1>
+  <refsect1 id="exitcodes">
+    <title>Exit Codes</title>
+    <para>
+      An exit code of 0 indicates success while a non-zero exit code
+      indicates failure. The following failure codes can be returned:
+    </para>
+    <variablelist>
+      <varlistentry>
+	<term><option>1</option></term>
+	<listitem>
+	  <simpara>
+	    Error in command line syntax.
+	  </simpara>
+	</listitem>
+      </varlistentry>
+      <varlistentry>
+	<term><option>2</option></term>
+	<listitem>
+	  <simpara>
+	    One of the files passed on the command line did not exist.
+	  </simpara>
+	</listitem>
+      </varlistentry>
+      <varlistentry>
+	<term><option>3</option></term>
+	<listitem>
+	  <simpara>
+	    A required tool could not be found. 
+	  </simpara>
+	</listitem>
+      </varlistentry>
+      <varlistentry>
+	<term><option>4</option></term>
+	<listitem>
+	  <simpara>
+	    The action failed. 
+	  </simpara>
+	</listitem>
+      </varlistentry>
+    </variablelist>
+  </refsect1>
+  <refsect1 id="seealso">
+    <title>See Also</title>
+    <para><citerefentry><refentrytitle>su</refentrytitle>
+        <manvolnum>1</manvolnum>
+      </citerefentry>
+    </para>
+  </refsect1>
+  <refsect1 id="examples">
+    <title>Examples</title>
+    <para>
+<programlisting>
+xdg-su -u root -c "/opt/shinythings/bin/install-GUI --install fast"
+</programlisting>
+       Runs the /opt/shinythings/bin/install-GUI command with root permissions.
+    </para>
+  </refsect1>
+</refentry>
diff -Naur orig/scripts/desc/xdg-terminal.xml git/scripts/desc/xdg-terminal.xml
--- orig/scripts/desc/xdg-terminal.xml	1970-01-01 01:00:00.000000000 +0100
+++ git/scripts/desc/xdg-terminal.xml	2013-08-06 05:04:22.633970726 +0200
@@ -0,0 +1,137 @@
+<?xml version="1.0"?>
+<?xml-stylesheet type="text/xsl"
+   href="http://docbook.sourceforge.net/release/xsl/current/manpages/docbook.xsl"?>
+<!DOCTYPE refentry PUBLIC "-//OASIS//DTD DocBook XML V4.1.2//EN"
+    "http://www.oasis-open.org/docbook/xml/4.1.2/docbookx.dtd" [
+]>
+<refentry id="xdg-terminal">
+  <refentryinfo>
+    <title>xdg-terminal Manual</title>
+    <copyright>
+      <year>2006</year>
+    </copyright>
+    <author>
+      <firstname>Kevin</firstname>
+      <surname>Krammer</surname>
+    </author>
+    <address><email>kevin.krammer@gmx.at</email></address>
+    <releaseinfo>xdg-terminal Technology Preview</releaseinfo>
+  </refentryinfo>
+
+  <refmeta>
+    <refentrytitle>xdg-terminal</refentrytitle>
+    <manvolnum>1</manvolnum>
+  </refmeta>
+
+  <refnamediv>
+    <refname>xdg-terminal</refname>
+    <refpurpose>opens the user's preferred terminal emulator application</refpurpose>
+  </refnamediv>
+
+  <refsynopsisdiv>
+    <cmdsynopsis>
+      <command>xdg-terminal</command>
+        <arg choice="opt"><option><replaceable>command</replaceable></option></arg>
+    </cmdsynopsis>
+    <cmdsynopsis>
+      <command>xdg-terminal</command>
+      <group choice="req">
+        <arg choice="plain"><option>--help</option></arg>
+        <arg choice="plain"><option>--manual</option></arg>
+        <arg choice="plain"><option>--version</option></arg>
+      </group>
+    </cmdsynopsis>
+  </refsynopsisdiv>
+
+  <refsect1 id="description">
+    <title>Description</title>
+    <para>
+      xdg-terminal opens the user's preferred terminal emulator application.
+      If a command is provided the command will be executed by the shell within
+      the newly opened terminal window.
+    </para>
+    <para>
+      xdg-terminal is for use inside a desktop session only.
+      It is not recommended to use xdg-terminal as root.
+    </para>
+  </refsect1>
+  <refsect1 id="options">
+    <title>Options</title>
+    <variablelist>
+      <varlistentry>
+	<term><option>--help</option></term>
+	<listitem>
+	  <simpara>
+	    Show command synopsis.
+	  </simpara>
+	</listitem>
+      </varlistentry>
+
+      <varlistentry>
+	<term><option>--manual</option></term>
+	<listitem>
+	  <simpara>
+	    Show this manual page.
+	  </simpara>
+	</listitem>
+      </varlistentry>
+
+      <varlistentry>
+        <term><option>--version</option></term>
+        <listitem>
+          <simpara>
+            Show the xdg-utils version information.
+          </simpara>
+        </listitem>
+      </varlistentry>
+    </variablelist>
+  </refsect1>
+  <refsect1 id="exitcodes">
+    <title>Exit Codes</title>
+    <para>
+      An exit code of 0 indicates success while a non-zero exit code
+      indicates failure. The following failure codes can be returned:
+    </para>
+    <variablelist>
+      <varlistentry>
+	<term><option>1</option></term>
+	<listitem>
+	  <simpara>
+	    Error in command line syntax.
+	  </simpara>
+	</listitem>
+      </varlistentry>
+      <varlistentry>
+	<term><option>3</option></term>
+	<listitem>
+	  <simpara>
+	    A required tool could not be found.
+	  </simpara>
+	</listitem>
+      </varlistentry>
+      <varlistentry>
+	<term><option>4</option></term>
+	<listitem>
+	  <simpara>
+	    The action failed.
+	  </simpara>
+	</listitem>
+      </varlistentry>
+    </variablelist>
+  </refsect1>
+  <refsect1 id="examples">
+    <title>Examples</title>
+    <para>
+<programlisting>
+xdg-terminal
+</programlisting>
+      Opens the user's default terminal emulator, just starting an interactive shell.
+    </para>
+    <para>
+<programlisting>
+xdg-terminal top
+</programlisting>
+      Opens the user's default terminal emulator and lets it run the top executable.
+    </para>
+  </refsect1>
+</refentry>
diff -Naur orig/scripts/generate-help-script.awk git/scripts/generate-help-script.awk
--- orig/scripts/generate-help-script.awk	1970-01-01 01:00:00.000000000 +0100
+++ git/scripts/generate-help-script.awk	2013-08-06 05:04:22.633970726 +0200
@@ -0,0 +1,110 @@
+#!/usr/bin/awk -f
+#---------------------------------------------
+#
+#   generate-script.awk
+#
+#   Simple AWK script to generate the XDG scripts, substituting the
+#   necessary text from other source files.
+#
+#   Copyright 2006, Benedikt Meurer <benny@xfce.org>
+#
+#   LICENSE:
+#
+#   Permission is hereby granted, free of charge, to any person obtaining a
+#   copy of this software and associated documentation files (the "Software"),
+#   to deal in the Software without restriction, including without limitation
+#   the rights to use, copy, modify, merge, publish, distribute, sublicense,
+#   and/or sell copies of the Software, and to permit persons to whom the
+#   Software is furnished to do so, subject to the following conditions:
+#
+#   The above copyright notice and this permission notice shall be included
+#   in all copies or substantial portions of the Software.
+#
+#   THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS
+#   OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
+#   FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL
+#   THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR
+#   OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE,
+#   ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR
+#   OTHER DEALINGS IN THE SOFTWARE.
+#
+#---------------------------------------------
+
+
+# All lines from the input file should be printed
+{
+	print
+}
+
+
+# The text from ../LICENSE should be inserted after
+# the "#   LICENSE:" line
+/^#   LICENSE:/ {
+	while (getline < "../LICENSE")
+		print
+	close ("../LICENSE")
+}
+
+
+# Insert the examples text from the .txt file
+# after the "cat << _MANUALPAGE" line
+/^cat << _MANUALPAGE/ {
+	# determine the name of the .txt file
+	txtfile = FILENAME
+	sub(/\.in$/, ".txt", txtfile)
+
+	# read the .txt file content
+	for (txtfile_print = 0; getline < txtfile; ) {
+#		if (match ($0, /^Examples/) != 0) {
+#			# print everything starting at the "Examples" line
+#			txtfile_print = 1
+#		}
+#		if (txtfile_print != 0) {
+#			print $0
+#		}
+                gsub("`","'")
+                gsub("—","-")
+                print $0
+	}
+	close (txtfile)
+}
+
+
+# Insert the usage text from the .txt file
+# after the "cat << _USAGE" line
+/^cat << _USAGE/ {
+	# determine the name of the .txt file
+	txtfile = FILENAME
+	sub(/\.in$/, ".txt", txtfile)
+
+	# read the .txt file content
+	for (txtfile_print = 0; getline < txtfile; ) {
+		if (match ($0, /^Name/) != 0) {
+			# skip empty line after "Name"
+			getline < txtfile
+
+			# from now on, print everything
+			txtfile_print = 1
+		}
+		else if (match ($0, /^Description/) != 0) {
+			# stop at "Description"
+			break
+		}
+		else if (txtfile_print != 0) {
+	                gsub("—","-")
+			print $0
+		}
+	}
+	close (txtfile)
+}
+
+
+# Insert the xdg-utils-common.in content after
+# the "#@xdg-utils-common@" line
+/^#@xdg-utils-common@/ {
+	while (getline < "xdg-utils-common.in")
+		print
+	close ("xdg-utils-common.in")
+}
+
+
diff -Naur orig/scripts/HACKING git/scripts/HACKING
--- orig/scripts/HACKING	1970-01-01 01:00:00.000000000 +0100
+++ git/scripts/HACKING	2013-08-06 05:04:22.629970696 +0200
@@ -0,0 +1,17 @@
+Note that the actual scripts are generated from xdg-*.in,
+xdg-utils-common.in and desc/xdg-*.xml which contains the
+command line descriptions. These are the files that you
+want to edit.  To add a new script, you must also provide 
+a desc/xdg-*.xml file.
+
+DO NOT MAKE CHANGES TO THE GENERATED SCRIPTS THEMSELVES!
+
+Use 'make scripts-clean' to delete all generated files and use
+'make scripts' to re-generate them.
+
+The manual files in man/ and html/ are also generated from the
+desc/xdg-*.xml files.
+
+Use 'make scripts html man' to update all generated files
+
+Use 'make release' to remove everything but the generated files.
diff -Naur orig/scripts/html/xdg-settings.html git/scripts/html/xdg-settings.html
--- orig/scripts/html/xdg-settings.html	2011-01-01 11:10:27.000000000 +0100
+++ git/scripts/html/xdg-settings.html	2013-08-06 05:04:22.633970726 +0200
@@ -1,4 +1,4 @@
-<html><head><meta http-equiv="Content-Type" content="text/html; charset=ISO-8859-1"><title>xdg-settings</title><meta name="generator" content="DocBook XSL Stylesheets V1.75.2"></head><body bgcolor="white" text="black" link="#0000FF" vlink="#840084" alink="#0000FF"><div class="refentry" title="xdg-settings"><a name="xdg-settings"></a><div class="titlepage"></div><div class="refnamediv"><h2>Name</h2><p>xdg-settings &#8212; get various settings from the desktop environment</p></div><div class="refsynopsisdiv" title="Synopsis"><h2>Synopsis</h2><div class="cmdsynopsis"><p><code class="command">xdg-settings</code>  { <code class="option"><em class="replaceable"><code>get</code></em></code>  |   <code class="option"><em class="replaceable"><code>check</code></em></code>  |   <code class="option"><em class="replaceable"><code>set</code></em></code> } {<code class="option">property</code>} [<code class="option">value</code>]</p></div><div class="cmdsynopsis"><p><code class="command">xdg-settings</code>  { <code class="option">--help</code>  |   <code class="option">--list</code>  |   <code class="option">--manual</code>  |   <code class="option">--version</code> }</p></div></div><div class="refsect1" title="Description"><a name="description"></a><h2>Description</h2><p>
+<html><head><meta http-equiv="Content-Type" content="text/html; charset=ISO-8859-1"><title>xdg-settings</title><meta name="generator" content="DocBook XSL Stylesheets V1.75.2"></head><body bgcolor="white" text="black" link="#0000FF" vlink="#840084" alink="#0000FF"><div class="refentry" title="xdg-settings"><a name="xdg-settings"></a><div class="titlepage"></div><div class="refnamediv"><h2>Name</h2><p>xdg-settings &#8212; get various settings from the desktop environment</p></div><div class="refsynopsisdiv" title="Synopsis"><h2>Synopsis</h2><div class="cmdsynopsis"><p><code class="command">xdg-settings</code>  { <code class="option"><em class="replaceable"><code>get</code></em></code>  |   <code class="option"><em class="replaceable"><code>check</code></em></code>  |   <code class="option"><em class="replaceable"><code>set</code></em></code> } {<code class="option">property</code>} [<code class="option">subproperty</code>] [<code class="option">value</code>]</p></div><div class="cmdsynopsis"><p><code class="command">xdg-settings</code>  { <code class="option">--help</code>  |   <code class="option">--list</code>  |   <code class="option">--manual</code>  |   <code class="option">--version</code> }</p></div></div><div class="refsect1" title="Description"><a name="description"></a><h2>Description</h2><p>
       xdg-settings gets various settings from the desktop environment.
       For instance, desktop environments often provide proxy configuration
       and default web browser settings. Using xdg-settings these parameters
@@ -15,7 +15,15 @@
             Show this manualpage.
           </dd><dt><span class="term"><code class="option">--version</code></span></dt><dd>
             Show the xdg-utils version information.
-          </dd></dl></div></div><div class="refsect1" title="Exit Codes"><a name="exitcodes"></a><h2>Exit Codes</h2><p>
+          </dd></dl></div></div><div class="refsect1" title="Properties"><a name="properties"></a><h2>Properties</h2><p>
+      When using xdg-settings to get, check or set a destkop setting, properties
+      and possibly sub-properties are used to specify the setting to be changed.
+    </p><p>
+      Some properties (such as default-web-browser) fully describe the setting
+      to be changed. Other properties (such as default-url-scheme-handler) require
+      more information (in this case the actual scheme to set the default handler
+      for) which must be provided in a sub-property.
+    </p></div><div class="refsect1" title="Exit Codes"><a name="exitcodes"></a><h2>Exit Codes</h2><p>
       An exit code of 0 indicates success while a non-zero exit code
       indicates failure. The following failure codes can be returned:
     </p><div class="variablelist"><dl><dt><span class="term"><code class="option">1</code></span></dt><dd>
@@ -43,4 +51,9 @@
       </p><pre class="programlisting">
         xdg-settings set default-web-browser google-chrome.desktop
       </pre><p>
+    </p><p>
+      Set the default mailto URL scheme handler to be evolution.desktop
+      </p><pre class="programlisting">
+        xdg-settings set default-url-scheme-handler mailto evolution.desktop
+      </pre><p>
     </p></div></div></body></html>
diff -Naur orig/scripts/Makefile git/scripts/Makefile
--- orig/scripts/Makefile	2011-01-01 11:09:15.000000000 +0100
+++ git/scripts/Makefile	1970-01-01 01:00:00.000000000 +0100
@@ -1,116 +0,0 @@
-MKDIR      	= mkdir -p
-RMDIR      	= rmdir
-INSTALL         = /usr/bin/install -c $(INSTALL_FLAGS)
-INSTALL_PROGRAM = ${INSTALL} $(INSTALL_PROGRAM_FLAGS)
-INSTALL_LIBRARY = ${INSTALL} $(INSTALL_PROGRAM_FLAGS)
-INSTALL_SCRIPT  = ${INSTALL} $(INSTALL_SCRIPT_FLAGS)
-INSTALL_DATA    = ${INSTALL} -m 644 $(INSTALL_DATA_FLAGS)
-XMLTO           = /usr/bin/xmlto
-
-prefix          = /usr/local
-exec_prefix     = ${prefix}
-bindir          = ${exec_prefix}/bin
-mandir          = ${prefix}/man
-
-SCRIPTS		= \
-    xdg-desktop-menu \
-    xdg-desktop-icon \
-    xdg-mime \
-    xdg-icon-resource \
-    xdg-open \
-    xdg-email \
-    xdg-screensaver \
-    xdg-settings
-#    xdg-su
-#    xdg-copy \
-#    xdg-file-dialog
-#    xdg-terminal
-
-MANPAGES=	$(SCRIPTS:%=man/%.1)
-WEBPAGES=	$(SCRIPTS:%=%.html)
-XMLFILES=	$(SCRIPTS:%=desc/%.xml)
-
-all:
-
-html:		index.html $(WEBPAGES)
-
-scripts:	README $(SCRIPTS)
-
-man:		$(MANPAGES)
-
-release:	scripts html man
-	rm -f xdg-*.in *~ HACKING generate-help-script.awk
-	rm -rf desc/
-	rm -rf xsl/
-	rm -f xdg-file-dialog xdg-su xdg-copy xdg-terminal
-
-distclean: clean
-	rm -f Makefile
-
-clean:
-
-scripts-clean:
-	rm -f $(SCRIPTS) README man/xdg-*.1 html/xdg-*.html
-
-README: $(SCRIPTS)
-	echo > $@
-	@for x in $(SCRIPTS) ; do \
-	    sh ./$$x --help | grep -B 100 Synopsis | sed -e '$$d' >> $@ ; \
-	done
-
-install:
-	$(MKDIR) $(DESTDIR)$(bindir)
-	for x in $(SCRIPTS) ; do \
-	    $(INSTALL_SCRIPT) $$x $(DESTDIR)$(bindir) ; \
-	done
-	$(MKDIR) $(DESTDIR)$(mandir)
-	$(MKDIR) $(DESTDIR)$(mandir)/man1
-	for x in $(MANPAGES) ; do \
-	    if [ -f $$x ]; then \
-	        $(INSTALL_DATA) $$x $(DESTDIR)$(mandir)/man1 ; \
-	    fi ; \
-	done
-
-uninstall:
-	for x in $(MANPAGES) ; do \
-	    rm -f $(DESTDIR)$(mandir)/man1/`basename $$x` ; \
-	done
-	-$(RMDIR) $(DESTDIR)$(mandir)/man1
-	-$(RMDIR) $(DESTDIR)$(mandir)
-	for x in $(SCRIPTS) ; do \
-	    rm -f $(DESTDIR)$(bindir)/$$x ; \
-	done
-	-$(RMDIR) $(DESTDIR)$(bindir)
-
-%: %.in %.txt
-	awk -f generate-help-script.awk $@.in | sed -e 's/@NAME@/'$@'/g' > $@
-	chmod a+x $@
-
-xdg-desktop-menu: xdg-desktop-menu.in xdg-utils-common.in
-xdg-desktop-icon: xdg-desktop-icon.in xdg-utils-common.in
-xdg-email: xdg-email.in xdg-utils-common.in
-xdg-mime: xdg-mime.in xdg-utils-common.in
-xdg-open: xdg-open.in xdg-utils-common.in
-xdg-screensaver: xdg-screensaver.in xdg-utils-common.in
-xdg-settings: xdg-settings.in xdg-utils-common.in
-xdg-icon-resource: xdg-icon-resource.in xdg-utils-common.in
-
-xdg-su: xdg-su.in xdg-utils-common.in
-xdg-copy: xdg-copy.in xdg-utils-common.in
-xdg-file-dialog: xdg-file-dialog.in xdg-utils-common.in
-xdg-terminal: xdg-terminal.in xdg-utils-common.in
-
-man/%.1: desc/%.xml
-	(cd man;$(XMLTO) man ../$<)
-
-index.html: $(XMLFILES)
-	(cat html/index.html.pre; \
-         xsltproc xsl/refentry2htmlindex.xsl $(XMLFILES); \
-         cat html/index.html.post ) > html/index.html
-
-%.html: desc/%.xml
-	(cd html;$(XMLTO) html-nochunks ../$<)
-
-%.txt: desc/%.xml
-	$(XMLTO) txt $<
-
diff -Naur orig/scripts/man/xdg-settings.1 git/scripts/man/xdg-settings.1
--- orig/scripts/man/xdg-settings.1	2011-01-01 11:03:14.000000000 +0100
+++ git/scripts/man/xdg-settings.1	2013-08-06 05:04:22.633970726 +0200
@@ -2,12 +2,12 @@
 .\"     Title: xdg-settings
 .\"    Author: Mike Mammarella
 .\" Generator: DocBook XSL Stylesheets v1.75.2 <http://docbook.sf.net/>
-.\"      Date: 12/31/2010
+.\"      Date: 07/20/2011
 .\"    Manual: xdg-settings Manual
 .\"    Source: [FIXME: source]
 .\"  Language: English
 .\"
-.TH "XDG\-SETTINGS" "1" "12/31/2010" "[FIXME: source]" "xdg-settings Manual"
+.TH "XDG\-SETTINGS" "1" "07/20/2011" "[FIXME: source]" "xdg-settings Manual"
 .\" -----------------------------------------------------------------
 .\" * Define some portability stuff
 .\" -----------------------------------------------------------------
@@ -31,7 +31,7 @@
 xdg-settings \- get various settings from the desktop environment
 .SH "SYNOPSIS"
 .HP \w'\fBxdg\-settings\fR\ 'u
-\fBxdg\-settings\fR {\fB\fIget\fR\fR | \fB\fIcheck\fR\fR | \fB\fIset\fR\fR} {\fBproperty\fR} [\fBvalue\fR]
+\fBxdg\-settings\fR {\fB\fIget\fR\fR | \fB\fIcheck\fR\fR | \fB\fIset\fR\fR} {\fBproperty\fR} [\fBsubproperty\fR] [\fBvalue\fR]
 .HP \w'\fBxdg\-settings\fR\ 'u
 \fBxdg\-settings\fR {\fB\-\-help\fR | \fB\-\-list\fR | \fB\-\-manual\fR | \fB\-\-version\fR}
 .SH "DESCRIPTION"
@@ -60,6 +60,11 @@
 .RS 4
 Show the xdg\-utils version information\&.
 .RE
+.SH "PROPERTIES"
+.PP
+When using xdg\-settings to get, check or set a destkop setting, properties and possibly sub\-properties are used to specify the setting to be changed\&.
+.PP
+Some properties (such as default\-web\-browser) fully describe the setting to be changed\&. Other properties (such as default\-url\-scheme\-handler) require more information (in this case the actual scheme to set the default handler for) which must be provided in a sub\-property\&.
 .SH "EXIT CODES"
 .PP
 An exit code of 0 indicates success while a non\-zero exit code indicates failure\&. The following failure codes can be returned:
@@ -123,6 +128,19 @@
 .if n \{\
 .RE
 .\}
+.PP
+Set the default mailto URL scheme handler to be evolution\&.desktop
+.sp
+.if n \{\
+.RS 4
+.\}
+.nf
+        xdg\-settings set default\-url\-scheme\-handler mailto evolution\&.desktop
+      
+.fi
+.if n \{\
+.RE
+.\}
 .sp
 .SH "AUTHOR"
 .PP
@@ -132,5 +150,5 @@
 .RE
 .SH "COPYRIGHT"
 .br
-Copyright \(co 2009
+Copyright \(co 2009-2011
 .br
diff -Naur orig/scripts/xdg-copy git/scripts/xdg-copy
--- orig/scripts/xdg-copy	1970-01-01 01:00:00.000000000 +0100
+++ git/scripts/xdg-copy	2013-08-06 05:04:22.633970726 +0200
@@ -0,0 +1,303 @@
+#!/bin/sh
+#---------------------------------------------
+#   xdg-copy
+#
+#   Utility script to copy files specified by URLs, including
+#   downloading and uploading from/to remote sites.
+#
+#   Refer to the usage() function below for usage.
+#
+#   Copyright 2006, Kevin Krammer <kevin.krammer@gmx.at>
+#   Copyright 2006, Jeremy White <jwhite@codeweavers.com>
+#
+#   LICENSE:
+#
+#   Permission is hereby granted, free of charge, to any person obtaining a
+#   copy of this software and associated documentation files (the "Software"),
+#   to deal in the Software without restriction, including without limitation
+#   the rights to use, copy, modify, merge, publish, distribute, sublicense,
+#   and/or sell copies of the Software, and to permit persons to whom the
+#   Software is furnished to do so, subject to the following conditions:
+#
+#   The above copyright notice and this permission notice shall be included
+#   in all copies or substantial portions of the Software.
+#
+#   THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS
+#   OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
+#   FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL
+#   THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR
+#   OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE,
+#   ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR
+#   OTHER DEALINGS IN THE SOFTWARE.
+#
+#---------------------------------------------
+
+manualpage()
+{
+cat << _MANUALPAGE
+Name
+
+   xdg-copy -- command line tool for copying files between desktop URIs
+
+Synopsis
+
+   xdg-copy source destination
+
+   xdg-copy { --help | --manual | --version }
+
+Description
+
+   xdg-copy copies source to destination and provides visual feedback to the
+   user during the operation. Both source and destination can either be a
+   file or URL. Supported URL types are file, ftp, http and https. Additional
+   URL types may be supported depending on the desktop environment.
+
+   xdg-copy is for use inside a desktop session only. It is not recommended
+   to use xdg-copy as root.
+
+Options
+
+   --help
+           Show command synopsis.
+
+   --manual
+           Show this manualpage.
+
+   --version
+           Show the xdg-utils version information.
+
+Exit Codes
+
+   An exit code of 0 indicates success while a non-zero exit code indicates
+   failure. The following failure codes can be returned:
+
+   1
+           Error in command line syntax.
+
+   2
+           One of the files passed on the command line did not exist.
+
+   3
+           A required tool could not be found.
+
+   4
+           The action failed.
+
+Examples
+
+ xdg-copy "http://portland.freedesktop.org/png/freedesktop-logo.png" .
+
+ xdg-copy "/tmp/foobar.png" "/home/user/foobar-copy.png"
+_MANUALPAGE
+}
+
+usage()
+{
+cat << _USAGE
+   xdg-copy -- command line tool for copying files between desktop URIs
+
+Synopsis
+
+   xdg-copy source destination
+
+   xdg-copy { --help | --manual | --version }
+
+_USAGE
+}
+
+#@xdg-utils-common@
+
+#----------------------------------------------------------------------------
+#   Common utility functions included in all XDG wrapper scripts
+#----------------------------------------------------------------------------
+
+#-------------------------------------------------------------
+# Exit script on successfully completing the desired operation
+
+exit_success()
+{
+    if [ $# -gt 0 ]; then
+        echo "$@"
+        echo
+    fi
+
+    exit 0
+}
+
+
+#-----------------------------------------
+# Exit script on malformed arguments, not enough arguments
+# or missing required option.
+# prints usage information
+
+exit_failure_syntax()
+{
+    if [ $# -gt 0 ]; then
+        echo "xdg-copy: $@" >&2
+        echo "Try 'xdg-copy --help' for more information." >&2
+    else
+        usage
+        echo "Use 'man xdg-copy' or 'xdg-copy --manual' for additional info." 
+    fi
+
+    exit 1
+}
+
+#-------------------------------------------------------------
+# Exit script on missing file specified on command line
+
+exit_failure_file_missing()
+{
+    if [ $# -gt 0 ]; then
+        echo "xdg-copy: $@" >&2
+    fi
+
+    exit 2
+}
+
+#-------------------------------------------------------------
+# Exit script on failure to locate necessary tool applications
+
+exit_failure_operation_impossible()
+{
+    if [ $# -gt 0 ]; then
+        echo "xdg-copy: $@" >&2
+    fi
+
+    exit 3
+}
+
+#-------------------------------------------------------------
+# Exit script on failure returned by a tool application
+
+exit_failure_operation_failed()
+{
+    if [ $# -gt 0 ]; then
+        echo "xdg-copy: $@" >&2
+    fi
+
+    exit 4
+}
+
+
+#----------------------------------------
+# Checks for shared commands, e.g. --help
+
+check_common_commands()
+{
+    while [ $# -gt 0 ] ; do
+        parm=$1
+        shift
+
+        case $parm in
+            --help)
+            usage
+            echo "Use 'man xdg-copy' or 'xdg-copy --manual' for additional info." 
+            exit_success
+            ;;
+
+            --manual)
+            manualpage
+            exit_success
+            ;;
+
+            --version)
+            echo "xdg-copy 1.0beta1"
+            exit_success
+            ;;
+        esac
+    done
+}
+
+check_common_commands "$@"
+
+#--------------------------------------
+# Checks for known desktop environments
+# set variable DE to the desktop environments name, lowercase
+
+detectDE()
+{
+    if [ x"$KDE_FULL_SESSION" = x"true" ]; then DE=kde;
+    elif [ x"$GNOME_DESKTOP_SESSION_ID" != x"" ]; then DE=gnome;
+    elif xprop -root _DT_SAVE_MODE | grep ' = \"xfce4\"$' >/dev/null 2>&1; then DE=xfce;
+    fi
+}
+
+#----------------------------------------------------------------------------
+
+
+
+copy_kde()
+{
+    kfmclient copy "$1" "$2"
+
+    if [ $? -eq 0 ]; then
+        exit_success
+    else
+        exit_failure_operation_failed
+    fi
+}
+
+copy_gnome()
+{
+    if gvfs-copy --help 2>/dev/null 1>&2; then
+        gvfs-copy "$1" "$2"
+    else
+        gnomevfs-copy "$1" "$2"
+    fi
+
+    if [ $? -eq 0 ]; then
+        exit_success
+    else
+        exit_failure_operation_failed
+    fi
+}
+
+[ x"$1" != x"" ] || exit_failure_syntax
+
+source=
+dest=
+while [ $# -gt 0 ] ; do
+    parm=$1
+    shift
+
+    case $parm in
+      -*)
+        exit_failure_syntax "unexpected option '$parm'"
+        ;;
+
+      *)
+        if [ -n "$dest" ] ; then
+            exit_failure_syntax "unexpected argument '$parm'"
+        fi
+        if [ -n "$source" ] ; then
+            dest=$parm
+        else
+            source=$parm
+        fi
+        ;;
+    esac
+done
+
+if [ -z "${source}" ] ; then
+    exit_failure_syntax "source argument missing"
+fi
+if [ -z "${dest}" ] ; then
+    exit_failure_syntax "destination argument missing"
+fi
+
+detectDE
+
+case "$DE" in
+    kde)
+    copy_kde "$source" "$dest"
+    ;;
+
+    gnome)
+    copy_gnome "$source" "$dest"
+    ;;
+
+    *)
+    exit_failure_operation_impossible "no method available for copying '$source' to '$dest'"
+    ;;
+esac
diff -Naur orig/scripts/xdg-copy.in git/scripts/xdg-copy.in
--- orig/scripts/xdg-copy.in	1970-01-01 01:00:00.000000000 +0100
+++ git/scripts/xdg-copy.in	2013-08-06 05:04:22.637970760 +0200
@@ -0,0 +1,106 @@
+#!/bin/sh
+#---------------------------------------------
+#   xdg-copy
+#
+#   Utility script to copy files specified by URLs, including
+#   downloading and uploading from/to remote sites.
+#
+#   Refer to the usage() function below for usage.
+#
+#   Copyright 2009-2010, Fathi Boudra <fabo@freedesktop.org>
+#   Copyright 2009-2010, Rex Dieter <rdieter@fedoraproject.org>
+#   Copyright 2006, Kevin Krammer <kevin.krammer@gmx.at>
+#   Copyright 2006, Jeremy White <jwhite@codeweavers.com>
+#
+#   LICENSE:
+#
+#---------------------------------------------
+
+manualpage()
+{
+cat << _MANUALPAGE
+_MANUALPAGE
+}
+
+usage()
+{
+cat << _USAGE
+_USAGE
+}
+
+#@xdg-utils-common@
+
+copy_kde()
+{
+    kfmclient copy "$1" "$2"
+
+    if [ $? -eq 0 ]; then
+        exit_success
+    else
+        exit_failure_operation_failed
+    fi
+}
+
+copy_gnome()
+{
+    if gvfs-copy --help 2>/dev/null 1>&2; then
+        gvfs-copy "$1" "$2"
+    else
+        gnomevfs-copy "$1" "$2"
+    fi
+
+    if [ $? -eq 0 ]; then
+        exit_success
+    else
+        exit_failure_operation_failed
+    fi
+}
+
+[ x"$1" != x"" ] || exit_failure_syntax
+
+source=
+dest=
+while [ $# -gt 0 ] ; do
+    parm=$1
+    shift
+
+    case $parm in
+      -*)
+        exit_failure_syntax "unexpected option '$parm'"
+        ;;
+
+      *)
+        if [ -n "$dest" ] ; then
+            exit_failure_syntax "unexpected argument '$parm'"
+        fi
+        if [ -n "$source" ] ; then
+            dest=$parm
+        else
+            source=$parm
+        fi
+        ;;
+    esac
+done
+
+if [ -z "${source}" ] ; then
+    exit_failure_syntax "source argument missing"
+fi
+if [ -z "${dest}" ] ; then
+    exit_failure_syntax "destination argument missing"
+fi
+
+detectDE
+
+case "$DE" in
+    kde)
+    copy_kde "$source" "$dest"
+    ;;
+
+    gnome*)
+    copy_gnome "$source" "$dest"
+    ;;
+
+    *)
+    exit_failure_operation_impossible "no method available for copying '$source' to '$dest'"
+    ;;
+esac
diff -Naur orig/scripts/xdg-desktop-icon git/scripts/xdg-desktop-icon
--- orig/scripts/xdg-desktop-icon	2011-01-01 11:03:14.000000000 +0100
+++ git/scripts/xdg-desktop-icon	2013-08-06 05:04:22.637970760 +0200
@@ -380,7 +380,7 @@
             ;;
 
             --version)
-            echo "xdg-desktop-icon 1.0.2"
+            echo "xdg-desktop-icon 1.1.0 rc1"
             exit_success
             ;;
         esac
@@ -420,7 +420,8 @@
 
 kfmclient_fix_exit_code()
 {
-    version=`kde${KDE_SESSION_VERSION}-config --version 2>/dev/null | grep '^KDE'`
+    [ x"$KDE_SESSION_VERSION" = x"4" ] && return 0;
+    version=`LC_ALL=C.UTF-8 kde-config --version 2>/dev/null | grep '^KDE'`
     major=`echo $version | sed 's/KDE.*: \([0-9]\).*/\1/'`
     minor=`echo $version | sed 's/KDE.*: [0-9]*\.\([0-9]\).*/\1/'`
     release=`echo $version | sed 's/KDE.*: [0-9]*\.[0-9]*\.\([0-9]\).*/\1/'`
diff -Naur orig/scripts/xdg-desktop-icon.in git/scripts/xdg-desktop-icon.in
--- orig/scripts/xdg-desktop-icon.in	1970-01-01 01:00:00.000000000 +0100
+++ git/scripts/xdg-desktop-icon.in	2013-08-06 05:04:22.637970760 +0200
@@ -0,0 +1,160 @@
+#!/bin/sh
+#---------------------------------------------
+#   xdg-desktop-icon
+#
+#   Utility script to install desktop items on a Linux desktop.
+#
+#   Refer to the usage() function below for usage.
+#
+#   Copyright 2009-2010, Fathi Boudra <fabo@freedesktop.org>
+#   Copyright 2009-2010, Rex Dieter <rdieter@fedoraproject.org>
+#   Copyright 2006, Kevin Krammer <kevin.krammer@gmx.at>
+#   Copyright 2006, Jeremy White <jwhite@codeweavers.com>
+#
+#   LICENSE:
+#
+#---------------------------------------------
+
+usage()
+{
+cat << _USAGE
+_USAGE
+}
+
+manualpage()
+{
+cat << _MANUALPAGE
+_MANUALPAGE
+}
+
+#@xdg-utils-common@
+
+[ x"$1" != x"" ] || exit_failure_syntax
+
+action=
+desktop_file=
+
+case $1 in
+  install)
+    action=install
+    ;;
+
+  uninstall)
+    action=uninstall
+    ;;
+
+  *)
+    exit_failure_syntax "unknown command '$1'"
+    ;;
+esac
+
+shift
+
+vendor=true
+while [ $# -gt 0 ] ; do
+    parm=$1
+    shift
+
+    case $parm in
+      --novendor)
+        vendor=false
+        ;;
+
+      -*)
+        exit_failure_syntax "unexpected option '$parm'"
+        ;;
+
+      *)
+        if [ -n "$desktop_file" ] ; then
+            exit_failure_syntax "unexpected argument '$parm'"
+        fi
+        if [ "$action" = "install" ] ; then
+            check_input_file "$parm"
+        fi
+        desktop_file=$parm
+        ;;
+    esac
+done
+
+# Shouldn't happen
+if [ -z "$action" ] ; then
+    exit_failure_syntax "command argument missing"
+fi
+
+if [ -z "$desktop_file" ] ; then
+    exit_failure_syntax "FILE argument missing"
+fi
+
+filetype=
+case "$desktop_file" in
+  *.desktop)
+     filetype=desktop
+     if [ "$vendor" = "true" -a "$action" = "install" ] ; then
+        check_vendor_prefix "$desktop_file"
+     fi
+     ;;
+  *)
+     filetype=other
+     ;;
+esac
+
+my_umask=077
+desktop_dir="$HOME/Desktop"
+if xdg-user-dir 2>/dev/null 1>&2; then
+  desktop_dir=`xdg-user-dir DESKTOP`
+fi
+desktop_dir_kde=`kde${KDE_SESSION_VERSION}-config --userpath desktop 2> /dev/null`
+if gconftool-2 -g /apps/nautilus/preferences/desktop_is_home_dir 2> /dev/null | grep true > /dev/null; then
+    desktop_dir_gnome="$HOME"
+    # Don't create $HOME/Desktop if it doesn't exist
+    [ -w "$desktop_dir" ] || desktop_dir=
+fi
+if [ -n "$desktop_dir_kde" ]; then
+    if [ ! -d "$desktop_dir_kde" ]; then
+        save_umask=`umask`
+        umask $my_umask
+        mkdir -p "$desktop_dir_kde"
+        umask $save_umask
+    fi
+    # Is the KDE desktop dir != $HOME/Desktop ?
+    if [ "x`readlink -f "$desktop_dir"`" != "x`readlink -f "$desktop_dir_kde"`" ]; then
+        # If so, don't create $HOME/Desktop if it doesn't exist
+        [ -w "$desktop_dir" ] || desktop_dir=
+    else
+        desktop_dir_kde=
+    fi
+fi
+
+basefile=`basename "$desktop_file"`
+
+DEBUG 1 "$action $desktop_file in $desktop_dir $desktop_dir_kde $desktop_dir_gnome"
+
+case $action in
+    install)
+        save_umask=`umask`
+        umask $my_umask
+
+        for x in "$desktop_dir" "$desktop_dir_kde" "$desktop_dir_gnome" ; do
+            if [ -n "$x" ]; then
+                mkdir -p "$x"
+                eval 'cp "$desktop_file" "$x/$basefile"'$xdg_redirect_output 
+                chmod u+x "$x/$basefile"
+            fi
+        done
+
+        umask $save_umask
+        ;;
+
+    uninstall)
+        for x in "$desktop_dir" "$desktop_dir_kde" "$desktop_dir_gnome" ; do
+            if [ -n "$x" ]; then
+                rm -f "$x/$basefile"
+            fi
+        done
+
+        ;;
+esac
+
+exit_success
+
+
diff -Naur orig/scripts/xdg-desktop-menu git/scripts/xdg-desktop-menu
--- orig/scripts/xdg-desktop-menu	2011-01-01 11:03:14.000000000 +0100
+++ git/scripts/xdg-desktop-menu	2013-08-06 05:04:22.637970760 +0200
@@ -576,7 +576,7 @@
             ;;
 
             --version)
-            echo "xdg-desktop-menu 1.0.2"
+            echo "xdg-desktop-menu 1.1.0 rc1"
             exit_success
             ;;
         esac
@@ -616,7 +616,8 @@
 
 kfmclient_fix_exit_code()
 {
-    version=`kde${KDE_SESSION_VERSION}-config --version 2>/dev/null | grep '^KDE'`
+    [ x"$KDE_SESSION_VERSION" = x"4" ] && return 0;
+    version=`LC_ALL=C.UTF-8 kde-config --version 2>/dev/null | grep '^KDE'`
     major=`echo $version | sed 's/KDE.*: \([0-9]\).*/\1/'`
     minor=`echo $version | sed 's/KDE.*: [0-9]*\.\([0-9]\).*/\1/'`
     release=`echo $version | sed 's/KDE.*: [0-9]*\.[0-9]*\.\([0-9]\).*/\1/'`
diff -Naur orig/scripts/xdg-desktop-menu.in git/scripts/xdg-desktop-menu.in
--- orig/scripts/xdg-desktop-menu.in	1970-01-01 01:00:00.000000000 +0100
+++ git/scripts/xdg-desktop-menu.in	2013-08-06 05:04:22.637970760 +0200
@@ -0,0 +1,628 @@
+#!/bin/sh
+#---------------------------------------------
+#   xdg-desktop-menu
+#
+#   Utility script to install menu items on a Linux desktop.
+#   Refer to the usage() function below for usage.
+#
+#   Copyright 2009-2010, Fathi Boudra <fabo@freedesktop.org>
+#   Copyright 2009-2010, Rex Dieter <rdieter@fedoraproject.org>
+#   Copyright 2006, Kevin Krammer <kevin.krammer@gmx.at>
+#   Copyright 2006, Jeremy White <jwhite@codeweavers.com>
+#
+#   LICENSE:
+#
+#---------------------------------------------
+
+manualpage()
+{
+cat << _MANUALPAGE
+_MANUALPAGE
+}
+
+usage()
+{
+cat << _USAGE
+_USAGE
+}
+
+#@xdg-utils-common@
+
+update_desktop_database()
+{
+#    echo Update desktop database: $mode
+    if [ "$mode" = "system" ] ; then
+        for x in `echo $PATH | sed 's/:/ /g'` /opt/gnome/bin; do
+           if [ -x $x/update-desktop-database ] ; then
+              DEBUG 1 "Running $x/update-desktop-database"
+              eval '$x/update-desktop-database'$xdg_redirect_output
+              return
+           fi
+        done
+    fi
+}
+
+# Make application $1/$2 the default for all the mimetypes it support,
+# iff such mimetype didn't had a default application already.
+# $1 Install dir for desktop file
+# $2 base name of desktop file
+make_lazy_default()
+{
+    local mimetypes
+    local xdg_user_dir
+    local xdg_default_dirs
+
+    DEBUG 1 "make_lazy_default $1/$2"
+    mimetypes=`awk '
+{
+    if (match($0,/MimeType=/)) {
+        split(substr($0,RSTART+9),mimetypes,";")
+        for (n in mimetypes)
+        {
+               if (mimetypes[n])
+                 print mimetypes[n]
+        }
+    }
+}' "$1/$2" 2> /dev/null`
+
+    for MIME in $mimetypes ; do
+        xdg_default_dirs="$XDG_DATA_DIRS"
+        [ -n "$xdg_default_dirs" ] || xdg_default_dirs=/usr/local/share/:/usr/share/
+        if [ x"$mode" = x"user" ] ; then
+            xdg_user_dir="$XDG_DATA_HOME"
+            [ -n "$xdg_user_dir" ] || xdg_user_dir="$HOME/.local/share"
+            xdg_default_dirs="$xdg_user_dir:$xdg_default_dirs"
+        fi
+        local default_app
+        for x in `echo "$xdg_default_dirs" | sed 's/:/ /g'`; do
+            DEBUG 2 "Checking $x/applications/defaults.list"
+            default_app=`grep "$MIME=" $x/applications/defaults.list 2> /dev/null | cut -d '=' -f 2`
+            if [ -n "$default_app" ] ; then
+                DEBUG 2 "Found default apps for $MIME: $default_app"
+                default_app="$default_app;"
+                break;
+            fi
+        done
+        DEBUG 2 "Current default apps for $MIME: $default_app"
+        if echo "$default_app" | grep "$2" > /dev/null 2> /dev/null; then
+            # App already listed as default
+            continue;
+        fi
+        default_file="$(readlink -f "$1/defaults.list")"
+        DEBUG 1 "Updating $default_file"
+        grep -v "$MIME=" $default_file > ${default_file}.new 2> /dev/null
+        if ! grep "[Default Applications]" ${default_file}.new > /dev/null; then
+            echo "[Default Applications]" >> ${default_file}.new
+        fi
+        echo $MIME="$default_app$2" >> ${default_file}.new
+        mv ${default_file}.new $default_file
+    done
+}
+
+update_submenu()
+{
+    DEBUG 1 "update_submenu $1"
+    menu_file="$1"
+
+    xdg_dir_name=menus
+    xdg_user_dir="$XDG_CONFIG_HOME"
+    [ -n "$xdg_user_dir" ] || xdg_user_dir="$HOME/.config"
+    xdg_user_dir="$xdg_user_dir/$xdg_dir_name"
+
+    xdg_system_dirs="$XDG_CONFIG_DIRS"
+    [ -n "$xdg_system_dirs" ] || xdg_system_dirs=/etc/xdg
+    xdg_global_dir=
+    for x in `echo $xdg_system_dirs | sed 's/:/ /g'` ; do
+        if [ -w $x/$xdg_dir_name ] ; then
+            xdg_global_dir="$x/$xdg_dir_name"
+            break
+        fi
+    done
+    xdg_user_dir="$xdg_user_dir/applications-merged"
+    xdg_global_dir="$xdg_global_dir/applications-merged"
+
+    DEBUG 3 "Install locations for *.menu file:"
+    DEBUG 3 "xdg_user_dir: $xdg_user_dir"
+    DEBUG 3 "xdg_global_dir: $xdg_global_dir"
+    DEBUG 3 "kde_user_dir: $kde_user_dir"
+    DEBUG 3 "kde_global_dir: $kde_global_dir"
+    DEBUG 3 "gnome_user_dir: $gnome_user_dir"
+    DEBUG 3 "gnome_global_dir: $gnome_global_dir"
+
+    if [ x"$mode" = x"user" ] ; then
+        xdg_dir="$xdg_user_dir"
+        kde_dir="$kde_user_dir"
+        gnome_dir="$gnome_user_dir"
+        my_umask=077
+        my_chmod=0600
+    else
+        xdg_dir="$xdg_global_dir"
+        kde_dir="$kde_global_dir"
+        gnome_dir="$gnome_global_dir"
+        my_umask=022
+        my_chmod=0644
+        if [ -z "${xdg_dir}${kde_dir}${gnome_dir}" ] ; then
+            exit_failure_operation_impossible "No writable system menu directory found."
+        fi
+    fi
+
+    if [ -z "$menu_file" ] ; then
+        # Work around for SUSE/gnome 2.12 to pick up new ~/.local/share/applications
+        save_umask=`umask`
+        umask $my_umask
+
+        mkdir -p $xdg_dir
+        touch $xdg_dir/@NAME@-dummy.menu
+
+        umask $save_umask
+        return
+    fi
+
+    if [ $action = "install" ] && [ -f "/etc/xdg/menus/gnome-applications.menu" ] ; then
+        # Work around for Debian Gnome
+        gnome_xdg_dir=`echo "$xdg_dir" | sed -e 's^/applications-merged^/gnome-applications-merged^'`
+        if [ ! -e "$gnome_xdg_dir" ] ; then
+            DEBUG 1 "Debian Workaround: Link '$xdg_dir' to '$gnome_xdg_dir'"
+            mkdir -p `dirname "$gnome_xdg_dir"`
+            eval 'ln -s "applications-merged" "$gnome_xdg_dir"'$xdg_redirect_output
+        fi
+    fi
+    if [ $action = "install" ] && [ -f "/etc/mandrake-release" ] ; then
+        # Work around for Mandriva 2006
+        mandrake_xdg_dir=`echo "$xdg_dir" | sed -e 's^/applications-merged^/applications-mdk-merged^'`
+        if [ ! -e "$mandrake_xdg_dir" ] ; then
+            DEBUG 1 "Mandriva Workaround: Link '$xdg_dir' to '$mandrake_xdg_dir'"
+            mkdir -p `dirname "$mandrake_xdg_dir"`
+            eval 'ln -s "applications-merged" "$mandrake_xdg_dir"'$xdg_redirect_output
+        fi
+    fi
+    if [ $action = "install" -a x"$mode" = x"user" ] && [ -d "/etc/xdg/menus/kde-applications-merged" ] ; then
+        # Work around for Fedora Core 5 + patched KDE
+        kde_xdg_dir=`echo "$xdg_dir" | sed -e 's^/applications-merged^/kde-applications-merged^'`
+        if [ ! -e "$kde_xdg_dir" ] ; then
+            DEBUG 1 "Fedora Workaround: Link '$xdg_dir' to '$kde_xdg_dir'"
+            mkdir -p `dirname "$kde_xdg_dir"`
+            eval 'ln -s "applications-merged" "$kde_xdg_dir"'$xdg_redirect_output
+        fi
+    fi
+    if [ $action = "install" -a x"$mode" = x"system" ] && [ -d "/etc/xdg/menus/kde-applications-merged" ] && [ ! -d "/etc/xdg/menus/applications-merged" ] ; then
+        # Work around for Kubuntu 6.06
+        kde_xdg_dir=`echo "$xdg_dir" | sed -e 's^/applications-merged^/kde-applications-merged^'`
+        DEBUG 1 "Kubuntu Workaround: Link '$xdg_dir' to 'kde-applications-merged'"
+        eval 'ln -s "kde-applications-merged" "$xdg_dir"'$xdg_redirect_output
+    fi
+
+    orig_menu_file=$xdg_dir/$menu_file
+
+    DEBUG 1 "Updating $orig_menu_file ($action)"
+
+    test "${TMPDIR+set}" = set || TMPDIR=/tmp
+    tmpfile=`mktemp $TMPDIR/tmp.XXXXXXXXXX`
+    orig_desktop_files=
+    if [ -r "$orig_menu_file" ] ; then
+        awk '
+# List all files within <Filename> tags
+BEGIN {
+  RS="<"
+}
+/^Filename/ {
+  if (match($0,/>/)) {
+     print substr($0,RSTART+1)
+  }
+}' $orig_menu_file > $tmpfile
+    fi
+
+    orig_desktop_files=`cat $tmpfile`
+    new_desktop_files=
+    if [ $action = "install" ] ; then
+        for desktop_file in $desktop_files; do
+            basefile=`basename "$desktop_file"`
+            if ! grep '^'$basefile'$' $tmpfile > /dev/null 2> /dev/null ; then
+            	# Append
+            	echo "$basefile" >> $tmpfile
+            fi
+        done
+        new_desktop_files=`cat $tmpfile`
+    fi
+    if [ $action = "uninstall" ] ; then
+        echo > $tmpfile
+        for desktop_file in $desktop_files; do
+            echo "$desktop_file" >> $tmpfile
+        done
+        # Files to uninstall are listed in $tmpfile
+        # Existing files are in $orig_desktop_files
+        for desktop_file in $orig_desktop_files; do
+            if ! grep '^'$desktop_file'$' $tmpfile > /dev/null 2> /dev/null; then
+            	# Keep this file, it's not in the uninstall list
+            	new_desktop_files="$new_desktop_files $desktop_file"
+            fi
+        done
+    fi
+    rm -f "$tmpfile"
+
+    DEBUG 3 "Files to list in $menu_file: $new_desktop_files"
+
+    if [ -n "$new_desktop_files" ] ; then
+        # Install/update
+        test "${TMPDIR+set}" = set || TMPDIR=/tmp
+        tmpfile=`mktemp $TMPDIR/tmp.XXXXXXXXXX`
+        (
+            echo '<!DOCTYPE Menu PUBLIC "-//freedesktop//DTD Menu 1.0//EN"'
+            echo '    "http://www.freedesktop.org/standards/menu-spec/menu-1.0.dtd">'
+            echo '<!-- Do not edit manually - generated and managed by @NAME@ -->'
+            echo '<Menu>'
+            echo '    <Name>Applications</Name>'
+
+            for desktop_file in $directory_files; do
+                basefile=`basename "$desktop_file"`
+                basefilename=`echo "$basefile"|cut -d '.' -f 1`
+                echo "<Menu>"
+                echo "    <Name>$basefilename</Name>"
+                echo "    <Directory>$basefile</Directory>"
+            done
+
+            echo "    <Include>"
+            for desktop_file in $new_desktop_files; do
+                echo "        <Filename>$desktop_file</Filename>"
+            done
+            echo "    </Include>"
+
+            for desktop_file in $directory_files; do
+                echo "</Menu>"
+            done
+
+            echo '</Menu>'
+        ) > $tmpfile
+        chmod $my_chmod $tmpfile
+
+        save_umask=`umask`
+        umask $my_umask
+
+        mkdir -p $xdg_dir
+        eval 'cp $tmpfile $xdg_dir/$menu_file'$xdg_redirect_output
+
+        umask $save_umask
+	rm -f "$tmpfile"
+    else
+        # Uninstall
+        rm -f $xdg_dir/$menu_file
+    fi
+
+    # Uninstall .directory files only if no longer referenced
+    if [ $action = "uninstall" ] ; then
+        test "${TMPDIR+set}" = set || TMPDIR=/tmp
+        tmpfile=`mktemp $TMPDIR/tmp.XXXXXXXXXX`
+        for menu_file in $xdg_dir/*; do
+            if grep 'generated and managed by @NAME@' $menu_file > /dev/null 2> /dev/null; then
+                awk '
+# List all files within <Directory> tags
+BEGIN {
+  RS="<"
+}
+/^Directory/ {
+  if (match($0,/>/)) {
+     print substr($0,RSTART+1)
+  }
+}' $menu_file >> $tmpfile
+            fi
+        done
+        orig_directory_files="$directory_files"
+        directory_files=
+        for desktop_file in $orig_directory_files; do
+            if ! grep '^'$desktop_file'$' $tmpfile > /dev/null 2> /dev/null; then
+                # No longer in use, safe to delete
+               directory_files="$directory_files $desktop_file"
+            fi
+        done
+        rm -f "$tmpfile"
+    fi
+}
+
+
+[ x"$1" != x"" ] || exit_failure_syntax
+
+mode=
+action=
+update=yes
+desktop_files=
+directory_files=
+
+case $1 in
+  install)
+    action=install
+    ;;
+
+  uninstall)
+    action=uninstall
+    ;;
+
+  forceupdate)
+    action=forceupdate
+    ;;
+
+  *)
+    exit_failure_syntax "unknown command '$1'"
+    ;;
+esac
+
+shift
+
+vendor=true
+while [ $# -gt 0 ] ; do
+    parm="$1"
+    shift
+
+    case "$parm" in
+      --noupdate)
+        update=no
+        ;;
+
+      --mode)
+        if [ -z "$1" ] ; then
+            exit_failure_syntax "mode argument missing for --mode"
+        fi
+        case "$1" in
+          user)
+            mode="user"
+            ;;
+
+          system)
+            mode="system"
+            ;;
+
+          *)
+            exit_failure_syntax "unknown mode '$1'"
+            ;;
+        esac
+        shift
+        ;;
+
+      --novendor)
+        vendor=false
+        ;;
+
+      -*)
+        exit_failure_syntax "unexpected option '$parm'"
+        ;;
+
+      *)
+        if [ "$action" = "install" ] ; then
+            check_input_file "$parm"
+        fi
+        case "$parm" in
+           *.directory)
+              if [ -n "$desktop_files" ] ; then
+                  exit_failure_syntax "'$parm' must preceed any *.desktop file"
+              fi
+              directory_files="$directory_files $parm"
+              ;;
+           *.desktop)
+              desktop_files="$desktop_files $parm"
+              ;;
+           *)
+              exit_failure_syntax "file to $action must be a *.directory or *.desktop file"
+              ;;
+        esac
+        ;;
+    esac
+done
+
+# Shouldn't happen
+if [ -z "$action" ] ; then
+    exit_failure_syntax "command argument missing"
+fi
+
+if [ -n "$XDG_UTILS_INSTALL_MODE" ] ; then
+    if [ "$XDG_UTILS_INSTALL_MODE" = "system" ] ; then
+        mode="system"
+    elif [ "$XDG_UTILS_INSTALL_MODE" = "user" ] ; then
+        mode="user"
+    fi
+fi
+
+if [ -z "$mode" ] ; then
+    if [ `whoami` = "root" ] ; then
+       mode="system"
+    else
+       mode="user"
+    fi
+fi
+
+if [ x"$action" = x"forceupdate" ] ; then
+    update_desktop_database
+    exit_success
+fi
+
+if [ -z "$desktop_files" ] ; then
+    exit_failure_syntax "desktop-file argument missing"
+fi
+
+menu_name=
+for desktop_file in $directory_files; do
+    if [ "$vendor" =  "true" -a "$action" = "install" ] ; then
+        check_vendor_prefix "$desktop_file"
+    fi
+
+    basefilename=`basename "$desktop_file" | cut -d '.' -f 1`
+    if [ -z "$menu_name" ] ; then
+        menu_name="$basefilename"
+    else
+        menu_name="$menu_name-$basefilename"
+    fi
+done
+
+if [ -n "$menu_name" ] ; then
+    if [ x"$mode" = x"user" ] ; then
+        update_submenu "user-$menu_name.menu"
+    else
+        update_submenu "$menu_name.menu"
+    fi
+else
+    # Work around for SUSE/gnome 2.12 to pick up new ~/.local/share/applications
+    if [ x"$mode" = x"user" ] ; then
+        update_submenu
+    fi
+fi
+
+# Install *.directory files
+
+xdg_dir_name=desktop-directories
+
+xdg_user_dir="$XDG_DATA_HOME"
+[ -n "$xdg_user_dir" ] || xdg_user_dir="$HOME/.local/share"
+xdg_user_dir="$xdg_user_dir/$xdg_dir_name"
+
+xdg_system_dirs="$XDG_DATA_DIRS"
+[ -n "$xdg_system_dirs" ] || xdg_system_dirs=/usr/local/share/:/usr/share/
+xdg_global_dir=
+for x in `echo $xdg_system_dirs | sed 's/:/ /g'` ; do
+    if [ -w $x/$xdg_dir_name ] ; then
+        xdg_global_dir="$x/$xdg_dir_name"
+        break
+    fi
+done
+
+DEBUG 3 "Install locations for *.directory files:"
+DEBUG 3 "xdg_user_dir: $xdg_user_dir"
+DEBUG 3 "xdg_global_dir: $xdg_global_dir"
+DEBUG 3 "kde_user_dir: $kde_user_dir"
+DEBUG 3 "kde_global_dir: $kde_global_dir"
+DEBUG 3 "gnome_user_dir: $gnome_user_dir"
+DEBUG 3 "gnome_global_dir: $gnome_global_dir"
+
+if [ x"$mode" = x"user" ] ; then
+    xdg_dir="$xdg_user_dir"
+    kde_dir="$kde_user_dir"
+    gnome_dir="$gnome_user_dir"
+    my_umask=077
+else
+    xdg_dir="$xdg_global_dir"
+    kde_dir="$kde_global_dir"
+    gnome_dir="$gnome_global_dir"
+    my_umask=022
+    if [ -z "${xdg_dir}${kde_dir}${gnome_dir}" ] ; then
+        exit_failure_operation_impossible "No writable system menu directory found."
+    fi
+fi
+
+for desktop_file in $directory_files; do
+    basefile=`basename "$desktop_file"`
+
+    DEBUG 1 "$action $desktop_file in $xdg_dir $kde_dir $gnome_dir"
+
+    case $action in
+        install)
+            save_umask=`umask`
+            umask $my_umask
+
+            for x in $xdg_dir $kde_dir $gnome_dir ; do
+                mkdir -p $x
+                eval 'cp $desktop_file $x/$basefile'$xdg_redirect_output
+            done
+
+            umask $save_umask
+            ;;
+
+        uninstall)
+            for x in $xdg_dir $kde_dir $gnome_dir ; do
+                rm -f $x/$basefile
+            done
+
+            ;;
+    esac
+done
+
+# Install *.desktop files
+xdg_dir_name=applications
+
+xdg_user_dir="$XDG_DATA_HOME"
+[ -n "$xdg_user_dir" ] || xdg_user_dir="$HOME/.local/share"
+xdg_user_dir="$xdg_user_dir/$xdg_dir_name"
+
+xdg_system_dirs="$XDG_DATA_DIRS"
+[ -n "$xdg_system_dirs" ] || xdg_system_dirs=/usr/local/share/:/usr/share/
+xdg_global_dir=
+for x in `echo $xdg_system_dirs | sed 's/:/ /g'` ; do
+    if [ -w $x/$xdg_dir_name ] ; then
+        xdg_global_dir="$x/$xdg_dir_name"
+        break
+    fi
+done
+
+kde_user_dir=`kde${KDE_SESSION_VERSION}-config --path apps 2> /dev/null | cut -d ':' -f 1`
+kde_global_dir=`kde${KDE_SESSION_VERSION}-config --path apps 2> /dev/null | cut -d ':' -f 2`
+[ -w $kde_global_dir ] || kde_global_dir=
+
+gnome_user_dir="$HOME/.gnome/apps"
+gnome_global_dir="/usr/share/gnome/apps"
+[ -w $gnome_global_dir ] || gnome_global_dir=
+
+DEBUG 3 "Install locations for *.desktop files:"
+DEBUG 3 "xdg_user_dir: $xdg_user_dir"
+DEBUG 3 "xdg_global_dir: $xdg_global_dir"
+DEBUG 3 "kde_user_dir: $kde_user_dir"
+DEBUG 3 "kde_global_dir: $kde_global_dir"
+DEBUG 3 "gnome_user_dir: $gnome_user_dir"
+DEBUG 3 "gnome_global_dir: $gnome_global_dir"
+
+if [ x"$mode" = x"user" ] ; then
+    xdg_dir="$xdg_user_dir"
+    kde_dir="$kde_user_dir"
+    gnome_dir="$gnome_user_dir"
+    my_umask=077
+else
+    xdg_dir="$xdg_global_dir"
+    kde_dir="$kde_global_dir"
+    gnome_dir="$gnome_global_dir"
+    my_umask=022
+    if [ -z "${xdg_dir}${kde_dir}${gnome_dir}" ] ; then
+        exit_failure_operation_impossible "No writable system menu directory found."
+    fi
+fi
+
+for desktop_file in $desktop_files; do
+    if [ "$vendor" =  "true" -a "$action" = "install" ] ; then
+        check_vendor_prefix "$desktop_file"
+    fi
+
+    basefile=`basename "$desktop_file"`
+
+    DEBUG 1 "$action $desktop_file in $xdg_dir $kde_dir $gnome_dir"
+
+    case $action in
+        install)
+            save_umask=`umask`
+            umask $my_umask
+
+            for x in $xdg_dir $kde_dir $gnome_dir ; do
+                mkdir -p $x
+                eval 'cp $desktop_file $x/$basefile'$xdg_redirect_output
+            done
+
+            if [ -f $kde_dir/$basefile ] ; then
+                echo "OnlyShowIn=Old;" >> $kde_dir/$basefile
+            fi
+
+            if [ -f $gnome_dir/$basefile ] ; then
+                echo "OnlyShowIn=Old;" >> $gnome_dir/$basefile
+            fi
+
+            make_lazy_default "$xdg_dir" "$basefile"
+
+            umask $save_umask
+            ;;
+
+        uninstall)
+            for x in $xdg_dir $kde_dir $gnome_dir ; do
+                rm -f $x/$basefile
+            done
+
+            ;;
+    esac
+done
+
+if [ x"$update" = x"yes" ] ; then
+    update_desktop_database
+fi
+
+exit_success
diff -Naur orig/scripts/xdg-email git/scripts/xdg-email
--- orig/scripts/xdg-email	2011-01-01 11:03:14.000000000 +0100
+++ git/scripts/xdg-email	2013-08-06 05:04:22.637970760 +0200
@@ -332,7 +332,7 @@
             ;;
 
             --version)
-            echo "xdg-email 1.0.2"
+            echo "xdg-email 1.1.0 rc1"
             exit_success
             ;;
         esac
@@ -372,7 +372,8 @@
 
 kfmclient_fix_exit_code()
 {
-    version=`kde${KDE_SESSION_VERSION}-config --version 2>/dev/null | grep '^KDE'`
+    [ x"$KDE_SESSION_VERSION" = x"4" ] && return 0;
+    version=`LC_ALL=C.UTF-8 kde-config --version 2>/dev/null | grep '^KDE'`
     major=`echo $version | sed 's/KDE.*: \([0-9]\).*/\1/'`
     minor=`echo $version | sed 's/KDE.*: [0-9]*\.\([0-9]\).*/\1/'`
     release=`echo $version | sed 's/KDE.*: [0-9]*\.[0-9]*\.\([0-9]\).*/\1/'`
diff -Naur orig/scripts/xdg-email.in git/scripts/xdg-email.in
--- orig/scripts/xdg-email.in	1970-01-01 01:00:00.000000000 +0100
+++ git/scripts/xdg-email.in	2013-08-06 05:04:22.637970760 +0200
@@ -0,0 +1,411 @@
+#!/bin/sh
+#---------------------------------------------
+#   xdg-email
+#
+#   Utility script to open the users favorite email program, using the
+#       RFC 2368 mailto: URI spec
+#
+#   Refer to the usage() function below for usage.
+#
+#   Copyright 2009-2010, Fathi Boudra <fabo@freedesktop.org>
+#   Copyright 2009-2010, Rex Dieter <rdieter@fedoraproject.org>
+#   Copyright 2006, Kevin Krammer <kevin.krammer@gmx.at>
+#   Copyright 2006, Jeremy White <jwhite@codeweavers.com>
+#
+#   LICENSE:
+#
+#---------------------------------------------
+
+manualpage()
+{
+cat << _MANUALPAGE
+_MANUALPAGE
+}
+
+usage()
+{
+cat << _USAGE
+_USAGE
+}
+
+#@xdg-utils-common@
+
+run_thunderbird()
+{
+    local THUNDERBIRD MAILTO NEWMAILTO TO CC BCC SUBJECT BODY ATTACH
+    THUNDERBIRD="$1"
+    MAILTO=$(echo "$2" | sed 's/^mailto://')
+    echo "$MAILTO" | grep -qs "^?"
+    if [ "$?" = "0" ] ; then
+        MAILTO=$(echo "$MAILTO" | sed 's/^?//')
+    else
+        MAILTO=$(echo "$MAILTO" | sed 's/^/to=/' | sed 's/?/\&/')
+    fi
+
+    MAILTO=$(echo "$MAILTO" | sed 's/&/\n/g')
+    TO=$(echo -e $(echo "$MAILTO" | grep '^to=' | sed 's/^to=//;s/%\(..\)/\\x\1/g' | awk '{ printf "\"%s\",",$0 }'))
+    CC=$(echo -e $(echo "$MAILTO" | grep '^cc=' | sed 's/^cc=//;s/%\(..\)/\\x\1/g' | awk '{ printf "\"%s\",",$0 }'))
+    BCC=$(echo -e $(echo "$MAILTO" | grep '^bcc=' | sed 's/^bcc=//;s/%\(..\)/\\x\1/g' | awk '{ printf "\"%s\",",$0 }'))
+    SUBJECT=$(echo "$MAILTO" | grep '^subject=' | tail -n 1)
+    BODY=$(echo "$MAILTO" | grep '^body=' | tail -n 1)
+    ATTACH=$(echo -e $(echo "$MAILTO" | grep '^attach=' | sed 's/^attach=//;s/%\(..\)/\\x\1/g' | awk '{ printf "%s,",$0 }' | sed 's/,$//'))
+
+    if [ -z "$TO" ] ; then
+        NEWMAILTO=
+    else
+        NEWMAILTO="to='$TO'"
+    fi
+    if [ -n "$CC" ] ; then
+        NEWMAILTO="${NEWMAILTO},cc='$CC'"
+    fi
+    if [ -n "$BCC" ] ; then
+        NEWMAILTO="${NEWMAILTO},bcc='$BCC'"
+    fi
+    if [ -n "$SUBJECT" ] ; then
+        NEWMAILTO="${NEWMAILTO},$SUBJECT"
+    fi
+    if [ -n "$BODY" ] ; then
+        NEWMAILTO="${NEWMAILTO},$BODY"
+    fi
+
+    if [ -n "$ATTACH" ] ; then
+        NEWMAILTO="${NEWMAILTO},attachment='${ATTACH}'"
+    fi
+
+    NEWMAILTO=$(echo "$NEWMAILTO" | sed 's/^,//')
+    DEBUG 1 "Running $THUNDERBIRD -compose \"$NEWMAILTO\""
+    "$THUNDERBIRD" -compose "$NEWMAILTO"
+    if [ $? -eq 0 ]; then
+        exit_success
+    else
+        exit_failure_operation_failed
+    fi
+}
+
+open_kde()
+{
+    local client kde_email_profile_name
+    kde_email_profile_name=`kreadconfig --file emaildefaults --group Defaults --key Profile`
+    client=`kreadconfig --file emaildefaults --group PROFILE_"$kde_email_profile_name" --key EmailClient | cut -d ' ' -f 1`
+    echo $client | grep thunderbird > /dev/null 2>&1
+    if [ $? -eq 0 ] ; then
+        run_thunderbird "$client" "$1"
+    fi
+
+    if [ -f /etc/SuSE-release ] ; then
+        # Workaround for SUSE 10.0
+        [ -z "$client" ] && client="kmail"
+        if ! which "$client" > /dev/null 2> /dev/null; then
+            DEBUG 3 "KDE has $client configured as email client which isn't installed"
+            if which gnome-open > /dev/null 2> /dev/null && which evolution > /dev/null 2> /dev/null; then
+               DEBUG 3 "Try gnome-open instead"
+               open_gnome "$1"
+            fi
+        fi
+    fi
+    DEBUG 1 "Running kmailservice \"$1\""
+    if [ x"$KDE_SESSION_VERSION" = x"4" ]; then
+        KMAILSERVICE=`kde4-config --locate kmailservice --path exe 2>/dev/null`
+        $KMAILSERVICE "$1"
+    else
+        KMAILSERVICE=`which kmailservice 2>/dev/null`
+        # KDE3 uses locale's encoding when decoding the URI, so set it to UTF-8
+        LC_ALL=C.UTF-8 $KMAILSERVICE "$1"
+    fi
+
+    if [ $? -eq 0 ]; then
+        exit_success
+    else
+        exit_failure_operation_failed
+    fi
+}
+
+open_gnome3()
+{
+    local client
+    local desktop
+    desktop=`xdg-mime query default "x-scheme-handler/mailto"`
+    client=`desktop_file_to_binary "$browser"`
+    echo $client | grep thunderbird > /dev/null 2>&1
+    if [ $? -eq 0 ] ; then
+        run_thunderbird "$client" "$1"
+    fi
+
+    if gvfs-open --help 2>/dev/null 1>&2; then
+        DEBUG 1 "Running gvfs-open \"$1\""
+        gvfs-open "$1"
+    else
+        DEBUG 1 "Running gnome-open \"$1\""
+        gnome-open "$1"
+    fi
+
+    if [ $? -eq 0 ]; then
+        exit_success
+    else
+        exit_failure_operation_failed
+    fi
+}
+
+open_gnome()
+{
+    local client
+    client=`gconftool-2 --get /desktop/gnome/url-handlers/mailto/command | cut -d ' ' -f 1` || ""
+    echo $client | grep thunderbird > /dev/null 2>&1
+    if [ $? -eq 0 ] ; then
+        run_thunderbird "$client" "$1"
+    fi
+
+    if gvfs-open --help 2>/dev/null 1>&2; then
+        DEBUG 1 "Running gvfs-open \"$1\""
+        gvfs-open "$1"
+    else
+        DEBUG 1 "Running gnome-open \"$1\""
+        gnome-open "$1"
+    fi
+
+    if [ $? -eq 0 ]; then
+        exit_success
+    else
+        exit_failure_operation_failed
+    fi
+}
+
+
+open_xfce()
+{
+    DEBUG 1 "Running exo-open \"$1\""
+    exo-open "$1"
+
+    if [ $? -eq 0 ]; then
+        exit_success
+    else
+        exit_failure_operation_failed
+    fi
+}
+
+open_generic()
+{
+    IFS=":"
+    for browser in $BROWSER; do
+        if [ x"$browser" != x"" ]; then
+
+            browser_with_arg=`printf "$browser" "$1" 2>/dev/null`
+            if [ $? -ne 0 ]; then browser_with_arg=$browser;
+            fi
+
+            if [ x"$browser_with_arg" = x"$browser" ]; then "$browser" "$1";
+            else $browser_with_arg;
+            fi
+
+            if [ $? -eq 0 ]; then exit_success;
+            fi
+        fi
+    done
+
+    exit_failure_operation_impossible "no method available for opening '$1'"
+}
+
+url_encode()
+{
+str=$(echo "$1" | $utf8)
+local ORIG_LANG="$LANG"
+local ORIG_LC_ALL="$LC_ALL"
+LANG=C
+LC_ALL=C
+result=$(echo "$str" | awk '
+    BEGIN {
+        for ( i=1; i<=255; ++i ) ord [ sprintf ("%c", i) "" ] = i + 0
+        e = ""
+        linenr = 1
+    }
+    {
+        if ( linenr++ != 1 ) {
+            e = e "%0D%0A"
+        }
+        for ( i=1; i<=length ($0); ++i ) {
+            c = substr ($0, i, 1)
+            if ( ord [c] > 127 ) {
+                e = e "%" sprintf("%02X", ord [c])
+            } else if ( c ~ /[@a-zA-Z0-9.-\\\/]/ ) {
+                e = e c
+            } else {
+                e = e "%" sprintf("%02X", ord [c])
+            }
+        }
+    }
+    END {
+        print e
+    }
+')
+LANG="$ORIG_LANG"
+LC_ALL="$ORIG_LC_ALL"
+}
+
+options=
+mailto=
+utf8="iconv -t utf8"
+while [ $# -gt 0 ] ; do
+    parm="$1"
+    shift
+
+    case "$parm" in
+      --utf8)
+        utf8="cat"
+        ;;
+
+      --to)
+        if [ -z "$1" ] ; then
+            exit_failure_syntax "email address argument missing for --to"
+        fi
+        url_encode "$1"
+        options="${options}to=${result}&"
+        shift
+        ;;
+
+      --cc)
+        if [ -z "$1" ] ; then
+             exit_failure_syntax "email address argument missing for --cc"
+        fi
+        url_encode "$1"
+        options="${options}cc=${result}&"
+        shift
+        ;;
+
+      --bcc)
+        if [ -z "$1" ] ; then
+            exit_failure_syntax "email address argument missing for --bcc"
+        fi
+        url_encode "$1"
+        options="${options}bcc=${result}&"
+        shift
+        ;;
+
+      --subject)
+        if [ -z "$1" ] ; then
+            exit_failure_syntax "text argument missing for --subject option"
+        fi
+        url_encode "$1"
+        options="${options}subject=${result}&"
+        shift
+        ;;
+
+      --body)
+        if [ -z "$1" ] ; then
+            exit_failure_syntax "text argument missing for --body option"
+        fi
+        url_encode "$1"
+        options="${options}body=${result}&"
+        shift
+        ;;
+
+      --attach)
+        if [ -z "$1" ] ; then
+            exit_failure_syntax "file argument missing for --attach option"
+        fi
+        check_input_file "$1"
+        file=`readlink -f "$1"` # Normalize path
+        if [ -z "$file" ] || [ ! -f "$file" ] ; then
+            exit_failure_file_missing "file '$1' does not exist"
+        fi
+
+        url_encode "$file"
+        options="${options}attach=${result}&"
+        shift
+        ;;
+
+      -*)
+        exit_failure_syntax "unexpected option '$parm'"
+        ;;
+
+      mailto:*)
+        mailto="$parm"
+        ;;
+
+      *@*)
+        url_encode "$parm"
+        if [ -z "${mailto}" ] ; then
+            mailto="mailto:"${result}"?"
+        else
+            options="${options}to=${result}&"
+        fi
+        ;;
+
+      *)
+        exit_failure_syntax "unexpected argument '$parm'"
+        ;;
+    esac
+done
+
+if [ -z "${mailto}" ] ; then
+    # TO address is optional
+    mailto="mailto:?"
+fi
+
+case $mailto in
+      *\?)
+        mailto="${mailto}${options}"
+        ;;
+
+      *\?*)
+        mailto="${mailto}&${options}"
+        ;;
+
+      *)
+        mailto="${mailto}?${options}"
+        ;;
+esac
+
+# Strip trailing ? and &
+mailto=`echo "${mailto}"| sed 's/[?&]$//'`
+
+# Shouldn't happen
+[ x"${mailto}" != x"" ] || exit_failure_syntax
+
+if which @NAME@-hook.sh > /dev/null 2> /dev/null; then
+    @NAME@-hook.sh "${mailto}"
+    if [ $? -eq 0 ]; then
+        exit_success
+    else
+        exit_failure_operation_failed
+    fi
+fi
+
+detectDE
+
+if [ x"$DE" = x"" ]; then
+    DE=generic
+fi
+
+# if BROWSER variable is not set, check some well known browsers instead
+if [ x"$BROWSER" = x"" ]; then
+    BROWSER=links2:elinks:links:lynx:w3m
+    if [ -n "$DISPLAY" ]; then
+        BROWSER=x-www-browser:firefox:seamonkey:mozilla:epiphany:konqueror:chromium-browser:google-chrome:$BROWSER
+    fi
+fi
+
+case "$DE" in
+    kde)
+    open_kde "${mailto}"
+    ;;
+
+    gnome)
+    open_gnome "${mailto}"
+    ;;
+
+    gnome3)
+    open_gnome3 "${mailto}"
+    ;;
+
+    xfce)
+    open_xfce "${mailto}"
+    ;;
+
+    generic|lxde)
+    open_generic "${mailto}"
+    ;;
+
+    *)
+    exit_failure_operation_impossible "no method available for opening '${mailto}'"
+    ;;
+esac
diff -Naur orig/scripts/xdg-file-dialog git/scripts/xdg-file-dialog
--- orig/scripts/xdg-file-dialog	1970-01-01 01:00:00.000000000 +0100
+++ git/scripts/xdg-file-dialog	2013-08-06 05:04:22.637970760 +0200
@@ -0,0 +1,603 @@
+#!/bin/sh
+#---------------------------------------------
+#   xdg-file-dialog
+#
+#   Utility script to file selection dialogs
+#   on XDG compliant systems.
+#
+#   Refer to the usage() function below for usage.
+#
+#   Copyright 2006, Kevin Krammer <kevin.krammer@gmx.at>
+#
+#   LICENSE:
+#
+#   Permission is hereby granted, free of charge, to any person obtaining a
+#   copy of this software and associated documentation files (the "Software"),
+#   to deal in the Software without restriction, including without limitation
+#   the rights to use, copy, modify, merge, publish, distribute, sublicense,
+#   and/or sell copies of the Software, and to permit persons to whom the
+#   Software is furnished to do so, subject to the following conditions:
+#
+#   The above copyright notice and this permission notice shall be included
+#   in all copies or substantial portions of the Software.
+#
+#   THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS
+#   OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
+#   FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL
+#   THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR
+#   OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE,
+#   ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR
+#   OTHER DEALINGS IN THE SOFTWARE.
+#
+#---------------------------------------------
+
+manualpage()
+{
+cat << _MANUALPAGE
+Name
+
+   xdg-file-dialog -- command line tool for providing file and directory
+   selection dialogs
+
+Synopsis
+
+   xdg-file-dialog openfilename [--title TITLE] [FILENAME]
+
+   xdg-file-dialog openfilenamelist [--title TITLE] [FILENAME]
+
+   xdg-file-dialog savefilename [--title TITLE] [FILENAME]
+
+   xdg-file-dialog directory [--title TITLE] [DIRNAME]
+
+   xdg-file-dialog { --help | --manual | --version }
+
+Description
+
+   The xdg-file-dialog program can be used to let the native file selection
+   dialog handle file and directory input.
+
+   xdg-file-dialog is for use inside a desktop session only. It is not
+   recommended to use xdg-file-dialog as root.
+
+Commands
+
+   openfilename
+           Returns the filename with path for a file to read from. FILENAME
+           can optionally be used to specify path and filename of a
+           preselection.
+
+   openfilenamelist
+           Returns one or more filenames with path for files to read from,
+           each on a new line. FILENAME can optionally be used to specify
+           path and filename of a preselection.
+
+   savefilename
+           Returns the filename with path for file to write to. FILENAME can
+           optionally be used to specify path and filename of a preselection.
+
+   directory
+           Returns the path for an exsiting directory. DIRNAME can optionally
+           be used to specify a path of a preselection.
+
+Options
+
+   --title TITLE
+           Sets the dialog's title (caption) to the specified text.
+
+   --help
+           Show command synopsis.
+
+   --manual
+           Show this manualpage.
+
+   --version
+           Show the xdg-utils version information.
+
+Exit Codes
+
+   An exit code of 0 indicates success while a non-zero exit code indicates
+   failure. The following failure codes can be returned:
+
+   1
+           Error in command line syntax.
+
+   2
+           One of the files passed on the command line did not exist.
+
+   3
+           A required tool could not be found.
+
+   4
+           The action failed.
+
+Examples
+
+ xdg-file-dialog savefilename /tmp/foobar.png
+
+   Asks for a save file name starting in directory /tmp and suggesting
+   foobar.png as the filename
+
+ xdg-file-dialog directory --title "Select a target folder" /tmp
+
+   Asks for a directory name starting in directory /tmp using the text
+   "Select a target folder" as the dialog's title/caption.
+_MANUALPAGE
+}
+
+usage()
+{
+cat << _USAGE
+   xdg-file-dialog -- command line tool for providing file and directory
+   selection dialogs
+
+Synopsis
+
+   xdg-file-dialog openfilename [--title TITLE] [FILENAME]
+
+   xdg-file-dialog openfilenamelist [--title TITLE] [FILENAME]
+
+   xdg-file-dialog savefilename [--title TITLE] [FILENAME]
+
+   xdg-file-dialog directory [--title TITLE] [DIRNAME]
+
+   xdg-file-dialog { --help | --manual | --version }
+
+_USAGE
+}
+
+#@xdg-utils-common@
+
+#----------------------------------------------------------------------------
+#   Common utility functions included in all XDG wrapper scripts
+#----------------------------------------------------------------------------
+
+#-------------------------------------------------------------
+# Exit script on successfully completing the desired operation
+
+exit_success()
+{
+    if [ $# -gt 0 ]; then
+        echo "$@"
+        echo
+    fi
+
+    exit 0
+}
+
+
+#-----------------------------------------
+# Exit script on malformed arguments, not enough arguments
+# or missing required option.
+# prints usage information
+
+exit_failure_syntax()
+{
+    if [ $# -gt 0 ]; then
+        echo "xdg-file-dialog: $@" >&2
+        echo "Try 'xdg-file-dialog --help' for more information." >&2
+    else
+        usage
+        echo "Use 'man xdg-file-dialog' or 'xdg-file-dialog --manual' for additional info." 
+    fi
+
+    exit 1
+}
+
+#-------------------------------------------------------------
+# Exit script on missing file specified on command line
+
+exit_failure_file_missing()
+{
+    if [ $# -gt 0 ]; then
+        echo "xdg-file-dialog: $@" >&2
+    fi
+
+    exit 2
+}
+
+#-------------------------------------------------------------
+# Exit script on failure to locate necessary tool applications
+
+exit_failure_operation_impossible()
+{
+    if [ $# -gt 0 ]; then
+        echo "xdg-file-dialog: $@" >&2
+    fi
+
+    exit 3
+}
+
+#-------------------------------------------------------------
+# Exit script on failure returned by a tool application
+
+exit_failure_operation_failed()
+{
+    if [ $# -gt 0 ]; then
+        echo "xdg-file-dialog: $@" >&2
+    fi
+
+    exit 4
+}
+
+
+#----------------------------------------
+# Checks for shared commands, e.g. --help
+
+check_common_commands()
+{
+    while [ $# -gt 0 ] ; do
+        parm=$1
+        shift
+
+        case $parm in
+            --help)
+            usage
+            echo "Use 'man xdg-file-dialog' or 'xdg-file-dialog --manual' for additional info." 
+            exit_success
+            ;;
+
+            --manual)
+            manualpage
+            exit_success
+            ;;
+
+            --version)
+            echo "xdg-file-dialog 1.0beta1"
+            exit_success
+            ;;
+        esac
+    done
+}
+
+check_common_commands "$@"
+
+#--------------------------------------
+# Checks for known desktop environments
+# set variable DE to the desktop environments name, lowercase
+
+detectDE()
+{
+    if [ x"$KDE_FULL_SESSION" = x"true" ]; then DE=kde;
+    elif [ x"$GNOME_DESKTOP_SESSION_ID" != x"" ]; then DE=gnome;
+    elif xprop -root _DT_SAVE_MODE | grep ' = \"xfce4\"$' >/dev/null 2>&1; then DE=xfce;
+    fi
+}
+
+#----------------------------------------------------------------------------
+
+
+
+open_kde()
+{
+    DIALOG=`which kdialog`
+    if [ $? -eq 0 ]; then
+        if [ x"$TITLE" != x"" ]; then
+            $DIALOG --title "$TITLE" --getopenfilename "$1" ""
+        else
+            $DIALOG --getopenfilename "$1" ""
+        fi
+
+        if [ $? -eq 0 ]; then
+            exit_success
+        else
+            exit_failure_operation_failed
+        fi
+    else
+        exit_failure_operation_impossible
+    fi
+}
+
+open_zenity()
+{
+    DIALOG=`which zenity`
+    if [ $? -eq 0 ]; then
+        if [ x"$1" != x"" ]; then
+            cd `dirname "$1"` 2>/dev/null
+            FILENAME=`basename "$1"`
+            if [ x"$FILENAME" != x"" ]; then
+                FILENAME="--filename=""$FILENAME"
+            fi
+        fi
+
+        if [ x"$FILENAME" != x"" ]; then
+            if [ x"$TITLE" != x"" ]; then
+                $DIALOG --title "$TITLE" --file-selection "$FILENAME"
+            else
+                $DIALOG --file-selection "$FILENAME"
+            fi
+        else
+            if [ x"$TITLE" != x"" ]; then
+                $DIALOG --title "$TITLE" --file-selection
+            else
+                $DIALOG --file-selection
+            fi
+        fi
+
+        if [ $? -eq 0 ]; then
+            exit_success
+        else
+            exit_failure_operation_failed
+        fi
+    else
+        exit_failure_operation_impossible
+    fi
+}
+
+open_multi_kde()
+{
+    DIALOG=`which kdialog`
+    if [ $? -eq 0 ]; then
+        if [ x"$TITLE" != x"" ]; then
+            $DIALOG --title "$TITLE" --multiple --separate-output \
+                    --getopenfilename "$1" ""
+        else
+            $DIALOG --multiple --separate-output --getopenfilename "$1" ""
+        fi
+
+        if [ $? -eq 0 ]; then
+            exit_success
+        else
+            exit_failure_operation_failed
+        fi
+    else
+        exit_failure_operation_impossible
+    fi
+}
+
+open_multi_zenity()
+{
+    DIALOG=`which zenity`
+    if [ $? -eq 0 ]; then
+        if [ x"$1" != x"" ]; then
+            cd `dirname "$1"` 2>/dev/null
+            FILENAME=`basename "$1"`
+            if [ x"$FILENAME" != x"" ]; then
+                FILENAME="--filename=""$FILENAME"
+            fi
+        fi
+
+        if [ x"$FILENAME" != x"" ]; then
+            if [ x"$TITLE" != x"" ]; then
+                LIST=`$DIALOG --title "$TITLE" --multiple --file-selection "$FILENAME"`
+            else
+                LIST=`$DIALOG --multiple --file-selection "$FILENAME"`
+            fi
+        else
+            if [ x"$TITLE" != x"" ]; then
+                LIST=`$DIALOG --title "$TITLE" --multiple --file-selection`
+            else
+                LIST=`$DIALOG --multiple --file-selection`
+            fi
+        fi
+
+        if [ $? -eq 0 ]; then
+            echo "$LIST" | sed s#'|'#\\n#g
+            exit_success
+        else
+            exit_failure_operation_failed
+        fi
+    else
+        exit_failure_operation_impossible
+    fi
+}
+
+save_kde()
+{
+    DIALOG=`which kdialog`
+    if [ $? -eq 0 ]; then
+        if [ x"$TITLE" != x"" ]; then
+            $DIALOG --title "$TITLE" --getsavefilename "$1" ""
+        else
+            $DIALOG --getsavefilename "$1" ""
+        fi
+
+        if [ $? -eq 0 ]; then
+            exit_success
+        else
+            exit_failure_operation_failed
+        fi
+    else
+        exit_failure_operation_impossible
+    fi
+}
+
+save_zenity()
+{
+    DIALOG=`which zenity`
+    if [ $? -eq 0 ]; then
+        if [ x"$1" != x"" ]; then
+            cd `dirname "$1"` 2>/dev/null
+            FILENAME=`basename "$1"`
+            if [ x"$FILENAME" != x"" ]; then
+                FILENAME="--filename=""$FILENAME"
+            fi
+        fi
+
+        if [ x"$FILENAME" != x"" ]; then
+            if [ x"$TITLE" != x"" ]; then
+                $DIALOG --title "$TITLE" --save --file-selection "$FILENAME"
+            else
+                $DIALOG --save --file-selection "$FILENAME"
+            fi
+        else
+            if [ x"$TITLE" != x"" ]; then
+                $DIALOG --title "$TITLE" --save --file-selection
+            else
+                $DIALOG --save --file-selection
+            fi
+        fi
+
+        if [ $? -eq 0 ]; then
+            exit_success
+        else
+            exit_failure_operation_failed
+        fi
+    else
+        exit_failure_operation_impossible
+    fi
+}
+
+directory_kde()
+{
+    DIALOG=`which kdialog`
+    if [ $? -eq 0 ]; then
+        if [ x"$TITLE" != x"" ]; then
+            $DIALOG --title "$TITLE" --getexistingdirectory "$1" ""
+        else
+            $DIALOG --getexistingdirectory "$1" ""
+        fi
+
+        if [ $? -eq 0 ]; then
+            exit_success
+        else
+            exit_failure_operation_failed
+        fi
+    else
+        exit_failure_operation_impossible
+    fi
+}
+
+directory_zenity()
+{
+    DIALOG=`which zenity`
+    if [ $? -eq 0 ]; then
+        if [ x"$1" != x"" ]; then
+            cd "$1" 2>/dev/null
+        fi
+
+        if [ x"$TITLE" != x"" ]; then
+            $DIALOG --title "$TITLE" --directory --file-selection
+        else
+            $DIALOG --directory --file-selection
+        fi
+
+        if [ $? -eq 0 ]; then
+            exit_success
+        else
+            exit_failure_operation_failed
+        fi
+    else
+        exit_failure_operation_impossible
+    fi
+}
+
+[ x"$1" != x"" ] || exit_failure_syntax
+
+TITLE=
+action=
+filename=
+
+case $1 in
+  openfilename)
+    action=openfilename
+    ;;
+
+  openfilenamelist)
+    action=openfilenamelist
+    ;;
+
+  savefilename)
+    action=savefilename
+    ;;
+    
+  directory)
+    action=directory
+    ;;
+
+  *)
+  exit_failure_syntax "unknown command '$1'"
+  ;;
+esac
+
+shift
+
+while [ $# -gt 0 ] ; do
+    parm=$1
+    shift
+
+    case $parm in
+      --title)
+        if [ -z "$1" ] ; then
+            exit_failure_syntax "TITLE argument missing for --title"
+        fi
+        TITLE="$1"
+        shift
+        ;;
+
+      -*)
+        exit_failure_syntax "unexpected option '$parm'"
+        ;;
+
+      *)
+        if [ -n "$filename" ] ; then
+            exit_failure_syntax "unexpected argument '$parm'"
+        fi
+        filename="$parm"
+        ;;
+    esac
+done
+
+# Shouldn't happen
+if [ -z "$action" ] ; then
+    exit_failure_syntax "command argument missing"
+fi
+
+detectDE
+
+if [ "$action" = "openfilename" ]; then
+    case "$DE" in
+        kde)
+        open_kde "$filename"
+        ;;
+
+        gnome|xfce)
+        open_zenity "$filename"
+        ;;
+
+        *)
+        exit_failure_operation_impossible "no method available for opening a filename dialog"
+        ;;
+    esac
+elif [ "$action" = "openfilenamelist" ]; then
+    case "$DE" in
+        kde)
+        open_multi_kde "$filename"
+        ;;
+
+        gnome|xfce)
+        open_multi_zenity "$filename"
+        ;;
+
+        *)
+        exit_failure_operation_impossible "no method available for opening a filename dialog"
+        ;;
+    esac
+elif [ "$action" = "savefilename" ]; then
+    case "$DE" in
+        kde)
+        save_kde "$filename"
+        ;;
+
+        gnome|xfce)
+        save_zenity "$filename"
+        ;;
+
+        *)
+        exit_failure_operation_impossible "no method available for opening a filename dialog"
+        ;;
+    esac
+elif [ "$action" = "directory" ]; then
+    case "$DE" in
+        kde)
+        directory_kde "$filename"
+        ;;
+
+        gnome|xfce)
+        directory_zenity "$filename"
+        ;;
+
+        *)
+        exit_failure_operation_impossible "no method available for opening a directory dialog"
+        ;;
+    esac
+fi
diff -Naur orig/scripts/xdg-file-dialog.in git/scripts/xdg-file-dialog.in
--- orig/scripts/xdg-file-dialog.in	1970-01-01 01:00:00.000000000 +0100
+++ git/scripts/xdg-file-dialog.in	2013-08-06 05:04:22.637970760 +0200
@@ -0,0 +1,365 @@
+#!/bin/sh
+#---------------------------------------------
+#   xdg-file-dialog
+#
+#   Utility script to file selection dialogs
+#   on XDG compliant systems.
+#
+#   Refer to the usage() function below for usage.
+#
+#   Copyright 2009-2010, Fathi Boudra <fabo@freedesktop.org>
+#   Copyright 2009-2010, Rex Dieter <rdieter@fedoraproject.org>
+#   Copyright 2006, Kevin Krammer <kevin.krammer@gmx.at>
+#
+#   LICENSE:
+#
+#---------------------------------------------
+
+manualpage()
+{
+cat << _MANUALPAGE
+_MANUALPAGE
+}
+
+usage()
+{
+cat << _USAGE
+_USAGE
+}
+
+#@xdg-utils-common@
+
+open_kde()
+{
+    DIALOG=`which kdialog`
+    if [ $? -eq 0 ]; then
+        if [ x"$TITLE" != x"" ]; then
+            $DIALOG --title "$TITLE" --getopenfilename "$1" ""
+        else
+            $DIALOG --getopenfilename "$1" ""
+        fi
+
+        if [ $? -eq 0 ]; then
+            exit_success
+        else
+            exit_failure_operation_failed
+        fi
+    else
+        exit_failure_operation_impossible
+    fi
+}
+
+open_zenity()
+{
+    DIALOG=`which zenity`
+    if [ $? -eq 0 ]; then
+        if [ x"$1" != x"" ]; then
+            cd `dirname "$1"` 2>/dev/null
+            FILENAME=`basename "$1"`
+            if [ x"$FILENAME" != x"" ]; then
+                FILENAME="--filename=""$FILENAME"
+            fi
+        fi
+
+        if [ x"$FILENAME" != x"" ]; then
+            if [ x"$TITLE" != x"" ]; then
+                $DIALOG --title "$TITLE" --file-selection "$FILENAME"
+            else
+                $DIALOG --file-selection "$FILENAME"
+            fi
+        else
+            if [ x"$TITLE" != x"" ]; then
+                $DIALOG --title "$TITLE" --file-selection
+            else
+                $DIALOG --file-selection
+            fi
+        fi
+
+        if [ $? -eq 0 ]; then
+            exit_success
+        else
+            exit_failure_operation_failed
+        fi
+    else
+        exit_failure_operation_impossible
+    fi
+}
+
+open_multi_kde()
+{
+    DIALOG=`which kdialog`
+    if [ $? -eq 0 ]; then
+        if [ x"$TITLE" != x"" ]; then
+            $DIALOG --title "$TITLE" --multiple --separate-output \
+                    --getopenfilename "$1" ""
+        else
+            $DIALOG --multiple --separate-output --getopenfilename "$1" ""
+        fi
+
+        if [ $? -eq 0 ]; then
+            exit_success
+        else
+            exit_failure_operation_failed
+        fi
+    else
+        exit_failure_operation_impossible
+    fi
+}
+
+open_multi_zenity()
+{
+    DIALOG=`which zenity`
+    if [ $? -eq 0 ]; then
+        if [ x"$1" != x"" ]; then
+            cd `dirname "$1"` 2>/dev/null
+            FILENAME=`basename "$1"`
+            if [ x"$FILENAME" != x"" ]; then
+                FILENAME="--filename=""$FILENAME"
+            fi
+        fi
+
+        if [ x"$FILENAME" != x"" ]; then
+            if [ x"$TITLE" != x"" ]; then
+                LIST=`$DIALOG --title "$TITLE" --multiple --file-selection "$FILENAME"`
+            else
+                LIST=`$DIALOG --multiple --file-selection "$FILENAME"`
+            fi
+        else
+            if [ x"$TITLE" != x"" ]; then
+                LIST=`$DIALOG --title "$TITLE" --multiple --file-selection`
+            else
+                LIST=`$DIALOG --multiple --file-selection`
+            fi
+        fi
+
+        if [ $? -eq 0 ]; then
+            echo "$LIST" | sed s#'|'#\\n#g
+            exit_success
+        else
+            exit_failure_operation_failed
+        fi
+    else
+        exit_failure_operation_impossible
+    fi
+}
+
+save_kde()
+{
+    DIALOG=`which kdialog`
+    if [ $? -eq 0 ]; then
+        if [ x"$TITLE" != x"" ]; then
+            $DIALOG --title "$TITLE" --getsavefilename "$1" ""
+        else
+            $DIALOG --getsavefilename "$1" ""
+        fi
+
+        if [ $? -eq 0 ]; then
+            exit_success
+        else
+            exit_failure_operation_failed
+        fi
+    else
+        exit_failure_operation_impossible
+    fi
+}
+
+save_zenity()
+{
+    DIALOG=`which zenity`
+    if [ $? -eq 0 ]; then
+        if [ x"$1" != x"" ]; then
+            cd `dirname "$1"` 2>/dev/null
+            FILENAME=`basename "$1"`
+            if [ x"$FILENAME" != x"" ]; then
+                FILENAME="--filename=""$FILENAME"
+            fi
+        fi
+
+        if [ x"$FILENAME" != x"" ]; then
+            if [ x"$TITLE" != x"" ]; then
+                $DIALOG --title "$TITLE" --save --file-selection "$FILENAME"
+            else
+                $DIALOG --save --file-selection "$FILENAME"
+            fi
+        else
+            if [ x"$TITLE" != x"" ]; then
+                $DIALOG --title "$TITLE" --save --file-selection
+            else
+                $DIALOG --save --file-selection
+            fi
+        fi
+
+        if [ $? -eq 0 ]; then
+            exit_success
+        else
+            exit_failure_operation_failed
+        fi
+    else
+        exit_failure_operation_impossible
+    fi
+}
+
+directory_kde()
+{
+    DIALOG=`which kdialog`
+    if [ $? -eq 0 ]; then
+        if [ x"$TITLE" != x"" ]; then
+            $DIALOG --title "$TITLE" --getexistingdirectory "$1" ""
+        else
+            $DIALOG --getexistingdirectory "$1" ""
+        fi
+
+        if [ $? -eq 0 ]; then
+            exit_success
+        else
+            exit_failure_operation_failed
+        fi
+    else
+        exit_failure_operation_impossible
+    fi
+}
+
+directory_zenity()
+{
+    DIALOG=`which zenity`
+    if [ $? -eq 0 ]; then
+        if [ x"$1" != x"" ]; then
+            cd "$1" 2>/dev/null
+        fi
+
+        if [ x"$TITLE" != x"" ]; then
+            $DIALOG --title "$TITLE" --directory --file-selection
+        else
+            $DIALOG --directory --file-selection
+        fi
+
+        if [ $? -eq 0 ]; then
+            exit_success
+        else
+            exit_failure_operation_failed
+        fi
+    else
+        exit_failure_operation_impossible
+    fi
+}
+
+[ x"$1" != x"" ] || exit_failure_syntax
+
+TITLE=
+action=
+filename=
+
+case $1 in
+  openfilename)
+    action=openfilename
+    ;;
+
+  openfilenamelist)
+    action=openfilenamelist
+    ;;
+
+  savefilename)
+    action=savefilename
+    ;;
+
+  directory)
+    action=directory
+    ;;
+
+  *)
+  exit_failure_syntax "unknown command '$1'"
+  ;;
+esac
+
+shift
+
+while [ $# -gt 0 ] ; do
+    parm="$1"
+    shift
+
+    case "$parm" in
+      --title)
+        if [ -z "$1" ] ; then
+            exit_failure_syntax "TITLE argument missing for --title"
+        fi
+        TITLE="$1"
+        shift
+        ;;
+
+      -*)
+        exit_failure_syntax "unexpected option '$parm'"
+        ;;
+
+      *)
+        if [ -n "$filename" ] ; then
+            exit_failure_syntax "unexpected argument '$parm'"
+        fi
+        filename="$parm"
+        ;;
+    esac
+done
+
+# Shouldn't happen
+if [ -z "$action" ] ; then
+    exit_failure_syntax "command argument missing"
+fi
+
+detectDE
+
+if [ "$action" = "openfilename" ]; then
+    case "$DE" in
+        kde)
+        open_kde "$filename"
+        ;;
+
+        gnome*|xfce|lxde)
+        open_zenity "$filename"
+        ;;
+
+        *)
+        exit_failure_operation_impossible "no method available for opening a filename dialog"
+        ;;
+    esac
+elif [ "$action" = "openfilenamelist" ]; then
+    case "$DE" in
+        kde)
+        open_multi_kde "$filename"
+        ;;
+
+        gnome*|xfce|lxde)
+        open_multi_zenity "$filename"
+        ;;
+
+        *)
+        exit_failure_operation_impossible "no method available for opening a filename dialog"
+        ;;
+    esac
+elif [ "$action" = "savefilename" ]; then
+    case "$DE" in
+        kde)
+        save_kde "$filename"
+        ;;
+
+        gnome*|xfce|lxde)
+        save_zenity "$filename"
+        ;;
+
+        *)
+        exit_failure_operation_impossible "no method available for opening a filename dialog"
+        ;;
+    esac
+elif [ "$action" = "directory" ]; then
+    case "$DE" in
+        kde)
+        directory_kde "$filename"
+        ;;
+
+        gnome*|xfce|lxde)
+        directory_zenity "$filename"
+        ;;
+
+        *)
+        exit_failure_operation_impossible "no method available for opening a directory dialog"
+        ;;
+    esac
+fi
diff -Naur orig/scripts/xdg-icon-resource git/scripts/xdg-icon-resource
--- orig/scripts/xdg-icon-resource	2011-01-01 11:03:14.000000000 +0100
+++ git/scripts/xdg-icon-resource	2013-08-06 05:04:22.637970760 +0200
@@ -372,7 +372,7 @@
             ;;
 
             --version)
-            echo "xdg-icon-resource 1.0.2"
+            echo "xdg-icon-resource 1.1.0 rc1"
             exit_success
             ;;
         esac
@@ -412,7 +412,8 @@
 
 kfmclient_fix_exit_code()
 {
-    version=`kde${KDE_SESSION_VERSION}-config --version 2>/dev/null | grep '^KDE'`
+    [ x"$KDE_SESSION_VERSION" = x"4" ] && return 0;
+    version=`LC_ALL=C.UTF-8 kde-config --version 2>/dev/null | grep '^KDE'`
     major=`echo $version | sed 's/KDE.*: \([0-9]\).*/\1/'`
     minor=`echo $version | sed 's/KDE.*: [0-9]*\.\([0-9]\).*/\1/'`
     release=`echo $version | sed 's/KDE.*: [0-9]*\.[0-9]*\.\([0-9]\).*/\1/'`
diff -Naur orig/scripts/xdg-icon-resource.in git/scripts/xdg-icon-resource.in
--- orig/scripts/xdg-icon-resource.in	1970-01-01 01:00:00.000000000 +0100
+++ git/scripts/xdg-icon-resource.in	2013-08-06 05:04:22.637970760 +0200
@@ -0,0 +1,450 @@
+#!/bin/sh
+#---------------------------------------------
+#   xdg-icon-resource
+#
+#   Utility script to install icons on a Linux desktop.
+#
+#   Refer to the usage() function below for usage.
+#
+#   Copyright 2009-2010, Fathi Boudra <fabo@freedesktop.org>
+#   Copyright 2009-2010, Rex Dieter <rdieter@fedoraproject.org>
+#   Copyright 2006, Kevin Krammer <kevin.krammer@gmx.at>
+#   Copyright 2006, Jeremy White <jwhite@codeweavers.com>
+#
+#   LICENSE:
+#
+#---------------------------------------------
+
+manualpage()
+{
+cat << _MANUALPAGE
+_MANUALPAGE
+}
+
+usage()
+{
+cat << _USAGE
+_USAGE
+}
+
+#@xdg-utils-common@
+
+# Set GTK_UPDATE_ICON_CACHE to gtk-update-icon-cache executable path or
+# to "-" if not found.
+GTK_UPDATE_ICON_CACHE=
+find_gtk_update_icon_cache()
+{
+    [ -n "$GTK_UPDATE_ICON_CACHE" ] && return;
+
+    GTK_UPDATE_ICON_CACHE="-"
+    for x in `echo "$PATH:/opt/gnome/bin" | sed 's/:/ /g'`; do
+        DEBUG 3 "Checking $x for gtk-update-icon-cache"
+        if [ -x "$x/gtk-update-icon-cache" ] ; then
+            DEBUG 1 "Found $x/gtk-update-icon-cache"
+            GTK_UPDATE_ICON_CACHE="$x/gtk-update-icon-cache"
+            return
+        fi
+    done
+}
+
+# Start GNOME legacy workaround section
+need_dot_icon_path()
+{
+  # GTK < 2.6 uses ~/.icons but not XDG_DATA_HOME/icons
+  # The availability of gtk-update-icon-cache is used as indication
+  # of whether the system is using GTK 2.6 or later
+  find_gtk_update_icon_cache
+  [ "$GTK_UPDATE_ICON_CACHE" != "-" ] && return 1;
+  return 0;
+}
+
+update_icon_database()
+{
+   # Touch me, I'm dirty
+   touch "$1/.@NAME@-dummy"
+   rm -f "$1/.@NAME@-dummy"
+
+   # Don't create a cache if there wan't one already
+   if [ -f "$1/icon-theme.cache" ] ; then
+      find_gtk_update_icon_cache
+      if [ "$GTK_UPDATE_ICON_CACHE" != "-" ] ; then
+         DEBUG 1 "Running $GTK_UPDATE_ICON_CACHE -f -t \"$1\""
+         eval '$GTK_UPDATE_ICON_CACHE -f -t "$1"'$xdg_redirect_output
+         return
+      fi
+   fi
+}
+
+[ x"$1" != x"" ] || exit_failure_syntax
+
+mode=
+action=
+update=yes
+size=
+theme=hicolor
+context=apps
+icon_file=
+icon_name=
+
+case $1 in
+  install)
+    action=install
+    ;;
+
+  uninstall)
+    action=uninstall
+    ;;
+
+  forceupdate)
+    action=forceupdate
+    ;;
+
+  *)
+    exit_failure_syntax "unknown command '$1'"
+    ;;
+esac
+
+shift
+
+vendor=true
+while [ $# -gt 0 ] ; do
+    parm="$1"
+    shift
+
+    case $parm in
+      --noupdate)
+        update=no
+        ;;
+
+      --mode)
+        if [ -z "$1" ] ; then
+            exit_failure_syntax "mode argument missing for --mode"
+        fi
+        case "$1" in
+          user)
+            mode="user"
+            ;;
+
+          system)
+            mode="system"
+            ;;
+
+          *)
+            exit_failure_syntax "unknown mode '$1'"
+            ;;
+        esac
+        shift
+        ;;
+
+      --theme)
+        if [ -z "$1" ] ; then
+            exit_failure_syntax "theme argument missing for --theme"
+        fi
+        theme="$1"
+        shift
+        ;;
+
+      --size)
+        if [ -z "$1" ] ; then
+            exit_failure_syntax "size argument missing for --size"
+        fi
+        if echo "$1" | grep '[^0-9]' > /dev/null 2> /dev/null; then
+            exit_failure_syntax "size argument must be numeric"
+        fi
+        size="$1"
+        shift
+        ;;
+
+      --context)
+        if [ -z "$1" ] ; then
+            exit_failure_syntax "context argument missing for --context"
+        fi
+        context="$1"
+        shift
+        ;;
+
+      --novendor)
+        vendor=false
+        ;;
+
+      -*)
+        exit_failure_syntax "unexpected option '$parm'"
+        ;;
+
+      *)
+        if [ -n "$icon_name" ] ; then
+            exit_failure_syntax "unexpected argument '$parm'"
+        elif [ -n "$icon_file" ] ; then
+            icon_name="$parm"
+        else
+            if [ "$action" = "install" ] ; then
+                check_input_file "$parm"
+            fi
+            icon_file="$parm"
+        fi
+        ;;
+    esac
+done
+
+# Shouldn't happen
+if [ -z "$action" ] ; then
+    exit_failure_syntax "command argument missing"
+fi
+
+# Shouldn't happen
+if [ -z "$context" ] ; then
+    exit_failure_syntax "context argument missing"
+fi
+
+if [ -n "$XDG_UTILS_INSTALL_MODE" ] ; then
+    if [ "$XDG_UTILS_INSTALL_MODE" = "system" ] ; then
+        mode="system"
+    elif [ "$XDG_UTILS_INSTALL_MODE" = "user" ] ; then
+        mode="user"
+    fi
+fi
+
+if [ -z "$mode" ] ; then
+    if [ `whoami` = "root" ] ; then
+       mode="system"
+    else
+       mode="user"
+    fi
+fi
+
+xdg_dir_name="icons/$theme"
+
+xdg_user_dir="$XDG_DATA_HOME"
+[ -n "$xdg_user_dir" ] || xdg_user_dir="$HOME/.local/share"
+xdg_user_prefix="$xdg_user_dir/icons"
+xdg_user_dir="$xdg_user_dir/$xdg_dir_name"
+
+xdg_global_dir=
+xdg_global_prefix=
+xdg_system_dirs="$XDG_DATA_DIRS"
+[ -n "$xdg_system_dirs" ] || xdg_system_dirs="/usr/local/share/:/usr/share/"
+for x in `echo "$xdg_system_dirs" | sed 's/:/ /g'`; do
+   if [ -w $x/$xdg_dir_name ] ; then
+      xdg_global_prefix="$x/icons"
+      xdg_global_dir="$x/$xdg_dir_name"
+      break
+   fi
+done
+[ -w $xdg_global_dir ] || xdg_global_dir=
+
+dot_icon_dir=
+dot_base_dir=
+if [ x"$mode" = x"user" ] ; then
+    xdg_base_dir="$xdg_user_dir"
+    #Gnome 2.8 supports ~/.icons but not XDG_DATA_HOME
+    if need_dot_icon_path ; then
+        dot_icon_dir="$HOME/.icons"
+        dot_base_dir="$dot_icon_dir/$theme"
+    fi
+else
+    xdg_base_dir="$xdg_global_dir"
+    if [ -z "$xdg_base_dir" ] ; then
+        exit_failure_operation_impossible "No writable system icon directory found."
+    fi
+fi
+
+if [ x"$action" = x"forceupdate" ] ; then
+    if [ -n "$icon_file" ] ; then
+      exit_failure_syntax "unexpected argument '$icon_file'"
+    fi
+    update_icon_database $xdg_base_dir
+    if [ -n "$dot_icon_dir" ] ; then
+        if [ -d "$dot_icon_dir/" ] && [ ! -L "$dot_icon_dir" ] ; then
+            update_icon_database $dot_base_dir
+        fi
+    fi
+    exit_success
+fi
+
+if [ -z "$icon_file" ] ; then
+    if [ x"$action" = x"install" ] ; then
+      exit_failure_syntax "icon-file argument missing"
+    else
+      exit_failure_syntax "icon-name argument missing"
+    fi
+fi
+
+xdg_size_name=
+extension=
+
+if [ -z "$size" ] ; then
+    exit_failure_syntax "the icon size must be specified with --size"
+fi
+xdg_size_name="${size}x${size}"
+
+if [ x"$action" = x"install" ] ; then
+    case $icon_file in
+      *.xpm)
+        extension="xpm"
+        ;;
+      *.png)
+        extension="png"
+        ;;
+      *)
+        exit_failure_syntax "icon file to install must be a *.png or *.xpm file"
+        ;;
+    esac
+fi
+
+if [ -n "$icon_name" ] ; then
+    case $icon_name in
+      *.png)
+         exit_failure_syntax "icon name should not include an extension"
+         ;;
+      *.xpm)
+         exit_failure_syntax "icon name should not include an extension"
+         ;;
+    esac
+fi
+
+# Start KDE legacy workaround section
+need_kde_icon_path()
+{
+  local path
+  path=`readlink -f "$1" 2> /dev/null` # Normalize path
+  DEBUG 2 "need_kde_icon_path $path"
+  if [ -z "$path" ] ; then
+     DEBUG 2 "need_kde_icon_path RETURN 1 (not needed, no xdg icon dir)"
+     return 1; # Not needed
+  fi
+
+  # if kde-config not found... return 0
+  kde_icon_dirs=`kde${KDE_SESSION_VERSION}-config --path icon 2> /dev/null |sed 's/:/ /g'`
+  DEBUG 3 "kde_icon_dirs: $kde_icon_dirs"
+  if [ -z "$kde_icon_dirs" ] ; then
+     DEBUG 3 "no result from kde${KDE_SESSION_VERSION}-config --path icon"
+     DEBUG 2 "need_kde_icon_path RETURN 1 (not needed, no kde icon path)"
+     return 1; # Not needed
+  fi
+  needed=0 # Needed
+  for y in $kde_icon_dirs ; do
+    x=`readlink -f "$y"` # Normalize path
+    DEBUG 3 "Normalize $y --> $x"
+    if [ -n "$x" ] ; then
+      if [ "$x" = "$path" ] ; then
+        needed=1 # Not needed
+      fi
+      if [ -w "$x" ] ; then
+        kde_global_prefix="$x"
+        # Take last writable dir
+      fi
+    fi
+  done
+  DEBUG 2 "kde_global_prefix: $kde_global_prefix"
+  [ $needed -eq "1" ] && DEBUG 2 "need_kde_icon_path RETURN $needed (not needed)"
+  [ $needed -eq "0" ] && DEBUG 2 "need_kde_icon_path RETURN $needed (needed)"
+  return $needed
+}
+
+kde_dir=
+if [ x"$mode" = x"user" ] ; then
+    xdg_dir="$xdg_base_dir/$xdg_size_name/$context"
+    #KDE 3.x doesn't support XDG_DATA_HOME for icons
+    #Check if xdg_dir prefix is listed by kde-config --path icon
+    #If not, install additional symlink to kdedir
+    if need_kde_icon_path "$xdg_user_prefix" ; then
+        kde_user_icon_dir=`kde${KDE_SESSION_VERSION}-config --path icon | cut -d ':' -f 1`
+        kde_user_dir="$kde_user_icon_dir/$theme"
+        kde_dir="$kde_user_dir/$xdg_size_name/$context"
+    fi
+    #Gnome 2.8 supports ~/.icons but not XDG_DATA_HOME
+    if [ -n "$dot_icon_dir" ] ; then
+        if [ -L "$dot_icon_dir" ] ; then
+            # Don't do anything
+            dot_icon_dir=
+        elif [ ! -d "$dot_icon_dir/" ] ; then
+            # Symlink if it doesn't exist
+            eval 'ln -s ".local/share/icons" "$dot_icon_dir"'$xdg_redirect_output
+            dot_icon_dir=
+        else
+            dot_icon_dir="$dot_icon_dir/$theme/$xdg_size_name/$context"
+        fi
+    fi
+    my_umask=077
+else
+    xdg_dir="$xdg_base_dir/$xdg_size_name/$context"
+    #KDE 3.x doesn't support XDG_DATA_DIRS for icons
+    #Check if xdg_dir prefix is listed by kde-config --path icon
+    #If not, install additional symlink to kdedir
+    if need_kde_icon_path "$xdg_global_prefix" ; then
+        kde_global_dir="$kde_global_prefix/$theme"
+        kde_dir="$kde_global_dir/$xdg_size_name/$context"
+    fi
+    my_umask=022
+fi
+# End KDE legacy workaround section
+
+# Start GNOME legacy workaround section
+need_gnome_mime=
+[ $context = "mimetypes" ] && need_gnome_mime=true
+# End GNOME legacy workaround section
+
+[ -n "$icon_name" ] || icon_name=`basename "$icon_file" | sed 's/\.[a-z][a-z][a-z]$//'`
+
+if [ "$vendor" = "true" -a "$action" = "install" -a "$context" = "apps" ] ; then
+    check_vendor_prefix "$icon_name" "icon name"
+fi
+
+icon_icon_file=`echo "$icon_file" | sed 's/\.[a-z][a-z][a-z]$/.icon/'`
+icon_icon_name="$icon_name.icon"
+
+DEBUG 1 "$action icon in $xdg_dir"
+[ $action = "install" ] && [ -f $icon_icon_file ] && DEBUG 1 "install $icon_icon_name meta file in $xdg_dir"
+[ -n "$kde_dir" ] && DEBUG 1 "$action symlink in $kde_dir (KDE 3.x support)"
+[ -n "$need_gnome_mime" ] && DEBUG 1 "$action gnome-mime-$icon_name symlink (GNOME 2.x support)"
+[  $action = "install" -a -n "$dot_icon_dir" ] && DEBUG 1 "$action ~/.icons symlink (GNOME 2.8 support)"
+
+case $action in
+    install)
+        save_umask=`umask`
+        umask $my_umask
+
+        for icon_dir in $xdg_dir $dot_icon_dir; do
+            mkdir -p $icon_dir
+            eval 'cp "$icon_file" "$icon_dir/$icon_name.$extension"'$xdg_redirect_output
+            if [ -f "$icon_icon_file" ] ; then
+                eval 'cp "$icon_icon_file" "$icon_dir/$icon_icon_name"'$xdg_redirect_output
+            fi
+            if [ -n "$need_gnome_mime" ] ; then
+                eval 'ln -s "$icon_name.$extension" "$icon_dir/gnome-mime-$icon_name.$extension"'$xdg_redirect_output
+            fi
+        done
+        if [ -n "$kde_dir" ] ; then
+            mkdir -p $kde_dir
+            eval 'ln -s "$xdg_dir/$icon_name.$extension" "$kde_dir/$icon_name.$extension"'$xdg_redirect_output
+        fi
+
+        umask $save_umask
+        ;;
+
+    uninstall)
+        for icon_dir in $xdg_dir $dot_icon_dir; do
+            rm -f "$icon_dir/$icon_name.xpm" "$icon_dir/$icon_name.png"
+            rm -f "$icon_dir/$icon_icon_name"
+            if [ -n "$need_gnome_mime" ] ; then
+                rm -f "$icon_dir/gnome-mime-$icon_name.xpm"
+                rm -f "$icon_dir/gnome-mime-$icon_name.png"
+            fi
+        done
+        if [ -n "$kde_dir" ] ; then
+            rm -f "$kde_dir/$icon_name.xpm" "$kde_dir/$icon_name.png"
+        fi
+
+        ;;
+esac
+
+if [ x"$update" = x"yes" ] ; then
+    update_icon_database "$xdg_base_dir"
+    if [ -n "$dot_icon_dir" ] ; then
+        if [ -d "$dot_icon_dir/" ] && [ ! -L "$dot_icon_dir" ] ; then
+            update_icon_database $dot_base_dir
+        fi
+    fi
+fi
+
+exit_success
diff -Naur orig/scripts/xdg-mime git/scripts/xdg-mime
--- orig/scripts/xdg-mime	2011-01-01 11:03:14.000000000 +0100
+++ git/scripts/xdg-mime	2013-08-06 05:04:22.637970760 +0200
@@ -402,7 +402,7 @@
             ;;
 
             --version)
-            echo "xdg-mime 1.0.2"
+            echo "xdg-mime 1.1.0 rc1"
             exit_success
             ;;
         esac
@@ -442,7 +442,8 @@
 
 kfmclient_fix_exit_code()
 {
-    version=`kde${KDE_SESSION_VERSION}-config --version 2>/dev/null | grep '^KDE'`
+    [ x"$KDE_SESSION_VERSION" = x"4" ] && return 0;
+    version=`LC_ALL=C.UTF-8 kde-config --version 2>/dev/null | grep '^KDE'`
     major=`echo $version | sed 's/KDE.*: \([0-9]\).*/\1/'`
     minor=`echo $version | sed 's/KDE.*: [0-9]*\.\([0-9]\).*/\1/'`
     release=`echo $version | sed 's/KDE.*: [0-9]*\.[0-9]*\.\([0-9]\).*/\1/'`
diff -Naur orig/scripts/xdg-mime.in git/scripts/xdg-mime.in
--- orig/scripts/xdg-mime.in	1970-01-01 01:00:00.000000000 +0100
+++ git/scripts/xdg-mime.in	2013-08-06 05:04:22.637970760 +0200
@@ -0,0 +1,918 @@
+#!/bin/sh
+#---------------------------------------------
+#   xdg-mime
+#
+#   Utility script to manipulate MIME related information
+#   on XDG compliant systems.
+#
+#   Refer to the usage() function below for usage.
+#
+#   Copyright 2009-2010, Fathi Boudra <fabo@freedesktop.org>
+#   Copyright 2009-2010, Rex Dieter <rdieter@fedoraproject.org>
+#   Copyright 2006, Kevin Krammer <kevin.krammer@gmx.at>
+#   Copyright 2006, Jeremy White <jwhite@codeweavers.com>
+#
+#   LICENSE:
+#
+#---------------------------------------------
+
+manualpage()
+{
+cat << _MANUALPAGE
+_MANUALPAGE
+}
+
+usage()
+{
+cat << _USAGE
+_USAGE
+}
+
+#@xdg-utils-common@
+
+update_mime_database()
+{
+   if [ x"$mode" = x"user" -a -n "$DISPLAY" ] ; then
+      detectDE
+      if [ x"$DE" = x"kde" ] ; then
+         DEBUG 1 "Running kbuildsycoca"
+         if [ x"$KDE_SESSION_VERSION" = x"4" ]; then
+             eval 'kbuildsycoca4'$xdg_redirect_output
+         else
+             eval 'kbuildsycoca'$xdg_redirect_output
+         fi
+      fi
+   fi
+   for x in `echo "$PATH:/opt/gnome/bin" | sed 's/:/ /g'`; do
+      if [ -x $x/update-mime-database ] ; then
+         DEBUG 1 "Running $x/update-mime-database $1"
+         eval '$x/update-mime-database $1'$xdg_redirect_output
+         return
+      fi
+   done
+}
+
+info_kde()
+{
+    if [ x"$KDE_SESSION_VERSION" = x"4" ]; then
+        DEBUG 1 "Running kmimetypefinder \"$1\""
+        kmimetypefinder "$1" 2>/dev/null | head -n 1
+    else
+        DEBUG 1 "Running kfile \"$1\""
+        kfile "$1" 2> /dev/null | head -n 1 | cut -d "(" -f 2 | cut -d ")" -f 1
+    fi
+
+    if [ $? -eq 0 ]; then
+        exit_success
+    else
+        exit_failure_operation_failed
+    fi
+}
+
+info_gnome()
+{
+    if gvfs-info --help 2>/dev/null 1>&2; then
+        DEBUG 1 "Running gvfs-info \"$1\""
+        gvfs-info "$1" 2> /dev/null | grep standard::content-type | cut -d' ' -f4
+    elif gnomevfs-info --help 2>/dev/null 1>&2; then
+       DEBUG 1 "Running gnomevfs-info \"$1\""
+       gnomevfs-info --slow-mime "$1" 2> /dev/null | grep "^MIME" | cut -d ":" -f 2 | sed s/"^ "//
+    else
+       # according to https://bugs.freedesktop.org/show_bug.cgi?id=33094#c5
+       # neither gvfs-info or gnomevfs-info are present in a default Ubuntu Natty
+       # install, so fallback to info_generic
+       info_generic "$1"
+    fi
+
+    if [ $? -eq 0 ]; then
+        exit_success
+    else
+        exit_failure_operation_failed
+    fi
+}
+
+info_generic()
+{
+    if mimetype --version >/dev/null 2>&1; then
+        DEBUG 1 "Running mimetype -b \"$1\""
+        mimetype -b "$1"
+    else
+        DEBUG 1 "Running file --mime-type \"$1\""
+        /usr/bin/file --mime-type "$1" 2> /dev/null | cut -d ":" -f 2 | sed s/"^ "//
+    fi
+
+    if [ $? -eq 0 ]; then
+        exit_success
+    else
+        exit_failure_operation_failed
+    fi
+}
+
+make_default_kde()
+{
+    # $1 is vendor-name.desktop
+    # $2 is mime/type
+    #
+    # On KDE 3, add to $KDE_CONFIG_PATH/profilerc:
+    # [$2 - 1]
+    # Application=$1
+    #
+    # Remove all [$2 - *] sections, or even better,
+    # renumber [$2 - *] sections and remove duplicate
+    #
+    # On KDE 4, add $2=$1 to $XDG_DATA_APPS/mimeapps.list
+    #
+    # Example file:
+    #
+    # [Added Associations]
+    # text/plain=kde4-kate.desktop;kde4-kwrite.desktop;
+    #
+    # [Removed Associations]
+    # text/plain=gnome-gedit.desktop;gnu-emacs.desktop;
+    vendor="$1"
+    mimetype="$2"
+    if [ x"$KDE_SESSION_VERSION" = x"4" ]; then
+        default_dir=`kde4-config --path xdgdata-apps 2> /dev/null | cut -d ':' -f 1`
+        default_file="$default_dir/mimeapps.list"
+    else
+        default_dir=`kde-config --path config 2> /dev/null | cut -d ':' -f 1`
+        default_file="$default_dir/profilerc"
+    fi
+    if [ -z "$default_dir" ]; then
+        DEBUG 2 "make_default_kde: No kde runtime detected"
+        return
+    fi
+    DEBUG 2 "make_default_kde $vendor $mimetype"
+    DEBUG 1 "Updating $default_file"
+    mkdir -p "$default_dir"
+    [ -f "$default_file" ] || touch "$default_file"
+    if [ x"$KDE_SESSION_VERSION" = x"4" ]; then
+        [ -f "$default_file" ] || touch "$default_file"
+        awk -v application="$vendor" -v mimetype="$mimetype" '
+    BEGIN {
+        prefix=mimetype "="
+        associations=0
+        found=0
+        blanks=0
+    }
+    {
+        suppress=0
+        if (index($0, "[Added Associations]") == 1) {
+            associations=1
+        } else if (index($0, "[") == 1) {
+            if (associations && !found) {
+                print prefix application
+                found=1
+            }
+            associations=0
+        } else if ($0 == "") {
+            blanks++
+            suppress=1
+        } else if (associations && index($0, prefix) == 1) {
+            value=substr($0, length(prefix) + 1, length)
+            split(value, apps, ";")
+            value=application ";"
+            count=0
+            for (i in apps) {
+              count++
+            }
+            for (i=0; i < count; i++) {
+                if (apps[i] != application && apps[i] != "") {
+                    value=value apps[i] ";"
+                }
+            }
+            $0=prefix value
+            found=1
+        }
+        if (!suppress) {
+            while (blanks > 0) {
+                print ""
+                blanks--
+            }
+            print $0
+        }
+    }
+    END {
+        if (!found) {
+            if (!associations) {
+                print "[Added Associations]"
+            }
+            print prefix application
+        }
+        while (blanks > 0) {
+            print ""
+            blanks--
+        }
+    }
+' "$default_file" > "${default_file}.new" && mv "${default_file}.new" "$default_file"
+        eval 'kbuildsycoca4'$xdg_redirect_output
+    else
+        awk -v application="$vendor" -v mimetype="$mimetype" '
+    BEGIN {
+        header_start="[" mimetype " - "
+        suppress=0
+    }
+    {
+        if (index($0, header_start) == 1 )
+            suppress=1
+        else
+            if (/^\[/) { suppress=0 }
+
+        if (!suppress) {
+            print $0
+        }
+    }
+    END {
+        print ""
+        print "[" mimetype " - 1]"
+        print "Application=" application
+        print "AllowAsDefault=true"
+        print "GenericServiceType=Application"
+        print "Preference=1"
+        print "ServiceType=" mimetype
+    }
+' "$default_file" > "${default_file}.new" && mv "${default_file}.new" "$default_file"
+    fi
+}
+
+make_default_generic()
+{
+    # $1 is vendor-name.desktop
+    # $2 is mime/type
+    # Add $2=$1 to XDG_DATA_HOME/applications/mimeapps.list
+    xdg_user_dir="$XDG_DATA_HOME"
+    [ -n "$xdg_user_dir" ] || xdg_user_dir="$HOME/.local/share"
+    default_file="$xdg_user_dir/applications/mimeapps.list"
+    DEBUG 2 "make_default_generic $1 $2"
+    DEBUG 1 "Updating $default_file"
+    [ -f "$default_file" ] || touch "$default_file"
+    awk -v mimetype="$2" -v application="$1" '
+    BEGIN {
+        prefix=mimetype "="
+        indefault=0
+        added=0
+        blanks=0
+        found=0
+    }
+    {
+        suppress=0
+        if (index($0, "[Default Applications]") == 1) {
+            indefault=1
+            found=1
+        } else if (index($0, "[") == 1) {
+            if (!added && indefault) {
+                print prefix application
+                added=1
+            }
+            indefault=0
+        } else if ($0 == "") {
+            suppress=1
+            blanks++
+        } else if (indefault && !added && index($0, prefix) == 1) {
+                $0=prefix application
+                added=1
+        }
+        if (!suppress) {
+            while (blanks > 0) {
+                print ""
+                blanks--
+            }
+            print $0
+        }
+    }
+    END {
+        if (!added) {
+            if (!found) {
+                print ""
+                print "[Default Applications]"
+            }
+            print prefix application
+        }
+        while (blanks > 0) {
+            print ""
+            blanks--
+        }
+    }
+' "$default_file" > "${default_file}.new" && mv "${default_file}.new" "$default_file"
+}
+
+search_desktop_file()
+{
+    local MIME="$1"
+    local dir="$2"
+
+    grep -l "$MIME;" "$dir/"*.desktop 2>/dev/null
+
+    for f in $dir/*/; do
+      [ -d "$f" ] && search_desktop_file "$MIME" "$f"
+    done
+}
+
+defapp_fallback()
+{
+    MIME="$1"
+
+    xdg_user_dir="$XDG_DATA_HOME"
+    [ -n "$xdg_user_dir" ] || xdg_user_dir="$HOME/.local/share"
+
+    xdg_system_dirs="$XDG_DATA_DIRS"
+    [ -n "$xdg_system_dirs" ] || xdg_system_dirs=/usr/local/share/:/usr/share/
+
+    preference=-1
+    desktop_file=""
+    for d in `echo "$xdg_user_dir:$xdg_system_dirs" | sed 's/:/ /g'`; do
+       for x in `search_desktop_file "$MIME" "$d/applications"`; do
+          pref=0`awk -F"=" '/InitialPreference=/ {print($2)}' "$x"`
+          DEBUG 2 " Checking $x"
+
+          if [ $pref -gt $preference ]; then
+             DEBUG 2 "   Select $x [ $preference => $pref ]"
+             preference=$pref
+             desktop_file=$x
+          fi
+       done
+    done
+
+    if [ -n "$desktop_file" ] ; then
+       echo `basename $desktop_file`
+       exit_success
+    fi
+}
+
+defapp_generic()
+{
+    MIME="$1"
+    xdg_user_dir="$XDG_DATA_HOME"
+    [ -n "$xdg_user_dir" ] || xdg_user_dir="$HOME/.local/share"
+    xdg_user_dir="$xdg_user_dir/$xdg_dir_name"
+    xdg_system_dirs="$XDG_DATA_DIRS"
+    [ -n "$xdg_system_dirs" ] || xdg_system_dirs=/usr/local/share/:/usr/share/
+
+    for x in `echo "$xdg_user_dir" | sed 's/:/ /g'`; do
+        mimeapps_list="$x/applications/mimeapps.list"
+        if [ -f "$mimeapps_list" ] ; then
+            DEBUG 2 "Checking $mimeapps_list"
+            trader_result=`awk -v mimetype="$MIME" '
+    BEGIN {
+        prefix=mimetype "="
+        indefault=0
+        found=0
+    }
+    {
+        if (index($0, "[Default Applications]") == 1) {
+            indefault=1
+        } else if (index($0, "[") == 1) {
+            indefault=0
+        } else if (!found && indefault && index($0, prefix) == 1) {
+            print substr($0, length(prefix) +1, length)
+            found=1
+        }
+    }
+' $mimeapps_list`
+            if [ -n "$trader_result" ] ; then
+                echo $trader_result
+                exit_success
+            fi
+        fi
+    done
+
+    for x in `echo "$xdg_system_dirs" | sed 's/:/ /g'`; do
+       for prefix in "$XDG_MENU_PREFIX" ""; do
+          DEBUG 2 "Checking $x/applications/${prefix}defaults.list and $x/applications/${prefix}mimeinfo.cache"
+          trader_result=`grep "$MIME=" $x/applications/${prefix}defaults.list $x/applications/${prefix}mimeinfo.cache 2> /dev/null | cut -d '=' -f 2 | cut -d ';' -f 1`
+          if [ -n "$trader_result" ] ; then
+              echo $trader_result
+              exit_success
+          fi
+       done
+    done
+
+    defapp_fallback $MIME
+    exit_success
+}
+
+defapp_kde()
+{
+    MIME="$1"
+    if [ x"$KDE_SESSION_VERSION" = x"4" ]; then
+        KTRADER=`which ktraderclient 2> /dev/null`
+        MIMETYPE="--mimetype"
+        SERVICETYPE="--servicetype"
+    else
+        KTRADER=`which ktradertest 2> /dev/null`
+    fi
+    if [ -n "$KTRADER" ] ; then
+        DEBUG 1 "Running KDE trader query \"$MIME\" mimetype and \"Application\" servicetype"
+        trader_result=`$KTRADER $MIMETYPE "$MIME" $SERVICETYPE Application 2>/dev/null \
+            | grep DesktopEntryPath | head -n 1 | cut -d ':' -f 2 | cut -d \' -f 2`
+        if [ -n "$trader_result" ] ; then
+            basename "$trader_result"
+            exit_success
+        else
+            exit_failure_operation_failed
+        fi
+    else
+        defapp_generic "$1"
+    fi
+}
+
+[ x"$1" != x"" ] || exit_failure_syntax
+
+mode=
+action=
+filename=
+mimetype=
+
+case $1 in
+  install)
+    action=install
+    ;;
+
+  uninstall)
+    action=uninstall
+    ;;
+
+  query)
+    shift
+
+    if [ -z "$1" ] ; then
+        exit_failure_syntax "query type argument missing"
+    fi
+
+    case $1 in
+      filetype)
+        action=info
+
+        filename="$2"
+        if [ -z "$filename" ] ; then
+            exit_failure_syntax "FILE argument missing"
+        fi
+        case $filename in
+          -*)
+            exit_failure_syntax "unexpected option '$filename'"
+            ;;
+        esac
+        check_input_file "$filename"
+        filename=`readlink -f -- "$filename"`
+        ;;
+
+      default)
+        action=defapp
+        mimetype="$2"
+        if [ -z "$mimetype" ] ; then
+            exit_failure_syntax "mimetype argument missing"
+        fi
+        case $mimetype in
+          -*)
+            exit_failure_syntax "unexpected option '$mimetype'"
+            ;;
+
+          */*)
+            # Ok
+            ;;
+
+          *)
+            exit_failure_syntax "mimetype '$mimetype' is not in the form 'minor/major'"
+            ;;
+        esac
+        ;;
+
+      *)
+      exit_failure_syntax "unknown query type '$1'"
+      ;;
+    esac
+    ;;
+
+  default)
+    action=makedefault
+    shift
+
+    if [ -z "$1" ] ; then
+        exit_failure_syntax "application argument missing"
+    fi
+    case $1 in
+      -*)
+        exit_failure_syntax "unexpected option '$1'"
+        ;;
+
+      *.desktop)
+        filename="$1"
+        ;;
+
+      *)
+        exit_failure_syntax "malformed argument '$1', expected *.desktop"
+        ;;
+    esac
+    ;;
+
+  *)
+  exit_failure_syntax "unknown command '$1'"
+  ;;
+esac
+
+shift
+
+
+if [ "$action" = "makedefault" ]; then
+    if [ -z "$1" ] ; then
+        exit_failure_syntax "mimetype argument missing"
+    fi
+
+    while [ $# -gt 0 ] ; do
+        case $1 in
+          -*)
+            exit_failure_syntax "unexpected option '$1'"
+            ;;
+        esac
+        mimetype="$1"
+        shift
+
+        make_default_kde "$filename" "$mimetype"
+        make_default_generic "$filename" "$mimetype"
+    done
+    exit_success
+fi
+
+if [ "$action" = "info" ]; then
+    detectDE
+
+    if [ x"$DE" = x"" ]; then
+        if [ -x /usr/bin/file ]; then
+            DE=generic
+        fi
+    fi
+
+    case "$DE" in
+        kde)
+        info_kde "$filename"
+        ;;
+
+        gnome*)
+        info_gnome "$filename"
+        ;;
+
+        *)
+        info_generic "$filename"
+        ;;
+    esac
+    exit_failure_operation_impossible "no method available for quering MIME type of '$filename'"
+fi
+
+if [ "$action" = "defapp" ]; then
+    detectDE
+
+    case "$DE" in
+        kde)
+        defapp_kde "$mimetype"
+        ;;
+
+        *)
+        defapp_generic "$mimetype"
+        ;;
+    esac
+    exit_failure_operation_impossible "no method available for quering default application for '$mimetype'"
+fi
+
+vendor=true
+while [ $# -gt 0 ] ; do
+    parm="$1"
+    shift
+
+    case $parm in
+      --mode)
+        if [ -z "$1" ] ; then
+            exit_failure_syntax "mode argument missing for --mode"
+        fi
+        case "$1" in
+          user)
+            mode="user"
+            ;;
+
+          system)
+            mode="system"
+            ;;
+
+          *)
+            exit_failure_syntax "unknown mode '$1'"
+            ;;
+        esac
+        shift
+        ;;
+
+      --novendor)
+        vendor=false
+        ;;
+
+      -*)
+        exit_failure_syntax "unexpected option '$parm'"
+        ;;
+
+      *)
+        if [ -n "$filename" ] ; then
+            exit_failure_syntax "unexpected argument '$parm'"
+        fi
+
+        filename="$parm"
+        check_input_file "$filename"
+        ;;
+    esac
+done
+
+if [ -z "$action" ] ; then
+    exit_failure_syntax "command argument missing"
+fi
+
+if [ -n "$XDG_UTILS_INSTALL_MODE" ] ; then
+    if [ "$XDG_UTILS_INSTALL_MODE" = "system" ] ; then
+        mode="system"
+    elif [ "$XDG_UTILS_INSTALL_MODE" = "user" ] ; then
+        mode="user"
+    fi
+fi
+
+if [ -z "$mode" ] ; then
+    if [ `whoami` = "root" ] ; then
+        mode="system"
+    else
+        mode="user"
+    fi
+fi
+
+if [ -z "$filename" ] ; then
+    exit_failure_syntax "mimetypes-file argument missing"
+fi
+
+if [ "$vendor" =  "true" -a "$action" = "install" ] ; then
+    check_vendor_prefix "$filename"
+fi
+
+xdg_base_dir=
+xdg_dir_name=mime/packages/
+
+xdg_user_dir="$XDG_DATA_HOME"
+[ -n "$xdg_user_dir" ] || xdg_user_dir="$HOME/.local/share"
+[ x"$mode" = x"user" ] && xdg_base_dir="$xdg_user_dir/mime"
+xdg_user_dir="$xdg_user_dir/$xdg_dir_name"
+
+xdg_system_dirs="$XDG_DATA_DIRS"
+[ -n "$xdg_system_dirs" ] || xdg_system_dirs=/usr/local/share/:/usr/share/
+for x in `echo $xdg_system_dirs | sed 's/:/ /g'`; do
+    if [ -w $x/$xdg_dir_name ] ; then
+        [ x"$mode" = x"system" ] && xdg_base_dir="$x/mime"
+        xdg_global_dir="$x/$xdg_dir_name"
+        break
+    fi
+done
+[ -w $xdg_global_dir ] || xdg_global_dir=
+DEBUG 3 "xdg_user_dir: $xdg_user_dir"
+DEBUG 3 "xdg_global_dir: $xdg_global_dir"
+
+# Find KDE3 mimelnk directory
+kde_user_dir=
+kde_global_dir=
+kde_global_dirs=`kde${KDE_SESSION_VERSION}-config --path mime 2> /dev/null`
+DEBUG 3 "kde_global_dirs: $kde_global_dirs"
+first=
+for x in `echo $kde_global_dirs | sed 's/:/ /g'` ; do
+    if [ -z "$first" ] ; then
+        first=false
+        kde_user_dir="$x"
+    elif [ -w $x ] ; then
+        kde_global_dir="$x"
+    fi
+done
+DEBUG 3 "kde_user_dir: $kde_user_dir"
+DEBUG 3 "kde_global_dir: $kde_global_dir"
+
+# TODO: Gnome legacy support
+# See http://forums.fedoraforum.org/showthread.php?t=26875
+gnome_user_dir="$HOME/.gnome/apps"
+gnome_global_dir=/usr/share/gnome/apps
+[ -w $gnome_global_dir ] || gnome_global_dir=
+DEBUG 3 "gnome_user_dir: $gnome_user_dir"
+DEBUG 3 "gnome_global_dir: $gnome_global_dir"
+
+if [ x"$mode" = x"user" ] ; then
+    xdg_dir="$xdg_user_dir"
+    kde_dir="$kde_user_dir"
+    gnome_dir="$gnome_user_dir"
+    my_umask=077
+else
+    xdg_dir="$xdg_global_dir"
+    kde_dir="$kde_global_dir"
+    gnome_dir="$gnome_global_dir"
+    my_umask=022
+    if [ -z "${xdg_dir}${kde_dir}${gnome_dir}" ] ; then
+        exit_failure_operation_impossible "No writable system mimetype directory found."
+    fi
+fi
+
+# echo "[xdg|$xdg_user_dir|$xdg_global_dir]"
+# echo "[kde|$kde_user_dir|$kde_global_dir]"
+# echo "[gnome|$gnome_user_dir|$gnome_global_dir]"
+# echo "[using|$xdg_dir|$kde_dir|$gnome_dir]"
+
+basefile=`basename "$filename"`
+#[ -z $vendor ] || basefile="$vendor-$basefile"
+
+mimetypes=
+if [ -n "$kde_dir" ] ; then
+    DEBUG 2 "KDE3 mimelnk directory found, extracting mimetypes from XML file"
+
+    mimetypes=`awk < "$filename" '
+# Strip XML comments
+BEGIN {
+ suppress=0
+}
+{
+ do
+    if (suppress) {
+       if (match($0,/-->/)) {
+           $0=substr($0,RSTART+RLENGTH)
+           suppress=0
+       }
+       else {
+           break
+       }
+    }
+    else {
+       if (match($0,/<!--/)) {
+           if (RSTART>1) print substr($0,0,RSTART)
+           $0=substr($0,RSTART+RLENGTH)
+           suppress=1
+       }
+       else {
+           if ($0) print $0
+           break
+       }
+    }
+ while(1)
+}
+' | awk '
+# List MIME types listed in <mime-type> tags
+BEGIN {
+  RS="<"
+}
+/^mime-info/, /^\/mime-info/ {
+  if (match($0,/^mime-type/)) {
+    if (match($0,/type="[^"]*/) || match($0,/type='"'"'[^'"'"']*/)) {
+      print substr($0,RSTART+6,RLENGTH-6)
+    }
+  }
+}'`
+fi
+
+DEBUG 1 "$action mimetype in $xdg_dir"
+
+case $action in
+    install)
+        save_umask=`umask`
+        umask $my_umask
+
+        for x in $xdg_dir ; do
+            mkdir -p $x
+            eval 'cp $filename $x/$basefile'$xdg_redirect_output
+        done
+
+        if [ -n "$mimetypes" ] ; then
+            # No quotes around $mimetypes
+            for x in $mimetypes ; do
+                DEBUG 1 "Installing $kde_dir/$x.desktop (KDE 3.x support)"
+                mkdir -p `dirname $kde_dir/$x.desktop`
+                awk < "$filename" '
+# Strip XML comments
+BEGIN {
+ suppress=0
+}
+{
+ do
+    if (suppress) {
+       if (match($0,/-->/)) {
+           $0=substr($0,RSTART+RLENGTH)
+           suppress=0
+       }
+       else {
+           break
+       }
+    }
+    else {
+       if (match($0,/<!--/)) {
+           if (RSTART>1) print substr($0,0,RSTART)
+           $0=substr($0,RSTART+RLENGTH)
+           suppress=1
+       }
+       else {
+           if ($0) print $0
+           break
+       }
+    }
+ while(1)
+}
+' | awk > $kde_dir/$x.desktop '
+# Extract mimetype $x from the XML file $filename
+# Note that bash requires us to escape a single quote as '"'"'
+BEGIN {
+  the_type=ARGV[1]
+  the_source=ARGV[2]
+  ARGC=1
+  RS="<"
+  found=0
+  glob_patterns=""
+}
+/^mime-info/, /^\/mime-info/ {
+  if (match($0,/^mime-type/)) {
+    if (match($0,/type="[^"]*/) || match($0,/type='"'"'[^'"'"']*/)) {
+      if (substr($0,RSTART+6,RLENGTH-6) == the_type) {
+        found=1
+        print "[Desktop Entry]"
+        print "# Installed by xdg-mime from " the_source
+        print "Type=MimeType"
+        print "MimeType=" the_type
+        the_icon=the_type
+        sub("/", "-", the_icon)
+        print "Icon=" the_icon
+      }
+    }
+  }
+  else if (found) {
+    if (match($0,/^\/mime-type/)) {
+      if (glob_patterns)
+         print "Patterns=" glob_patterns
+      exit 0
+    }
+
+    if (match($0,/^sub-class-of/)) {
+      if (match($0,/type="[^"]*/) || match($0,/type='"'"'[^'"'"']*/)) {
+        print "X-KDE-IsAlso=" substr($0,RSTART+6,RLENGTH-6)
+      }
+      else {
+        print "Error: '"'"'type'"'"' argument missing in " RS $0
+        exit 1
+      }
+    }
+    if (match($0,/^glob/)) {
+      if (match($0,/pattern="[^"]*/) || match($0,/pattern='"'"'[^'"'"']*/)) {
+        glob_patterns = glob_patterns substr($0,RSTART+9,RLENGTH-9) ";"
+      }
+      else {
+        print "Error: '"'"'pattern'"'"' argument missing in " RS $0
+        exit 1
+      }
+    }
+    if (match($0,/^comment/)) {
+      if (match($0,/xml:lang="[^"]*/) || match($0,/xml:lang='"'"'[^'"'"']*/)) {
+        lang=substr($0,RSTART+10,RLENGTH-10)
+      }
+      else {
+        lang=""
+      }
+      if (match($0,/>/)) {
+        comment=substr($0,RSTART+1)
+        sub("&lt;", "<", comment)
+        sub("&gt;", ">", comment)
+        sub("&amp;", "\\&", comment)
+        if (lang)
+           print "Comment[" lang "]=" comment
+        else
+           print "Comment=" comment
+      }
+    }
+  }
+}
+END {
+  if (!found) {
+    print "Error: Mimetype '"'"'" the_type "'"'"' not found"
+    exit 1
+  }
+}
+' $x $basefile
+                if [ "$?" = "1" ] ; then
+                    grep -A 10 "^Error:" $kde_dir/$x.desktop >&2
+                    rm $kde_dir/$x.desktop
+                    exit 1
+                fi
+            done
+        fi
+
+        umask $save_umask
+        ;;
+
+    uninstall)
+        for x in $xdg_dir ; do
+            rm -f $x/$basefile
+        done
+
+        # No quotes around $mimetypes
+        for x in $mimetypes ; do
+            if grep '^# Installed by xdg-mime' $kde_dir/$x.desktop >/dev/null 2>&1; then
+                DEBUG 1 "Removing $kde_dir/$x.desktop (KDE 3.x support)"
+                rm -f $kde_dir/$x.desktop
+            fi
+        done
+        ;;
+esac
+
+update_mime_database $xdg_base_dir
+
+exit_success
+
diff -Naur orig/scripts/xdg-open git/scripts/xdg-open
--- orig/scripts/xdg-open	2011-01-01 11:03:14.000000000 +0100
+++ git/scripts/xdg-open	2013-08-06 05:04:22.637970760 +0200
@@ -279,7 +279,7 @@
             ;;
 
             --version)
-            echo "xdg-open 1.0.2"
+            echo "xdg-open 1.1.0 rc1"
             exit_success
             ;;
         esac
@@ -319,7 +319,8 @@
 
 kfmclient_fix_exit_code()
 {
-    version=`kde${KDE_SESSION_VERSION}-config --version 2>/dev/null | grep '^KDE'`
+    [ x"$KDE_SESSION_VERSION" = x"4" ] && return 0;
+    version=`LC_ALL=C.UTF-8 kde-config --version 2>/dev/null | grep '^KDE'`
     major=`echo $version | sed 's/KDE.*: \([0-9]\).*/\1/'`
     minor=`echo $version | sed 's/KDE.*: [0-9]*\.\([0-9]\).*/\1/'`
     release=`echo $version | sed 's/KDE.*: [0-9]*\.[0-9]*\.\([0-9]\).*/\1/'`
diff -Naur orig/scripts/xdg-open.in git/scripts/xdg-open.in
--- orig/scripts/xdg-open.in	1970-01-01 01:00:00.000000000 +0100
+++ git/scripts/xdg-open.in	2013-08-06 05:04:22.637970760 +0200
@@ -0,0 +1,357 @@
+#!/bin/sh
+#---------------------------------------------
+#   xdg-open
+#
+#   Utility script to open a URL in the registered default application.
+#
+#   Refer to the usage() function below for usage.
+#
+#   Copyright 2009-2010, Fathi Boudra <fabo@freedesktop.org>
+#   Copyright 2009-2010, Rex Dieter <rdieter@fedoraproject.org>
+#   Copyright 2006, Kevin Krammer <kevin.krammer@gmx.at>
+#   Copyright 2006, Jeremy White <jwhite@codeweavers.com>
+#
+#   LICENSE:
+#
+#---------------------------------------------
+
+manualpage()
+{
+cat << _MANUALPAGE
+_MANUALPAGE
+}
+
+usage()
+{
+cat << _USAGE
+_USAGE
+}
+
+#@xdg-utils-common@
+
+# This handles backslashes but not quote marks.
+first_word()
+{
+    read first rest
+    echo "$first"
+}
+
+last_word()
+{
+    read first rest
+    echo "$rest"
+}
+
+open_darwin()
+{
+    open "$1"
+
+    if [ $? -eq 0 ]; then
+        exit_success
+    else
+        exit_failure_operation_failed
+    fi
+}
+
+open_kde()
+{
+    if kde-open -v 2>/dev/null 1>&2; then
+        kde-open "$1"
+    else
+        if [ x"$KDE_SESSION_VERSION" = x"4" ]; then
+            kfmclient openURL "$1"
+        else
+            kfmclient exec "$1"
+            kfmclient_fix_exit_code $?
+        fi
+    fi
+
+    if [ $? -eq 0 ]; then
+        exit_success
+    else
+        exit_failure_operation_failed
+    fi
+}
+
+open_gnome()
+{
+    if gvfs-open --help 2>/dev/null 1>&2; then
+        gvfs-open "$1"
+    else
+        gnome-open "$1"
+    fi
+
+    if [ $? -eq 0 ]; then
+        exit_success
+    else
+        exit_failure_operation_failed
+    fi
+}
+
+open_mate()
+{
+    if gvfs-open --help 2>/dev/null 1>&2; then
+        gvfs-open "$1"
+    else
+        mate-open "$1"
+    fi
+
+    if [ $? -eq 0 ]; then
+        exit_success
+    else
+        exit_failure_operation_failed
+    fi
+}
+
+open_xfce()
+{
+    exo-open "$1"
+
+    if [ $? -eq 0 ]; then
+        exit_success
+    else
+        exit_failure_operation_failed
+    fi
+}
+
+#-----------------------------------------
+# Recursively search .desktop file
+
+search_desktop_file()
+{
+    local default="$1"
+    local dir="$2"
+    local arg="$3"
+
+    local file=""
+    # look for both vendor-app.desktop, vendor/app.desktop
+    if [ -r "$dir/$default" ]; then
+      file="$dir/$default"
+    elif [ -r "$dir/`echo $default | sed -e 's|-|/|'`" ]; then
+      file="$dir/`echo $default | sed -e 's|-|/|'`"
+    fi
+
+    if [ -r "$file" ] ; then
+        command="`grep -E "^Exec(\[[^]=]*])?=" "$file" | cut -d= -f 2- | first_word`"
+        command_exec=`which $command 2>/dev/null`
+        arguments="`grep -E "^Exec(\[[^]=]*])?=" "$file" | cut -d= -f 2- | last_word`"
+        arg_one="`echo "$arg" | sed 's/[&*\\]/\\\\&/g'`"
+        arguments_exec="`echo "$arguments" | sed -e 's*%[fFuU]*"'"$arg_one"'"*g'`"
+
+        if [ -x "$command_exec" ] ; then
+            if echo "$arguments" | grep -iq '%[fFuU]' ; then
+                echo START "$command_exec" "$arguments_exec"
+                eval "$command_exec" "$arguments_exec"
+            else
+                echo START "$command_exec" "$arguments_exec" "$arg"
+                eval "$command_exec" "$arguments_exec" "$arg"
+            fi
+
+            if [ $? -eq 0 ]; then
+                exit_success
+            fi
+        fi
+    fi
+
+    for d in $dir/*/; do
+        [ -d "$d" ] && search_desktop_file "$default" "$d" "$arg"
+    done
+}
+
+
+open_generic_xdg_mime()
+{
+    filetype="$2"
+    default=`xdg-mime query default "$filetype"`
+    if [ -n "$default" ] ; then
+        xdg_user_dir="$XDG_DATA_HOME"
+        [ -n "$xdg_user_dir" ] || xdg_user_dir="$HOME/.local/share"
+
+        xdg_system_dirs="$XDG_DATA_DIRS"
+        [ -n "$xdg_system_dirs" ] || xdg_system_dirs=/usr/local/share/:/usr/share/
+
+DEBUG 3 "$xdg_user_dir:$xdg_system_dirs"
+        for x in `echo "$xdg_user_dir:$xdg_system_dirs" | sed 's/:/ /g'`; do
+            search_desktop_file "$default" "$x/applications/" "$1"
+        done
+    fi
+}
+
+open_generic_xdg_file_mime()
+{
+    filetype=`xdg-mime query filetype "$1" | sed "s/;.*//"`
+    open_generic_xdg_mime "$1" "$filetype"
+}
+
+open_generic_xdg_x_scheme_handler()
+{
+    scheme="`echo $1 | sed -n 's/\(^[[:alnum:]+\.-]*\):.*$/\1/p'`"
+    if [ -n $scheme ]; then
+        filetype="x-scheme-handler/$scheme"
+        open_generic_xdg_mime "$1" "$filetype"
+    fi
+}
+
+open_generic()
+{
+    # Paths or file:// URLs
+    if (echo "$1" | grep -q '^file://' ||
+        ! echo "$1" | egrep -q '^[[:alpha:]+\.\-]+:'); then
+
+        local file="$1"
+
+        # Decode URLs
+        if echo "$file" | grep -q '^file:///'; then
+            file=${file#file://}
+            file="$(printf "$(echo "$file" | sed -e 's@%\([a-f0-9A-F]\{2\}\)@\\x\1@g')")"
+        fi
+        check_input_file "$file"
+
+        open_generic_xdg_file_mime "$file"
+
+        if which run-mailcap 2>/dev/null 1>&2; then
+            run-mailcap --action=view "$file"
+            if [ $? -eq 0 ]; then
+                exit_success
+            fi
+        fi
+
+        if mimeopen -v 2>/dev/null 1>&2; then
+            mimeopen -L -n "$file"
+            if [ $? -eq 0 ]; then
+                exit_success
+            fi
+        fi
+    fi
+
+    open_generic_xdg_x_scheme_handler "$1"
+
+    IFS=":"
+    for browser in $BROWSER; do
+        if [ x"$browser" != x"" ]; then
+
+            browser_with_arg=`printf "$browser" "$1" 2>/dev/null`
+            if [ $? -ne 0 ]; then
+                browser_with_arg=$browser;
+            fi
+
+            if [ x"$browser_with_arg" = x"$browser" ]; then
+                eval '$browser "$1"'$xdg_redirect_output;
+            else eval '$browser_with_arg'$xdg_redirect_output;
+            fi
+
+            if [ $? -eq 0 ]; then
+                exit_success;
+            fi
+        fi
+    done
+
+    exit_failure_operation_impossible "no method available for opening '$1'"
+}
+
+open_lxde()
+{
+    # pcmanfm only knows how to handle file:// urls and filepaths, it seems.
+    if (echo "$1" | grep -q '^file://' ||
+        ! echo "$1" | egrep -q '^[[:alpha:]+\.\-]+:')
+    then
+        local file="$(echo "$1" | sed 's%^file://%%')"
+
+        # handle relative paths
+        if ! echo "$file" | grep -q '^/'; then
+            file="$(pwd)/$file"
+        fi
+
+        pcmanfm "$file"
+
+    else
+        open_generic "$1"
+    fi
+
+    if [ $? -eq 0 ]; then
+        exit_success
+    else
+        exit_failure_operation_failed
+    fi
+}
+
+[ x"$1" != x"" ] || exit_failure_syntax
+
+url=
+while [ $# -gt 0 ] ; do
+    parm="$1"
+    shift
+
+    case "$parm" in
+      -*)
+        exit_failure_syntax "unexpected option '$parm'"
+        ;;
+
+      *)
+        if [ -n "$url" ] ; then
+            exit_failure_syntax "unexpected argument '$parm'"
+        fi
+        url="$parm"
+        ;;
+    esac
+done
+
+if [ -z "${url}" ] ; then
+    exit_failure_syntax "file or URL argument missing"
+fi
+
+detectDE
+
+if [ x"$DE" = x"" ]; then
+    DE=generic
+fi
+
+DEBUG 2 "Selected DE $DE"
+
+# sanitize BROWSER (avoid caling ourselves in particular)
+case "${BROWSER}" in
+    *:"xdg-open"|"xdg-open":*)
+        BROWSER=$(echo $BROWSER | sed -e 's|:xdg-open||g' -e 's|xdg-open:||g')
+        ;;
+    "xdg-open")
+        BROWSER=
+        ;;
+esac
+
+# if BROWSER variable is not set, check some well known browsers instead
+if [ x"$BROWSER" = x"" ]; then
+    BROWSER=links2:elinks:links:lynx:w3m
+    if [ -n "$DISPLAY" ]; then
+        BROWSER=x-www-browser:firefox:seamonkey:mozilla:epiphany:konqueror:chromium-browser:google-chrome:$BROWSER
+    fi
+fi
+
+case "$DE" in
+    kde)
+    open_kde "$url"
+    ;;
+
+    gnome*)
+    open_gnome "$url"
+    ;;
+
+    mate)
+    open_mate "$url"
+    ;;
+
+    xfce)
+    open_xfce "$url"
+    ;;
+
+    lxde)
+    open_lxde "$url"
+    ;;
+
+    generic)
+    open_generic "$url"
+    ;;
+
+    *)
+    exit_failure_operation_impossible "no method available for opening '$url'"
+    ;;
+esac
diff -Naur orig/scripts/xdg-screensaver git/scripts/xdg-screensaver
--- orig/scripts/xdg-screensaver	2011-01-01 11:03:14.000000000 +0100
+++ git/scripts/xdg-screensaver	2013-08-06 05:04:22.637970760 +0200
@@ -307,7 +307,7 @@
             ;;
 
             --version)
-            echo "xdg-screensaver 1.0.2"
+            echo "xdg-screensaver 1.1.0 rc1"
             exit_success
             ;;
         esac
@@ -347,7 +347,8 @@
 
 kfmclient_fix_exit_code()
 {
-    version=`kde${KDE_SESSION_VERSION}-config --version 2>/dev/null | grep '^KDE'`
+    [ x"$KDE_SESSION_VERSION" = x"4" ] && return 0;
+    version=`LC_ALL=C.UTF-8 kde-config --version 2>/dev/null | grep '^KDE'`
     major=`echo $version | sed 's/KDE.*: \([0-9]\).*/\1/'`
     minor=`echo $version | sed 's/KDE.*: [0-9]*\.\([0-9]\).*/\1/'`
     release=`echo $version | sed 's/KDE.*: [0-9]*\.[0-9]*\.\([0-9]\).*/\1/'`
diff -Naur orig/scripts/xdg-screensaver.in git/scripts/xdg-screensaver.in
--- orig/scripts/xdg-screensaver.in	1970-01-01 01:00:00.000000000 +0100
+++ git/scripts/xdg-screensaver.in	2013-08-06 05:04:22.641970799 +0200
@@ -0,0 +1,627 @@
+#!/bin/sh
+#---------------------------------------------
+#   xdg-screensaver
+#
+#   Utility script to control screensaver.
+#
+#   Refer to the usage() function below for usage.
+#
+#   Copyright 2006, Bryce Harrington <bryce@osdl.org>
+#
+#   LICENSE:
+#
+#---------------------------------------------
+
+manualpage()
+{
+cat << _MANUALPAGE
+_MANUALPAGE
+}
+
+usage()
+{
+cat << _USAGE
+_USAGE
+}
+
+#@xdg-utils-common@
+
+# Check if we can use "mv -T"
+if mv -T ... ... 2>&1 | grep '\.\.\.' > /dev/null ; then
+   # We can securely move files in /tmp with mv -T
+   DEBUG 1 "mv -T available"
+   MV="mv -T"
+   screensaver_file="/tmp/xdg-screensaver-$USER-"`echo $DISPLAY | sed 's/:/-/g'`
+else
+   # No secure moves available, use home dir
+   DEBUG 1 "mv -T not available"
+   MV="mv"
+   screensaver_file="$HOME/.xdg-screensaver-"`echo $(hostname)-$DISPLAY | sed 's/:/-/g'`
+fi
+lockfile_command=`which lockfile 2> /dev/null`
+
+lockfile()
+{
+  if [ -n "$lockfile_command" ] ; then
+     $lockfile_command -1 -l 10 -s 3 "$screensaver_file".lock
+  else
+     # Poor man's attempt at doing a lockfile
+     # Be careful not to facilitate a symlink attack
+     local try
+     try=0
+     while ! ln -s "$screensaver_file".lock "$screensaver_file".lock 2> /dev/null;
+     do
+        sleep 1
+        try=$(($try+1))
+        if [ $try -eq 3 ] ; then
+            rm -f "$screensaver_file".lock || return # Can't remove lockfile
+            try=0
+        fi
+     done
+  fi
+}
+
+unlockfile()
+{
+  rm -f "$screensaver_file".lock
+}
+
+perform_action()
+{
+  result=1
+
+  if [ "$1" = "resume" ] ; then
+      # Restore DPMS state
+      if [ -f "$screensaver_file.dpms" ]; then
+          rm "$screensaver_file.dpms"
+          # Re-enable DPMS
+          xset +dpms
+      fi
+  fi
+  if [ "$1" = "reset" ] ; then
+      if xset -q | grep 'DPMS is Enabled' > /dev/null 2> /dev/null; then
+          xset dpms force on
+      fi
+  fi
+
+  case "$DE" in
+    kde)
+      if [ x"$KDE_SESSION_VERSION" = x"4" ]; then
+          screensaver_freedesktop "$1"
+      else
+          screensaver_kde "$1"
+      fi
+      ;;
+
+    gnome_screensaver)
+      screensaver_gnome_screensaver "$1"
+      ;;
+
+    xscreensaver)
+      screensaver_xscreensaver "$1"
+      ;;
+
+    '')
+      [ -n "$DISPLAY" ] && screensaver_xserver "$1"
+      ;;
+  esac
+
+  if [ -n "$DISPLAY" -a "$1" = "suspend" ] ; then
+      # Save DPMS state
+      if xset -q | grep 'DPMS is Enabled' > /dev/null 2> /dev/null; then
+          test "${TMPDIR+set}" = set || TMPDIR=/tmp
+          tmpfile=`mktemp $TMPDIR/tmp.XXXXXXXXXX`
+          $MV "$tmpfile" "$screensaver_file.dpms"
+          # Disable DPMS
+          xset -dpms
+      fi
+  fi
+
+}
+
+cleanup_suspend()
+{
+  lockfile
+  test "${TMPDIR+set}" = set || TMPDIR=/tmp
+  tmpfile=`mktemp $TMPDIR/tmp.XXXXXXXXXX`
+  grep -v "$window_id:$xprop_pid\$" "$screensaver_file" > "$tmpfile" 2> /dev/null
+  $MV "$tmpfile" "$screensaver_file"
+  if [ ! -s "$screensaver_file" ] ; then
+      rm "$screensaver_file"
+      unlockfile
+      # $screensaver_file is empty, do resume
+      perform_action resume
+  else
+      unlockfile
+  fi
+}
+
+do_resume()
+{
+  lockfile # Obtain lockfile
+  # Find the PID of the trackingprocess
+  xprop_pid=`grep "$window_id:" "$screensaver_file" 2> /dev/null | cut -d ':' -f 2`
+  unlockfile # Free lockfile
+  if [ -n "$xprop_pid" ] && ps -p "$xprop_pid" 2> /dev/null | grep xprop > /dev/null; then
+     # Kill the tracking process
+     kill -s TERM $xprop_pid
+  fi
+  cleanup_suspend
+}
+
+XPROP=`which xprop 2> /dev/null`
+
+check_window_id()
+{
+  if [ -z "$XPROP" ]; then
+     DEBUG 3 "xprop not found"
+     return
+  fi
+  DEBUG 2 "Running $XPROP -id $window_id"
+  if $XPROP -id $window_id > /dev/null 2> /dev/null; then
+     DEBUG 3 Window $window_id exists
+  else
+     DEBUG 3 Window $window_id does not exist
+     exit_failure_operation_failed "Window $window_id does not exist"
+  fi
+}
+
+track_window()
+{
+  if [ -z "$XPROP" ]; then
+     # Don't track window if we don't have xprop
+     return
+  fi
+  lockfile
+
+  test "${TMPDIR+set}" = set || TMPDIR=/tmp
+  tmpfile=`mktemp $TMPDIR/tmp.XXXXXXXXXX`
+  # Filter stale entries from the xdg-screensaver status file
+  # Return if $window_id is being tracked already
+  (
+    already_tracked=1
+    IFS_save="$IFS"
+    IFS=":"
+    while read wid pid; do
+      if ps -p "$pid" 2> /dev/null | grep xprop > /dev/null; then
+        echo "$wid:$pid"
+        if [ $wid = $window_id ] ; then
+          already_tracked=0
+        fi
+      fi
+    done
+    IFS="$IFS_save"
+    exit $already_tracked
+  ) < $screensaver_file > $tmpfile
+  already_tracked=$?
+
+  if [ "$already_tracked" -eq "0" ] ; then
+    $MV "$tmpfile" "$screensaver_file"
+    # We are already tracking $window_id, don't do anything
+    unlockfile
+    return
+  fi
+
+  # Start tracking $window_id
+  $XPROP -id $window_id -spy > /dev/null &
+  xprop_pid=$!
+  # Add window_id and xprop_pid to the xdg-screensave status file
+  echo "$window_id:$xprop_pid" >> $tmpfile
+  $MV "$tmpfile" "$screensaver_file"
+  unlockfile
+  # Wait for xprop to edit, it means that the window disappeared
+  wait $xprop_pid
+  # Clean up the administration and resume the screensaver
+  cleanup_suspend
+}
+
+screensaver_freedesktop()
+{
+    case "$1" in
+        suspend)
+        dbus-send --session \
+                  --dest=org.freedesktop.ScreenSaver \
+                  --type=method_call \
+                  --print-reply \
+                  --reply-timeout=2000 \
+                  /ScreenSaver \
+                  org.freedesktop.ScreenSaver.Inhibit \
+                  string:$window_id \
+                  string:xdg-screensaver \
+                  | grep uint32 | cut -d ' ' -f 5 >| "$screensaver_file.cookie" \
+                  2> /dev/null
+        result=$?
+        ;;
+
+        resume)
+        if [ -f "$screensaver_file.cookie" ] ; then
+            value=`cat "$screensaver_file.cookie"`
+            dbus-send --session \
+                      --dest=org.freedesktop.ScreenSaver \
+                      --type=method_call \
+                      /ScreenSaver \
+                      org.freedesktop.ScreenSaver.UnInhibit \
+                      uint32:$value \
+                      2> /dev/null
+            rm -f "$screensaver_file.cookie"
+        fi
+        result=$?
+        ;;
+
+        activate)
+        dbus-send --session \
+                  --dest=org.freedesktop.ScreenSaver \
+                  --type=method_call \
+                  /ScreenSaver \
+                  org.freedesktop.ScreenSaver.SetActive \
+                  boolean:true \
+                  2> /dev/null
+        result=$?
+        ;;
+
+        lock)
+        dbus-send --session \
+                  --dest=org.freedesktop.ScreenSaver \
+                  --type=method_call \
+                  /ScreenSaver \
+                  org.freedesktop.ScreenSaver.Lock \
+                  2> /dev/null
+        ;;
+
+        reset)
+        if [ -f "$screensaver_file.cookie" ] ; then
+            value=`cat "$screensaver_file.cookie"`
+            dbus-send --session \
+                      --dest=org.freedesktop.ScreenSaver \
+                      --type=method_call \
+                      /ScreenSaver \
+                      org.freedesktop.ScreenSaver.UnInhibit \
+                      uint32:$value \
+                      2> /dev/null
+            rm -f "$screensaver_file.cookie"
+        fi
+        result=$?
+        ;;
+
+        status)
+        status=`dbus-send --session \
+                          --dest=org.freedesktop.ScreenSaver \
+                          --type=method_call \
+                          --print-reply \
+                          --reply-timeout=2000 \
+                          /ScreenSaver \
+                          org.freedesktop.ScreenSaver.GetActive \
+                          | grep boolean | cut -d ' ' -f 5`
+        result=$?
+        if [ x"$status" = "xtrue" ]; then
+            echo "enabled"
+        elif [ x"$status" = "xfalse" ]; then
+            echo "disabled"
+        else
+            echo "ERROR: dbus org.freedesktop.ScreenSaver.GetActive returned '$status'" >&2
+            return 1
+        fi
+        ;;
+
+        *)
+        echo "ERROR: Unknown command '$1'" >&2
+        return 1
+        ;;
+    esac
+}
+
+screensaver_kde()
+{
+    case "$1" in
+        suspend)
+        dcop kdesktop KScreensaverIface enable false > /dev/null
+        result=$?
+        ;;
+
+        resume)
+        dcop kdesktop KScreensaverIface configure > /dev/null
+        result=$?
+        ;;
+
+        activate)
+        dcop kdesktop KScreensaverIface save > /dev/null
+        result=$?
+        ;;
+
+        lock)
+        dcop kdesktop KScreensaverIface lock > /dev/null
+        result=$?
+        ;;
+
+        reset)
+        # Turns the screensaver off right now
+        dcop kdesktop KScreensaverIface quit > /dev/null
+        result=$?
+        ;;
+
+        status)
+        status=`dcop kdesktop KScreensaverIface isEnabled`
+        result=$?
+        if [ x"$status" = "xtrue" ]; then
+            echo "enabled"
+        elif [ x"$status" = "xfalse" ]; then
+            echo "disabled"
+        else
+            echo "ERROR: kdesktop KScreensaverIface isEnabled returned '$status'" >&2
+            return 1
+        fi
+        ;;
+
+        *)
+        echo "ERROR: Unknown command '$1'" >&2
+        return 1
+        ;;
+    esac
+}
+
+screensaver_xserver()
+{
+    case "$1" in
+        suspend)
+        xset s off > /dev/null
+        result=$?
+        ;;
+
+        resume)
+        xset s default > /dev/null
+        result=$?
+        ;;
+
+        activate)
+        xset s activate > /dev/null
+        result=$?
+        ;;
+
+        reset)
+        xset s reset > /dev/null
+        result=$?
+        ;;
+
+        status)
+        timeout=`xset q | sed '/^Screen Saver:/,/^[^ ]/ { s/.*timeout: *\([0-9]*\).*/\1/; t }; d'`
+        result=$?
+        if [ "$timeout" -gt 0 ]; then
+            echo "enabled"
+        elif [ "$timeout" -eq 0 ]; then
+            echo "disabled"
+        else
+            echo "ERROR: xset q did not report the screensaver timeout" >&2
+            return 1
+        fi
+        ;;
+
+        *)
+        echo "ERROR: Unknown command '$1'" >&2
+        return 1
+        ;;
+    esac
+}
+
+screensaver_suspend_loop()
+{
+  lockfile
+  test "${TMPDIR+set}" = set || TMPDIR=/tmp
+  tmpfile=`mktemp $TMPDIR/tmp.XXXXXXXXXX`
+  # Filter stale entries from the xdg-screensaver status file
+  cat "$screensaver_file" 2> /dev/null | (
+    IFS_save="$IFS"
+    IFS=":"
+    while read wid pid; do
+      if ps -p "$pid" 2> /dev/null | grep xprop > /dev/null; then
+        echo "$wid:$pid"
+      fi
+    done
+    IFS="$IFS_save"
+  ) > $tmpfile
+  if [ -s "$tmpfile" ] ; then
+    # Suspend pending, don't do a thing
+    $MV "$tmpfile" "$screensaver_file"
+    unlockfile
+    return
+  fi
+  $MV "$tmpfile" "$screensaver_file"
+  unlockfile
+  (while [ -f "$screensaver_file" ]; do $*; sleep 50; done) > /dev/null 2> /dev/null &
+}
+
+screensaver_gnome_screensaver()
+{
+# DBUS interface for gnome-screensaver
+# http://people.gnome.org/~mccann/gnome-screensaver/docs/gnome-screensaver.html
+    case "$1" in
+        suspend)
+        screensaver_suspend_loop \
+        dbus-send --session \
+                  --dest=org.gnome.ScreenSaver \
+                  --type=method_call \
+                  /org/gnome/ScreenSaver \
+                  org.gnome.ScreenSaver.SimulateUserActivity \
+                  2> /dev/null
+        result=$?
+        ;;
+
+        resume)
+        # Automatic resume when $screensaver_file disappears
+        result=0
+        ;;
+
+        activate)
+        dbus-send --session \
+                  --dest=org.gnome.ScreenSaver \
+                  --type=method_call \
+                  /org/gnome/ScreenSaver \
+                  org.gnome.ScreenSaver.SetActive \
+                  boolean:true \
+                  2> /dev/null
+        result=$?
+        ;;
+
+        lock)
+        gnome-screensaver-command --lock > /dev/null 2> /dev/null
+        result=$?
+        ;;
+
+        reset)
+        # Turns the screensaver off right now
+        dbus-send --session \
+                  --dest=org.gnome.ScreenSaver \
+                  --type=method_call \
+                  /org/gnome/ScreenSaver \
+                  org.gnome.ScreenSaver.SimulateUserActivity \
+                 2> /dev/null
+        result=$?
+        ;;
+
+        status)
+        status=`dbus-send --session \
+                          --dest=org.gnome.ScreenSaver \
+                          --type=method_call \
+                          --print-reply \
+                          --reply-timeout=2000 \
+                          /org/gnome/ScreenSaver \
+                          org.gnome.ScreenSaver.GetActive \
+                          | grep boolean | cut -d ' ' -f 5`
+        result=$?
+        if [ x"$status" = "xtrue" -o x"$status" = "xfalse" ]; then
+            echo "enabled"
+        elif [ x"$result" != "x0" ]; then
+            echo "ERROR: dbus org.gnome.ScreenSaver.GetActive returned '$status'" >&2
+            return 1
+        else
+            echo "disabled"
+        fi
+        ;;
+
+        *)
+        echo "ERROR: Unknown command '$1" >&2
+        return 1
+        ;;
+    esac
+}
+
+screensaver_xscreensaver()
+{
+    case "$1" in
+        suspend)
+        screensaver_suspend_loop xscreensaver-command -deactivate
+        result=0
+        ;;
+
+        resume)
+        # Automatic resume when $screensaver_file disappears
+        result=0
+        ;;
+
+        activate)
+        xscreensaver-command -activate > /dev/null 2> /dev/null
+        result=$?
+        ;;
+
+        lock)
+        xscreensaver-command -lock > /dev/null 2> /dev/null
+        result=$?
+        ;;
+
+        reset)
+        # Turns the screensaver off right now
+        xscreensaver-command -deactivate > /dev/null 2> /dev/null
+        result=$?
+        ;;
+
+        status)
+        result=0
+        if [ -f "$screensaver_file" ] ; then
+            echo "disabled"
+        else
+            echo "enabled"
+        fi
+        ;;
+
+        *)
+        echo "ERROR: Unknown command '$1" >&2
+        return 1
+        ;;
+    esac
+}
+
+[ x"$1" != x"" ] || exit_failure_syntax
+
+action=
+window_id=
+
+case $1 in
+  suspend)
+    action="$1"
+
+    shift
+
+    if [ -z "$1" ] ; then
+        exit_failure_syntax "WindowID argument missing"
+    fi
+
+    window_id="$1"
+    check_window_id
+    ;;
+
+  resume)
+    action="$1"
+
+    shift
+
+    if [ -z "$1" ] ; then
+        exit_failure_syntax "WindowID argument missing"
+    fi
+
+    window_id="$1"
+    check_window_id
+    ;;
+
+  activate)
+    action="$1"
+    ;;
+
+  lock)
+    action="$1"
+    ;;
+
+  reset)
+    action="$1"
+    ;;
+
+  status)
+    action="$1"
+    ;;
+
+  *)
+    exit_failure_syntax "unknown command '$1'"
+    ;;
+esac
+
+detectDE
+# Consider "xscreensaver" a separate DE
+xscreensaver-command -version 2> /dev/null | grep XScreenSaver > /dev/null && DE="xscreensaver"
+# Consider "gnome-screensaver" a separate DE
+dbus-send --print-reply --dest=org.freedesktop.DBus /org/freedesktop/DBus org.freedesktop.DBus.GetNameOwner string:org.gnome.ScreenSaver > /dev/null 2>&1 && DE="gnome_screensaver"
+
+if [ "$action" = "resume" ] ; then
+    do_resume
+    exit_success
+fi
+
+perform_action "$action"
+
+if [ "$action" = "suspend" ] ; then
+    # Start tracking $window_id and resume the screensaver once it disappears
+    ( track_window  ) 2> /dev/null > /dev/null &
+fi
+
+if [ $result -eq 0 ]; then
+    exit_success
+else
+    exit_failure_operation_failed
+fi
diff -Naur orig/scripts/xdg-settings git/scripts/xdg-settings
--- orig/scripts/xdg-settings	2011-01-01 11:03:14.000000000 +0100
+++ git/scripts/xdg-settings	2013-08-06 05:04:22.641970799 +0200
@@ -39,7 +39,7 @@
 
 Synopsis
 
-xdg-settings { get | check | set } {property} [value]
+xdg-settings { get | check | set } {property} [subproperty] [value]
 
 xdg-settings { --help | --list | --manual | --version }
 
@@ -65,6 +65,16 @@
 --version
     Show the xdg-utils version information.
 
+Properties
+
+When using xdg-settings to get, check or set a destkop setting, properties and
+possibly sub-properties are used to specify the setting to be changed.
+
+Some properties (such as default-web-browser) fully describe the setting to be
+changed. Other properties (such as default-url-scheme-handler) require more
+information (in this case the actual scheme to set the default handler for)
+which must be provided in a sub-property.
+
 Exit Codes
 
 An exit code of 0 indicates success while a non-zero exit code indicates
@@ -98,6 +108,11 @@
         xdg-settings set default-web-browser google-chrome.desktop
 
 
+Set the default mailto URL scheme handler to be evolution.desktop
+
+        xdg-settings set default-url-scheme-handler mailto evolution.desktop
+
+
 _MANUALPAGE
 }
 
@@ -108,7 +123,7 @@
 
 Synopsis
 
-xdg-settings { get | check | set } {property} [value]
+xdg-settings { get | check | set } {property} [subproperty] [value]
 
 xdg-settings { --help | --list | --manual | --version }
 
@@ -287,7 +302,7 @@
             ;;
 
             --version)
-            echo "xdg-settings 1.0.2"
+            echo "xdg-settings 1.1.0 rc1"
             exit_success
             ;;
         esac
@@ -327,7 +342,8 @@
 
 kfmclient_fix_exit_code()
 {
-    version=`kde${KDE_SESSION_VERSION}-config --version 2>/dev/null | grep '^KDE'`
+    [ x"$KDE_SESSION_VERSION" = x"4" ] && return 0;
+    version=`LC_ALL=C.UTF-8 kde-config --version 2>/dev/null | grep '^KDE'`
     major=`echo $version | sed 's/KDE.*: \([0-9]\).*/\1/'`
     minor=`echo $version | sed 's/KDE.*: [0-9]*\.\([0-9]\).*/\1/'`
     release=`echo $version | sed 's/KDE.*: [0-9]*\.[0-9]*\.\([0-9]\).*/\1/'`
@@ -487,6 +503,30 @@
 }
 
 # }}} MIME utilities
+# {{{ KDE utilities
+
+# Reads the KDE configuration setting, compensating for a bug in some versions of kreadconfig.
+read_kde_config()
+{
+    configfile="$1"
+    configsection="$2"
+    configkey="$3"
+    application="`kreadconfig --file $configfile --group $configsection --key $configkey`"
+    if [ x"$application" != x ]; then
+        echo "$application"
+    else
+        # kreadconfig in KDE 4 may not notice Key[$*]=... localized settings, so
+        # check by hand if it didn't find anything (oddly kwriteconfig works
+        # fine though).
+        configfile_dir=`kde${KDE_SESSION_VERSION}-config --path config  | cut -d ':' -f 1`
+        configfile_path="$configfile_dir/$configfile"
+        [ ! -f "$configfile_path" ] && return
+        # This will only take the first value if there is more than one.
+        grep "^$configkey"'\[$[^]=]*\]=' "$configfile_path" | head -n 1 | cut -d= -f 2-
+    fi
+}
+
+# }}} KDE utilities
 # {{{ KDE
 
 # Resolves the KDE browser setting to a binary: if prefixed with !, simply removes it;
@@ -520,22 +560,9 @@
     esac
 }
 
-# Reads the KDE browser setting, compensating for a bug in some versions of kreadconfig.
 read_kde_browser()
 {
-    browser="`kreadconfig --file kdeglobals --group General --key BrowserApplication`"
-    if [ x"$browser" != x ]; then
-        echo "$browser"
-    else
-        # kreadconfig in KDE 4 may not notice Key[$*]=... localized settings, so
-        # check by hand if it didn't find anything (oddly kwriteconfig works
-        # fine though).
-        kdeglobals_dir=`kde${KDE_SESSION_VERSION}-config --path config  | cut -d ':' -f 1`
-        kdeglobals="$kdeglobals_dir/kdeglobals"
-        [ ! -f "$kdeglobals" ] && return
-        # This will only take the first value if there is more than one.
-        grep '^BrowserApplication\[$[^]=]*\]=' "$kdeglobals" | head -n 1 | cut -d= -f 2-
-    fi
+    read_kde_config kdeglobals General BrowserApplication
 }
 
 get_browser_kde()
@@ -752,6 +779,168 @@
 # }}} xfce
 # }}} default browser
 
+# {{{ default url scheme handler
+
+exit_unimplemented_default_handler()
+{
+    exit_failure_operation_impossible "default-url-scheme-handler not implemented for $DE"
+}
+
+# {{{ KDE
+
+# Recent versions of KDE support default scheme handler applications using the
+# mime type of x-scheme-handler/scheme. Older versions will not support this
+# but do have support for setting a default mail handler. There is also a
+# system in KDE where .protocol files can be used, however this is not
+# supported by this script. When reading a scheme handler we will use the
+# default mail handler for the mailto scheme, otherwise we will use the mime
+# type x-scheme-handler/scheme.
+
+get_url_scheme_handler_kde()
+{
+    if [ "$1" = "mailto" ]; then
+        handler="`read_kde_config emaildefaults PROFILE_Default EmailClient | first_word`"
+        echo "handler is $handler"
+        if [ x"$handler" != x ]; then
+            binary_to_desktop_file "$handler"
+        else
+            get_browser_mime "x-scheme-handler/$1"
+        fi
+    else 
+        get_browser_mime "x-scheme-handler/$1"
+    fi
+}
+
+check_url_scheme_handler_kde()
+{
+    check="`desktop_file_to_binary "$2"`"
+    if [ -z "$check" ]; then
+        echo no
+        exit_success
+    fi
+    if [ x"$1" = "mailto" ]; then
+        binary="`read_kde_config emaildefaults PROFILE_Default EmailClient`"
+        if [ x"$binary" != x"$check" ]; then
+            echo no
+            exit_success
+        fi
+    fi
+    handler="`get_browser_mime x-scheme-handler/$1`"
+    binary="`desktop_file_to_binary "$handler"`"
+    if [ x"$binary" != x"$check" ]; then
+        echo no
+        exit_success
+    fi
+    echo yes
+    exit_success
+}
+
+set_url_scheme_handler_kde()
+{
+    set_browser_mime "$2" "x-scheme-handler/$1" || return
+    if [ "$1" = "mailto" ]; then
+        binary="`desktop_file_to_binary "$2"`"
+        kwriteconfig --file emaildefaults --group PROFILE_Default --key EmailClient "$binary"
+    fi
+}
+
+# }}} KDE
+# {{{ GNOME
+
+get_url_scheme_handler_gnome()
+{
+    binary="`gconftool-2 --get /desktop/gnome/url-handlers/$1/command | first_word`"
+    if [ x"$binary" != x"" ]; then
+        # gconftool gives the binary (maybe with %s etc. afterward),
+        # but we want the desktop file name, not the binary. So, we
+        # have to find the desktop file to which it corresponds.
+        desktop="`binary_to_desktop_file "$binary"`"
+        basename "$desktop"
+    fi
+}
+
+check_url_scheme_handler_gnome()
+{
+    check="`desktop_file_to_binary "$2"`"
+    if [ -z "$check" ]; then
+        echo no
+        exit_success
+    fi
+    binary="`gconftool-2 --get /desktop/gnome/url-handlers/$1/command | first_word`"
+    if [ x"$binary" != x"$check" ]; then
+        echo no
+        exit_success
+    fi
+    echo yes
+    exit_success
+}
+
+set_url_scheme_handler_gnome()
+{
+    binary="`desktop_file_to_binary "$2"`"
+    [ "$binary" ] || exit_failure_file_missing
+
+    gconftool-2 --type string --set /desktop/gnome/url-handlers/$1/command "$binary %s"
+    gconftool-2 --type bool --set /desktop/gnome/url-handlers/$1/needs_terminal false
+    gconftool-2 --type bool --set /desktop/gnome/url-handlers/$1/enabled true
+}
+
+# }}} GNOME
+# {{{ GNOME 3.x
+
+get_url_scheme_handler_gnome3()
+{
+    get_browser_mime "x-scheme-handler/$1"
+}
+
+check_url_scheme_handler_gnome3()
+{
+    desktop="$2"
+    check="`desktop_file_to_binary "$2"`"
+    if [ -z "$check" ]; then
+        echo no
+        exit_success
+    fi
+    browser="`get_browser_mime "x-scheme-handler/$1"`"
+    if [ x"$browser" != x"$desktop" ]; then
+        echo no
+        exit_success
+    fi
+    echo yes
+    exit_success
+}
+
+set_url_scheme_handler_gnome3()
+{
+    binary="`desktop_file_to_binary "$2"`"
+    [ "$binary" ] || exit_failure_file_missing
+    set_browser_mime "$2" || return
+
+    # Set the default browser.
+    set_browser_mime "$2" "x-scheme-handler/$1" || return
+}
+
+# }}} GNOME 3.x
+# {{{ xfce
+
+get_url_scheme_handler_xfce()
+{
+    exit_unimplemented_default_handler "$1"
+}
+
+check_url_scheme_handler_xfce()
+{
+    exit_unimplemented_default_handler "$1"
+}
+
+set_url_scheme_handler_xfce()
+{
+    exit_unimplemented_default_handler "$1"
+}
+
+# }}} xfce
+# }}} default protocol handler
+
 dispatch_specific()
 {
     # The PROP comments in this function are used to generate the output of
@@ -763,6 +952,10 @@
             get_browser_$DE
             ;;
 
+          default-url-scheme-handler) # PROP:    Default handler for URL scheme
+            get_url_scheme_handler_$DE "$1"
+            ;;
+
           *)
             exit_failure_syntax
             ;;
@@ -774,18 +967,29 @@
             check_browser_$DE "$1"
             ;;
 
+          default-url-scheme-handler)
+            check_desktop_filename "$2"
+            check_url_scheme_handler_$DE "$1" "$2"
+            ;;
+
           *)
             exit_failure_syntax
             ;;
         esac
     else # set
-        [ $# -eq 1 ] || exit_failure_syntax "unexpected/missing argument"
         case "$parm" in
           default-web-browser)
+	    [ $# -eq 1 ] || exit_failure_syntax "unexpected/missing argument"
             check_desktop_filename "$1"
             set_browser_$DE "$1"
             ;;
 
+          default-url-scheme-handler)
+	    [ $# -eq 2 ] || exit_failure_syntax "unexpected/missing argument"
+            check_desktop_filename "$2"
+            set_url_scheme_handler_$DE "$1" "$2"
+            ;;
+
           *)
             exit_failure_syntax
             ;;
diff -Naur orig/scripts/xdg-settings.in git/scripts/xdg-settings.in
--- orig/scripts/xdg-settings.in	1970-01-01 01:00:00.000000000 +0100
+++ git/scripts/xdg-settings.in	2013-08-06 05:04:22.641970799 +0200
@@ -0,0 +1,752 @@
+#!/bin/sh
+#---------------------------------------------
+#   xdg-settings
+#
+#   Utility script to get various settings from the desktop environment.
+#
+#   Refer to the usage() function below for usage.
+#
+#   Copyright 2009, Google Inc.
+#
+#   LICENSE:
+#
+#---------------------------------------------
+
+manualpage()
+{
+cat << _MANUALPAGE
+_MANUALPAGE
+}
+
+usage()
+{
+cat << _USAGE
+_USAGE
+}
+
+#@xdg-utils-common@
+
+check_desktop_filename()
+{
+    case "$1" in
+      */*)
+        exit_failure_syntax "invalid application name"
+        ;;
+      *.desktop)
+        return
+        ;;
+      *)
+        exit_failure_syntax "invalid application name"
+        ;;
+    esac
+}
+
+# {{{ default browser
+# {{{ utility functions
+
+# In order to remove an application from the automatically-generated list of
+# applications for handling a given MIME type, the desktop environment may copy
+# the global .desktop file into the user's .local directory, and remove that
+# MIME type from its list. In that case, we must restore the MIME type to the
+# application's list of MIME types before we can set it as the default for that
+# MIME type. (We can't just delete the local version, since the user may have
+# made other changes to it as well. So, tweak the existing file.)
+# This function is hard-coded for text/html but it could be adapted if needed.
+fix_local_desktop_file()
+{
+    if test -z "$2" ; then
+        MIME="text/html"
+    else
+        MIME="$2"
+    fi
+    apps="${XDG_DATA_HOME:-$HOME/.local/share}/applications"
+    # No local desktop file?
+    [ ! -f "$apps/$1" ] && return
+    MIMETYPES="`grep "^MimeType=" "$apps/$1" | cut -d= -f 2-`"
+    case "$MIMETYPES" in
+      $MIME\;*|*\;$MIME\;*|*\;$MIME\;|*\;$MIME)
+        # Already has the mime-type? Great!
+        return 0
+        ;;
+    esac
+
+    # Add the mime-type to the list
+    temp="`mktemp "$apps/$1.XXXXXX"`" || return
+    grep -v "^MimeType=" "$apps/$1" >> "$temp"
+    echo "MimeType=$MIME;$MIMETYPES" >> "$temp"
+
+    oldlines="`wc -l < "$apps/$1"`"
+    newlines="`wc -l < "$temp"`"
+    # The new file should have at least as many lines as the old.
+    if [ $oldlines -le $newlines ]; then
+        mv "$temp" "$apps/$1"
+        # This can take a little bit to get noticed.
+        sleep 4
+    else
+        rm -f "$temp"
+        return 1
+    fi
+}
+
+# }}} utility functions
+# {{{ MIME utilities
+
+xdg_mime_fixup()
+{
+    # xdg-mime may use ktradertest, which will fork off a copy of kdeinit if
+    # one does not already exist. It will exit after about 15 seconds if no
+    # further processes need it around. But since it does not close its stdout,
+    # the shell (via grep) will wait around for kdeinit to exit. If we start a
+    # copy here, that copy will be used in xdg-mime and we will avoid waiting.
+    if [ "$DE" = kde -a -z "$XDG_MIME_FIXED" ]; then
+        ktradertest text/html Application > /dev/null 2>&1
+        # Only do this once, as we only need it once.
+        XDG_MIME_FIXED=yes
+    fi
+}
+
+get_browser_mime()
+{
+    if test -z "$1" ; then
+        MIME="text/html"
+    else
+        MIME="$1"
+    fi
+    xdg_mime_fixup
+    xdg-mime query default "$MIME"
+}
+
+set_browser_mime()
+{
+    xdg_mime_fixup
+    if test -z "$2" ; then
+        MIME="text/html"
+    else
+        MIME="$2"
+    fi
+    orig="`get_browser_mime $MIME`"
+    # Fixing the local desktop file can actually change the default browser all
+    # by itself, so we fix it only after querying to find the current default.
+    fix_local_desktop_file "$1" "$MIME" || return
+    mkdir -p "${XDG_DATA_HOME:-$HOME/.local/share}/applications"
+    xdg-mime default "$1" "$MIME" || return
+    if [ x"`get_browser_mime`" != x"$1" ]; then
+        # Put back the original value
+        xdg-mime default "$orig" "$MIME"
+        exit_failure_operation_failed
+    fi
+}
+
+# }}} MIME utilities
+# {{{ KDE utilities
+
+# Reads the KDE configuration setting, compensating for a bug in some versions of kreadconfig.
+read_kde_config()
+{
+    configfile="$1"
+    configsection="$2"
+    configkey="$3"
+    application="`kreadconfig --file $configfile --group $configsection --key $configkey`"
+    if [ x"$application" != x ]; then
+        echo "$application"
+    else
+        # kreadconfig in KDE 4 may not notice Key[$*]=... localized settings, so
+        # check by hand if it didn't find anything (oddly kwriteconfig works
+        # fine though).
+        configfile_dir=`kde${KDE_SESSION_VERSION}-config --path config  | cut -d ':' -f 1`
+        configfile_path="$configfile_dir/$configfile"
+        [ ! -f "$configfile_path" ] && return
+        # This will only take the first value if there is more than one.
+        grep "^$configkey"'\[$[^]=]*\]=' "$configfile_path" | head -n 1 | cut -d= -f 2-
+    fi
+}
+
+# }}} KDE utilities
+# {{{ KDE
+
+# Resolves the KDE browser setting to a binary: if prefixed with !, simply removes it;
+# otherwise, uses desktop_file_to_binary to get the binary out of the desktop file.
+resolve_kde_browser()
+{
+    [ -z "$browser" ] && return
+    case "$browser" in
+      !*)
+        echo "${browser#!}"
+        ;;
+      *)
+        desktop_file_to_binary "$browser"
+        ;;
+    esac
+}
+
+# Does the opposite of resolve_kde_browser: if prefixed with !, tries to find a desktop
+# file corresponding to the binary, otherwise just returns the desktop file name.
+resolve_kde_browser_desktop()
+{
+    [ -z "$browser" ] && return
+    case "$browser" in
+      !*)
+        desktop="`binary_to_desktop_file "${browser#!}"`"
+        basename "$desktop"
+        ;;
+      *)
+        echo "$browser"
+        ;;
+    esac
+}
+
+read_kde_browser()
+{
+    read_kde_config kdeglobals General BrowserApplication
+}
+
+get_browser_kde()
+{
+    browser="`read_kde_browser`"
+    if [ x"$browser" = x ]; then
+        # No explicit default browser; KDE will use the MIME type text/html.
+        get_browser_mime
+    else
+        resolve_kde_browser_desktop
+    fi
+}
+
+check_browser_kde()
+{
+    check="`desktop_file_to_binary "$1"`"
+    if [ -z "$check" ]; then
+        echo no
+        exit_success
+    fi
+    browser="`read_kde_browser`"
+    binary="`resolve_kde_browser`"
+    # Because KDE will use the handler for MIME type text/html if this value
+    # is empty, we allow either the empty string or a match to $check here.
+    if [ x"$binary" != x -a x"$binary" != x"$check" ]; then
+        echo no
+        exit_success
+    fi
+    browser="`get_browser_mime`"
+    binary="`desktop_file_to_binary "$browser"`"
+    if [ x"$binary" != x"$check" ]; then
+        echo no
+        exit_success
+    fi
+    echo yes
+    exit_success
+}
+
+set_browser_kde()
+{
+    set_browser_mime "$1" || return
+    kwriteconfig --file kdeglobals --group General --key BrowserApplication "$1"
+}
+
+# }}} KDE
+# {{{ GNOME
+
+get_browser_gnome()
+{
+    binary="`gconftool-2 --get /desktop/gnome/applications/browser/exec | first_word`"
+    if [ x"$binary" = x ]; then
+        # No default browser; GNOME might use the MIME type text/html.
+        get_browser_mime
+    else
+        # gconftool gives the binary (maybe with %s etc. afterward),
+        # but we want the desktop file name, not the binary. So, we
+        # have to find the desktop file to which it corresponds.
+        desktop="`binary_to_desktop_file "$binary"`"
+        basename "$desktop"
+    fi
+}
+
+check_browser_gnome()
+{
+    check="`desktop_file_to_binary "$1"`"
+    if [ -z "$check" ]; then
+        echo no
+        exit_success
+    fi
+    binary="`gconftool-2 --get /desktop/gnome/applications/browser/exec | first_word`"
+    if [ x"$binary" != x"$check" ]; then
+        echo no
+        exit_success
+    fi
+    # Check HTTP and HTTPS, but not about: and unknown:.
+    for protocol in http https; do
+        binary="`gconftool-2 --get /desktop/gnome/url-handlers/$protocol/command | first_word`"
+        if [ x"$binary" != x"$check" ]; then
+            echo no
+            exit_success
+        fi
+    done
+    browser="`get_browser_mime`"
+    binary="`desktop_file_to_binary "$browser"`"
+    if [ x"$binary" != x"$check" ]; then
+        echo no
+        exit_success
+    fi
+    echo yes
+    exit_success
+}
+
+set_browser_gnome()
+{
+    binary="`desktop_file_to_binary "$1"`"
+    [ "$binary" ] || exit_failure_file_missing
+    set_browser_mime "$1" || return
+
+    # Set the default browser.
+    gconftool-2 --type string --set /desktop/gnome/applications/browser/exec "$binary"
+    gconftool-2 --type bool --set /desktop/gnome/applications/browser/needs_term false
+    gconftool-2 --type bool --set /desktop/gnome/applications/browser/nremote true
+    # Set the handler for HTTP and HTTPS.
+    for protocol in http https; do
+        gconftool-2 --type string --set /desktop/gnome/url-handlers/$protocol/command "$binary %s"
+        gconftool-2 --type bool --set /desktop/gnome/url-handlers/$protocol/needs_terminal false
+        gconftool-2 --type bool --set /desktop/gnome/url-handlers/$protocol/enabled true
+    done
+    # Set the handler for about: and unknown URL types.
+    for protocol in about unknown; do
+        gconftool-2 --type string --set /desktop/gnome/url-handlers/$protocol/command "$binary %s"
+    done
+}
+
+# }}} GNOME
+# {{{ GNOME 3.x
+
+get_browser_gnome3()
+{
+    get_browser_mime "x-scheme-handler/http"
+}
+
+check_browser_gnome3()
+{
+    desktop="$1"
+    check="`desktop_file_to_binary "$1"`"
+    if [ -z "$check" ]; then
+        echo no
+        exit_success
+    fi
+    # Check HTTP and HTTPS, but not about: and unknown:.
+    for protocol in http https; do
+        browser="`get_browser_mime "x-scheme-handler/$protocol"`"
+        if [ x"$browser" != x"$desktop" ]; then
+            echo no
+            exit_success
+        fi
+    done
+    echo yes
+    exit_success
+}
+
+set_browser_gnome3()
+{
+    binary="`desktop_file_to_binary "$1"`"
+    [ "$binary" ] || exit_failure_file_missing
+    set_browser_mime "$1" || return
+
+    # Set the default browser.
+    for protocol in http https about unknown; do
+        set_browser_mime "$1" "x-scheme-handler/$protocol" || return
+    done
+}
+# }}} GNOME 3.x
+# {{{ xfce
+
+get_browser_xfce()
+{
+    search="${XDG_CONFIG_HOME:-$HOME/.config}:${XDG_CONFIG_DIRS:-/etc/xdg}"
+    IFS=:
+    for dir in $search; do
+        unset IFS
+        [ "$dir" ] && [ -d "$dir/xfce4" ] || continue
+        file="$dir/xfce4/helpers.rc"
+        [ -r "$file" ] || continue
+        grep -q "^WebBrowser=" "$file" || continue
+        desktop="`grep "^WebBrowser=" "$file" | cut -d= -f 2-`"
+        echo "$desktop.desktop"
+        return
+    done
+    exit_failure_operation_failed
+}
+
+check_browser_xfce()
+{
+    browser="`get_browser_xfce`"
+    if [ x"$browser" != x"$1" ]; then
+        echo no
+        exit_success
+    fi
+    echo yes
+    exit_success
+}
+
+check_xfce_desktop_file()
+{
+    # Annoyingly, xfce wants its .desktop files in a separate directory instead
+    # of the standard locations, and requires a few custom tweaks to them:
+    # "Type" must be "X-XFCE-Helper"
+    # "X-XFCE-Category" must be "WebBrowser" (for web browsers, anyway)
+    # "X-XFCE-Commands" and "X-XFCE-CommandsWithParameter" must be set
+    search="${XDG_DATA_HOME:-$HOME/.local/share}:${XDG_DATA_DIRS:-/usr/local/share:/usr/share}"
+    IFS=:
+    for dir in $search; do
+        unset IFS
+        [ "$dir" ] && [ -d "$dir/xfce4/helpers" ] || continue
+        file="$dir/xfce4/helpers/$1"
+        # We have the file, no need to create it.
+        [ -r "$file" ] && return
+    done
+    IFS=:
+    for dir in $search; do
+        unset IFS
+        [ "$dir" ] && [ -d "$dir/applications" ] || continue
+        file="$dir/applications/$1"
+        if [ -r "$file" ]; then
+            # Found a file to convert.
+            target="${XDG_DATA_HOME:-$HOME/.local/share}/xfce4/helpers"
+            mkdir -p "$target"
+            grep -v "^Type=" "$file" > "$target/$1"
+            echo "Type=X-XFCE-Helper" >> "$target/$1"
+            echo "X-XFCE-Category=WebBrowser" >> "$target/$1"
+            # Change %F, %f, %U, and %u to "%s".
+            command="`grep -E "^Exec(\[[^]=]*])?=" "$file" | cut -d= -f 2- | sed -e 's/%[FfUu]/"%s"/g'`"
+            echo "X-XFCE-Commands=`echo "$command" | first_word`" >> "$target/$1"
+            echo "X-XFCE-CommandsWithParameter=$command" >> "$target/$1"
+            return
+        fi
+    done
+    return 1
+}
+
+set_browser_xfce()
+{
+    check_xfce_desktop_file "$1" || exit_failure_operation_failed
+
+    helper_dir="${XDG_CONFIG_HOME:-$HOME/.config}/xfce4"
+    if [ ! -d "$helper_dir" ]; then
+        mkdir -p "$helper_dir" || exit_failure_operation_failed
+    fi
+
+    helpers_rc="$helper_dir/helpers.rc"
+    # Create the file if it does not exist to avoid special cases below.
+    if [ ! -r "$helpers_rc" ]; then
+        touch "$helpers_rc" || exit_failure_operation_failed
+    fi
+
+    temp="`mktemp "$helpers_rc.XXXXXX"`" || return
+    grep -v "^WebBrowser=" "$helpers_rc" >> "$temp"
+    echo "WebBrowser=${1%.desktop}" >> "$temp"
+
+    oldlines="`wc -l < "$helpers_rc"`"
+    newlines="`wc -l < "$temp"`"
+    # The new file should have at least as many lines as the old.
+    if [ $oldlines -le $newlines ]; then
+        mv "$temp" "$helpers_rc"
+    else
+        rm -f "$temp"
+        return 1
+    fi
+}
+
+# }}} xfce
+# }}} default browser
+
+# {{{ default url scheme handler
+
+exit_unimplemented_default_handler()
+{
+    exit_failure_operation_impossible "default-url-scheme-handler not implemented for $DE"
+}
+
+# {{{ KDE
+
+# Recent versions of KDE support default scheme handler applications using the
+# mime type of x-scheme-handler/scheme. Older versions will not support this
+# but do have support for setting a default mail handler. There is also a
+# system in KDE where .protocol files can be used, however this is not
+# supported by this script. When reading a scheme handler we will use the
+# default mail handler for the mailto scheme, otherwise we will use the mime
+# type x-scheme-handler/scheme.
+
+get_url_scheme_handler_kde()
+{
+    if [ "$1" = "mailto" ]; then
+        handler="`read_kde_config emaildefaults PROFILE_Default EmailClient | first_word`"
+        echo "handler is $handler"
+        if [ x"$handler" != x ]; then
+            binary_to_desktop_file "$handler"
+        else
+            get_browser_mime "x-scheme-handler/$1"
+        fi
+    else 
+        get_browser_mime "x-scheme-handler/$1"
+    fi
+}
+
+check_url_scheme_handler_kde()
+{
+    check="`desktop_file_to_binary "$2"`"
+    if [ -z "$check" ]; then
+        echo no
+        exit_success
+    fi
+    if [ x"$1" = "mailto" ]; then
+        binary="`read_kde_config emaildefaults PROFILE_Default EmailClient`"
+        if [ x"$binary" != x"$check" ]; then
+            echo no
+            exit_success
+        fi
+    fi
+    handler="`get_browser_mime x-scheme-handler/$1`"
+    binary="`desktop_file_to_binary "$handler"`"
+    if [ x"$binary" != x"$check" ]; then
+        echo no
+        exit_success
+    fi
+    echo yes
+    exit_success
+}
+
+set_url_scheme_handler_kde()
+{
+    set_browser_mime "$2" "x-scheme-handler/$1" || return
+    if [ "$1" = "mailto" ]; then
+        binary="`desktop_file_to_binary "$2"`"
+        kwriteconfig --file emaildefaults --group PROFILE_Default --key EmailClient "$binary"
+    fi
+}
+
+# }}} KDE
+# {{{ GNOME
+
+get_url_scheme_handler_gnome()
+{
+    binary="`gconftool-2 --get /desktop/gnome/url-handlers/$1/command | first_word`"
+    if [ x"$binary" != x"" ]; then
+        # gconftool gives the binary (maybe with %s etc. afterward),
+        # but we want the desktop file name, not the binary. So, we
+        # have to find the desktop file to which it corresponds.
+        desktop="`binary_to_desktop_file "$binary"`"
+        basename "$desktop"
+    fi
+}
+
+check_url_scheme_handler_gnome()
+{
+    check="`desktop_file_to_binary "$2"`"
+    if [ -z "$check" ]; then
+        echo no
+        exit_success
+    fi
+    binary="`gconftool-2 --get /desktop/gnome/url-handlers/$1/command | first_word`"
+    if [ x"$binary" != x"$check" ]; then
+        echo no
+        exit_success
+    fi
+    echo yes
+    exit_success
+}
+
+set_url_scheme_handler_gnome()
+{
+    binary="`desktop_file_to_binary "$2"`"
+    [ "$binary" ] || exit_failure_file_missing
+
+    gconftool-2 --type string --set /desktop/gnome/url-handlers/$1/command "$binary %s"
+    gconftool-2 --type bool --set /desktop/gnome/url-handlers/$1/needs_terminal false
+    gconftool-2 --type bool --set /desktop/gnome/url-handlers/$1/enabled true
+}
+
+# }}} GNOME
+# {{{ GNOME 3.x
+
+get_url_scheme_handler_gnome3()
+{
+    get_browser_mime "x-scheme-handler/$1"
+}
+
+check_url_scheme_handler_gnome3()
+{
+    desktop="$2"
+    check="`desktop_file_to_binary "$2"`"
+    if [ -z "$check" ]; then
+        echo no
+        exit_success
+    fi
+    browser="`get_browser_mime "x-scheme-handler/$1"`"
+    if [ x"$browser" != x"$desktop" ]; then
+        echo no
+        exit_success
+    fi
+    echo yes
+    exit_success
+}
+
+set_url_scheme_handler_gnome3()
+{
+    binary="`desktop_file_to_binary "$2"`"
+    [ "$binary" ] || exit_failure_file_missing
+    set_browser_mime "$2" || return
+
+    # Set the default browser.
+    set_browser_mime "$2" "x-scheme-handler/$1" || return
+}
+
+# }}} GNOME 3.x
+# {{{ xfce
+
+get_url_scheme_handler_xfce()
+{
+    exit_unimplemented_default_handler "$1"
+}
+
+check_url_scheme_handler_xfce()
+{
+    exit_unimplemented_default_handler "$1"
+}
+
+set_url_scheme_handler_xfce()
+{
+    exit_unimplemented_default_handler "$1"
+}
+
+# }}} xfce
+# }}} default protocol handler
+
+dispatch_specific()
+{
+    # The PROP comments in this function are used to generate the output of
+    # the --list option. The formatting is important. Make sure to line up the
+    # property descriptions with spaces so that it will look nice.
+    if [ x"$op" = x"get" ]; then
+        case "$parm" in
+          default-web-browser) # PROP:           Default web browser
+            get_browser_$DE
+            ;;
+
+          default-url-scheme-handler) # PROP:    Default handler for URL scheme
+            get_url_scheme_handler_$DE "$1"
+            ;;
+
+          *)
+            exit_failure_syntax
+            ;;
+        esac
+    elif [ x"$op" = x"check" ]; then
+        case "$parm" in
+          default-web-browser)
+            check_desktop_filename "$1"
+            check_browser_$DE "$1"
+            ;;
+
+          default-url-scheme-handler)
+            check_desktop_filename "$2"
+            check_url_scheme_handler_$DE "$1" "$2"
+            ;;
+
+          *)
+            exit_failure_syntax
+            ;;
+        esac
+    else # set
+        case "$parm" in
+          default-web-browser)
+	    [ $# -eq 1 ] || exit_failure_syntax "unexpected/missing argument"
+            check_desktop_filename "$1"
+            set_browser_$DE "$1"
+            ;;
+
+          default-url-scheme-handler)
+	    [ $# -eq 2 ] || exit_failure_syntax "unexpected/missing argument"
+            check_desktop_filename "$2"
+            set_url_scheme_handler_$DE "$1" "$2"
+            ;;
+
+          *)
+            exit_failure_syntax
+            ;;
+        esac
+    fi
+
+    if [ $? -eq 0 ]; then
+        exit_success
+    else
+        exit_failure_operation_failed
+    fi
+}
+
+dispatch_generic()
+{
+    # We only know how to get or check the default web browser.
+    [ x"$op" != x"get" -a x"$op" != x"check" ] && exit_failure_operation_impossible
+    [ x"$parm" != x"default-web-browser" ] && exit_failure_operation_impossible
+
+    # First look in $BROWSER
+    if [ x"$BROWSER" != x ]; then
+        binary="`which "${BROWSER%%:*}"`"
+    else
+        # Debian and Ubuntu (and others?) have x-www-browser.
+        binary="`which x-www-browser`"
+    fi
+
+    [ "$binary" ] || exit_failure_operation_failed
+
+    binary="`readlink -f "$binary"`"
+
+    [ "$binary" ] || exit_failure_operation_failed
+
+    if [ x"$op" = x"get" ]; then
+        desktop="`binary_to_desktop_file "$binary"`"
+        basename "$desktop"
+    else
+        # $op = "check"
+        check="`desktop_file_to_binary "$1"`"
+        if [ -z "$check" ]; then
+            echo no
+            exit_success
+        fi
+        if [ x"$binary" != x"$check" ]; then
+            echo no
+            exit_success
+        fi
+        echo yes
+    fi
+    exit_success
+}
+
+if [ x"$1" = x"--list" ]; then
+    echo "Known properties:"
+    # Extract the property names from dispatch_specific() above.
+    grep "^[ 	]*[^)]*) # PROP:" "$0" | sed -e 's/^[ 	]*\([^)]*\)) # PROP: \(.*\)$/  \1 \2/' | sort
+    exit_success
+fi
+
+[ x"$1" != x ] || exit_failure_syntax "no operation given"
+[ x"$2" != x ] || exit_failure_syntax "no parameter name given"
+[ x"$1" = x"get" -o x"$3" != x ] || exit_failure_syntax "no parameter value given"
+
+op="$1"
+parm="$2"
+shift 2
+
+if [ x"$op" != x"get" -a x"$op" != x"check" -a x"$op" != x"set" ]; then
+  exit_failure_syntax "invalid operation"
+fi
+
+detectDE
+
+case "$DE" in
+    kde|gnome*|xfce)
+    dispatch_specific "$@"
+    ;;
+
+    generic)
+    dispatch_generic "$@"
+    ;;
+
+    *)
+    exit_failure_operation_impossible "unknown desktop environment"
+    ;;
+esac
diff -Naur orig/scripts/xdg-su git/scripts/xdg-su
--- orig/scripts/xdg-su	1970-01-01 01:00:00.000000000 +0100
+++ git/scripts/xdg-su	2013-08-06 05:04:22.641970799 +0200
@@ -0,0 +1,438 @@
+#!/bin/sh
+#---------------------------------------------
+#   xdg-su
+#
+#   Utility script to run a command as an alternate user, generally
+#       the root user, with a graphical prompt for the root
+#       password if needed
+#
+#   Refer to the usage() function below for usage.
+#
+#   Copyright 2006, Jeremy White <jwhite@codeweavers.com>
+#   Copyright 2006, Kevin Krammer <kevin.krammer@gmx.at>
+#
+#   LICENSE:
+#
+#   Permission is hereby granted, free of charge, to any person obtaining a
+#   copy of this software and associated documentation files (the "Software"),
+#   to deal in the Software without restriction, including without limitation
+#   the rights to use, copy, modify, merge, publish, distribute, sublicense,
+#   and/or sell copies of the Software, and to permit persons to whom the
+#   Software is furnished to do so, subject to the following conditions:
+#
+#   The above copyright notice and this permission notice shall be included
+#   in all copies or substantial portions of the Software.
+#
+#   THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS
+#   OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
+#   FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL
+#   THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR
+#   OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE,
+#   ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR
+#   OTHER DEALINGS IN THE SOFTWARE.
+#
+#---------------------------------------------
+
+manualpage()
+{
+cat << _MANUALPAGE
+Name
+
+xdg-su - run a GUI program as root after prompting for the root password
+
+Synopsis
+
+xdg-su [-u user] -c command
+
+xdg-su { --help | --manual | --version }
+
+Description
+
+xdg-su provides a graphical dialog that prompts the user for a password to run
+command as user or as root if no user was specified.
+
+xdg-su is for use inside a desktop session only.
+
+xdg-su discards any stdout and stderr output from command.
+
+Options
+
+-u user
+    run command as user. The default is to run as root.
+--help
+    Show command synopsis.
+--manual
+    Show this manualpage.
+--version
+    Show the xdg-utils version information.
+
+Exit Codes
+
+An exit code of 0 indicates success while a non-zero exit code indicates
+failure. The following failure codes can be returned:
+
+1
+    Error in command line syntax.
+2
+    One of the files passed on the command line did not exist.
+3
+    A required tool could not be found.
+4
+    The action failed.
+
+See Also
+
+su(1)
+
+Examples
+
+xdg-su -u root -c "/opt/shinythings/bin/install-GUI --install fast"
+
+Runs the /opt/shinythings/bin/install-GUI command with root permissions.
+
+_MANUALPAGE
+}
+
+usage()
+{
+cat << _USAGE
+xdg-su - run a GUI program as root after prompting for the root password
+
+Synopsis
+
+xdg-su [-u user] -c command
+
+xdg-su { --help | --manual | --version }
+
+_USAGE
+}
+
+#@xdg-utils-common@
+
+#----------------------------------------------------------------------------
+#   Common utility functions included in all XDG wrapper scripts
+#----------------------------------------------------------------------------
+
+DEBUG()
+{
+  [ ${XDG_UTILS_DEBUG_LEVEL-0} -lt $1 ] && return 0;
+  shift
+  echo "$@" >&2
+}
+
+#-------------------------------------------------------------
+# Exit script on successfully completing the desired operation
+
+exit_success()
+{
+    if [ $# -gt 0 ]; then
+        echo "$@"
+        echo
+    fi
+
+    exit 0
+}
+
+
+#-----------------------------------------
+# Exit script on malformed arguments, not enough arguments
+# or missing required option.
+# prints usage information
+
+exit_failure_syntax()
+{
+    if [ $# -gt 0 ]; then
+        echo "xdg-su: $@" >&2
+        echo "Try 'xdg-su --help' for more information." >&2
+    else
+        usage
+        echo "Use 'man xdg-su' or 'xdg-su --manual' for additional info."
+    fi
+
+    exit 1
+}
+
+#-------------------------------------------------------------
+# Exit script on missing file specified on command line
+
+exit_failure_file_missing()
+{
+    if [ $# -gt 0 ]; then
+        echo "xdg-su: $@" >&2
+    fi
+
+    exit 2
+}
+
+#-------------------------------------------------------------
+# Exit script on failure to locate necessary tool applications
+
+exit_failure_operation_impossible()
+{
+    if [ $# -gt 0 ]; then
+        echo "xdg-su: $@" >&2
+    fi
+
+    exit 3
+}
+
+#-------------------------------------------------------------
+# Exit script on failure returned by a tool application
+
+exit_failure_operation_failed()
+{
+    if [ $# -gt 0 ]; then
+        echo "xdg-su: $@" >&2
+    fi
+
+    exit 4
+}
+
+#------------------------------------------------------------
+# Exit script on insufficient permission to read a specified file
+
+exit_failure_file_permission_read()
+{
+    if [ $# -gt 0 ]; then
+        echo "xdg-su: $@" >&2
+    fi
+
+    exit 5
+}
+
+#------------------------------------------------------------
+# Exit script on insufficient permission to read a specified file
+
+exit_failure_file_permission_write()
+{
+    if [ $# -gt 0 ]; then
+        echo "xdg-su: $@" >&2
+    fi
+
+    exit 6
+}
+
+check_input_file()
+{
+    if [ ! -e "$1" ]; then
+        exit_failure_file_missing "file '$1' does not exist"
+    fi
+    if [ ! -r "$1" ]; then
+        exit_failure_file_permission_read "no permission to read file '$1'"
+    fi
+}
+
+check_vendor_prefix()
+{
+    file=`basename "$1"`
+    case "$file" in
+       [a-zA-Z]*-*)
+         return
+         ;;
+    esac
+
+    echo "xdg-su: filename '$file' does not have a proper vendor prefix" >&2
+    echo 'A vendor prefix consists of alpha characters ([a-zA-Z]) and is terminated' >&2
+    echo 'with a dash ("-"). An example filename is '"'example-$file'" >&2
+    echo "Use --novendor to override or 'xdg-su --manual' for additional info." >&2
+    exit 1
+}
+
+check_output_file()
+{
+    # if the file exists, check if it is writeable
+    # if it does not exists, check if we are allowed to write on the directory
+    if [ -e "$1" ]; then
+        if [ ! -w "$1" ]; then
+            exit_failure_file_permission_write "no permission to write to file '$1'"
+        fi
+    else
+        DIR=`dirname "$1"`
+        if [ ! -w "$DIR" -o ! -x "$DIR" ]; then
+            exit_failure_file_permission_write "no permission to create file '$1'"
+        fi
+    fi
+}
+
+#----------------------------------------
+# Checks for shared commands, e.g. --help
+
+check_common_commands()
+{
+    while [ $# -gt 0 ] ; do
+        parm="$1"
+        shift
+
+        case "$parm" in
+            --help)
+            usage
+            echo "Use 'man xdg-su' or 'xdg-su --manual' for additional info."
+            exit_success
+            ;;
+
+            --manual)
+            manualpage
+            exit_success
+            ;;
+
+            --version)
+            echo "xdg-su 1.0beta2"
+            exit_success
+            ;;
+        esac
+    done
+}
+
+check_common_commands "$@"
+if [ ${XDG_UTILS_DEBUG_LEVEL-0} -lt 1 ]; then
+    # Be silent
+    xdg_redirect_output=" > /dev/null 2> /dev/null"
+else
+    # All output to stderr
+    xdg_redirect_output=" >&2"
+fi
+
+#--------------------------------------
+# Checks for known desktop environments
+# set variable DE to the desktop environments name, lowercase
+
+detectDE()
+{
+    if [ x"$KDE_FULL_SESSION" = x"true" ]; then DE=kde;
+    elif [ x"$GNOME_DESKTOP_SESSION_ID" != x"" ]; then DE=gnome;
+    elif xprop -root _DT_SAVE_MODE | grep ' = \"xfce4\"$' >/dev/null 2>&1; then DE=xfce;
+    fi
+}
+
+#----------------------------------------------------------------------------
+
+
+
+su_kde()
+{
+    if [ x"$KDE_SESSION_VERSION" = x"4" ]; then
+        KDESU=`kde4-config --locate kdesu --path exe 2>/dev/null`
+    else
+        KDESU=`which kdesu 2>/dev/null`
+    fi
+    if [ $? -eq 0 ] ; then
+        if [ -z "$user" ] ; then
+             $KDESU -c "$cmd"
+        else
+             $KDESU -u "$user" -c "$cmd"
+        fi
+
+        if [ $? -eq 0 ]; then
+            exit_success
+        else
+            exit_failure_operation_failed
+        fi
+    else
+        su_generic
+    fi
+}
+
+su_gnome()
+{
+    GSU=`which gnomesu 2>/dev/null`
+    if [ $? -ne 0 ] ; then
+        GSU=`which xsu 2>/dev/null`
+    fi
+    if [ $? -eq 0 ] ; then
+        if [ -z "$user" ] ; then
+            $GSU -c "$cmd"
+        else
+            $GSU -u "$user" -c "$cmd"
+        fi
+
+        if [ $? -eq 0 ]; then
+            exit_success
+        else
+            exit_failure_operation_failed
+        fi
+    else
+        su_generic
+    fi
+}
+
+su_generic()
+{
+    if [ -z "$user" ] ; then
+        xterm -geom 60x5 -T "xdg-su: $cmd" -e su -c "$cmd"
+    else
+        xterm -geom 60x5 -T "xdg-su: $cmd" -e su -c "$cmd" "$user"
+    fi
+
+    if [ $? -eq 0 ]; then
+        exit_success
+    else
+        exit_failure_operation_failed
+    fi
+}
+
+[ x"$1" != x"" ] || exit_failure_syntax
+
+user=
+cmd=
+while [ $# -gt 0 ] ; do
+    parm="$1"
+    shift
+
+    case "$parm" in
+      -u)
+        if [ -z "$1" ] ; then
+            exit_failure_syntax "user argument missing for -u"
+        fi
+        user="$1"
+        shift
+        ;;
+
+      -c)
+        if [ -z "$1" ] ; then
+            exit_failure_syntax "command argument missing for -c"
+        fi
+        cmd="$1"
+        shift
+        ;;
+
+      -*)
+        exit_failure_syntax "unexpected option '$parm'"
+        ;;
+
+      *)
+        exit_failure_syntax "unexpected argument '$parm'"
+        ;;
+    esac
+done
+
+if [ -z "${cmd}" ] ; then
+    exit_failure_syntax "command missing"
+fi
+
+detectDE
+
+if [ x"$DE" = x"" ]; then
+    XSU=`which xsu 2>/dev/null`
+    if [ $? -eq 0 ] ; then
+        DE=generic
+    fi
+fi
+
+case "$DE" in
+    kde)
+    su_kde
+    ;;
+
+    gnome)
+    su_gnome
+    ;;
+
+    generic)
+    su_generic
+    ;;
+
+    *)
+    [ x"$user" = x"" ] && user=root 
+    exit_failure_operation_impossible "no graphical method available for invoking '$cmd' as '$user'"
+    ;;
+esac
diff -Naur orig/scripts/xdg-su.in git/scripts/xdg-su.in
--- orig/scripts/xdg-su.in	1970-01-01 01:00:00.000000000 +0100
+++ git/scripts/xdg-su.in	2013-08-06 05:04:22.641970799 +0200
@@ -0,0 +1,174 @@
+#!/bin/sh
+#---------------------------------------------
+#   xdg-su
+#
+#   Utility script to run a command as an alternate user, generally
+#       the root user, with a graphical prompt for the root
+#       password if needed
+#
+#   Refer to the usage() function below for usage.
+#
+#   Copyright 2009-2010, Fathi Boudra <fabo@freedesktop.org>
+#   Copyright 2009-2010, Rex Dieter <rdieter@fedoraproject.org>
+#   Copyright 2006, Jeremy White <jwhite@codeweavers.com>
+#   Copyright 2006, Kevin Krammer <kevin.krammer@gmx.at>
+#
+#   LICENSE:
+#
+#---------------------------------------------
+
+manualpage()
+{
+cat << _MANUALPAGE
+_MANUALPAGE
+}
+
+usage()
+{
+cat << _USAGE
+_USAGE
+}
+
+#@xdg-utils-common@
+
+su_kde()
+{
+    if [ x"$KDE_SESSION_VERSION" = x"4" ]; then
+        KDESU=`kde4-config --locate kdesu --path exe 2>/dev/null`
+    else
+        KDESU=`which kdesu 2>/dev/null`
+    fi
+    if [ $? -eq 0 ] ; then
+        if [ -z "$user" ] ; then
+             $KDESU -c "$cmd"
+        else
+             $KDESU -u "$user" -c "$cmd"
+        fi
+
+        if [ $? -eq 0 ]; then
+            exit_success
+        else
+            exit_failure_operation_failed
+        fi
+    else
+        su_generic
+    fi
+}
+
+su_gnome()
+{
+    GSU=`which gnomesu 2>/dev/null`
+    if [ $? -ne 0 ] ; then
+        GSU=`which xsu 2>/dev/null`
+    fi
+    if [ $? -eq 0 ] ; then
+        if [ -z "$user" ] ; then
+            $GSU -c "$cmd"
+        else
+            $GSU -u "$user" -c "$cmd"
+        fi
+
+        if [ $? -eq 0 ]; then
+            exit_success
+        else
+            exit_failure_operation_failed
+        fi
+    else
+        su_generic
+    fi
+}
+
+su_generic()
+{
+    if [ -z "$user" ] ; then
+        xterm -geom 60x5 -T "xdg-su: $cmd" -e su -c "$cmd"
+    else
+        xterm -geom 60x5 -T "xdg-su: $cmd" -e su -c "$cmd" "$user"
+    fi
+
+    if [ $? -eq 0 ]; then
+        exit_success
+    else
+        exit_failure_operation_failed
+    fi
+}
+
+su_xfce()
+{
+    if which gnomesu &>/dev/null ; then
+        su_gnome
+    else
+        su_generic
+    fi
+}
+
+[ x"$1" != x"" ] || exit_failure_syntax
+
+user=
+cmd=
+while [ $# -gt 0 ] ; do
+    parm="$1"
+    shift
+
+    case "$parm" in
+      -u)
+        if [ -z "$1" ] ; then
+            exit_failure_syntax "user argument missing for -u"
+        fi
+        user="$1"
+        shift
+        ;;
+
+      -c)
+        if [ -z "$1" ] ; then
+            exit_failure_syntax "command argument missing for -c"
+        fi
+        cmd="$1"
+        shift
+        ;;
+
+      -*)
+        exit_failure_syntax "unexpected option '$parm'"
+        ;;
+
+      *)
+        exit_failure_syntax "unexpected argument '$parm'"
+        ;;
+    esac
+done
+
+if [ -z "${cmd}" ] ; then
+    exit_failure_syntax "command missing"
+fi
+
+detectDE
+
+if [ x"$DE" = x"" ]; then
+    XSU=`which xterm 2>/dev/null`
+    if [ $? -eq 0 ] ; then
+        DE=generic
+    fi
+fi
+
+case "$DE" in
+    kde)
+    su_kde
+    ;;
+
+    gnome*|lxde|mate)
+    su_gnome
+    ;;
+
+    generic)
+    su_generic
+    ;;
+
+    xfce)
+    su_xfce
+    ;;
+
+    *)
+    [ x"$user" = x"" ] && user=root
+    exit_failure_operation_impossible "no graphical method available for invoking '$cmd' as '$user'"
+    ;;
+esac
diff -Naur orig/scripts/xdg-terminal git/scripts/xdg-terminal
--- orig/scripts/xdg-terminal	1970-01-01 01:00:00.000000000 +0100
+++ git/scripts/xdg-terminal	2013-08-06 05:04:22.641970799 +0200
@@ -0,0 +1,484 @@
+#!/bin/sh
+#---------------------------------------------
+#   xdg-terminal
+#
+#   Utility script to open the registered terminal emulator
+#
+#   Refer to the usage() function below for usage.
+#
+#   Copyright 2009-2010, Fathi Boudra <fabo@freedesktop.org>
+#   Copyright 2009-2010, Rex Dieter <rdieter@fedoraproject.org>
+#   Copyright 2006, Kevin Krammer <kevin.krammer@gmx.at>
+#
+#   LICENSE:
+#
+#   Permission is hereby granted, free of charge, to any person obtaining a
+#   copy of this software and associated documentation files (the "Software"),
+#   to deal in the Software without restriction, including without limitation
+#   the rights to use, copy, modify, merge, publish, distribute, sublicense,
+#   and/or sell copies of the Software, and to permit persons to whom the
+#   Software is furnished to do so, subject to the following conditions:
+#
+#   The above copyright notice and this permission notice shall be included
+#   in all copies or substantial portions of the Software.
+#
+#   THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS
+#   OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
+#   FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL
+#   THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR
+#   OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE,
+#   ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR
+#   OTHER DEALINGS IN THE SOFTWARE.
+#
+#---------------------------------------------
+
+manualpage()
+{
+cat << _MANUALPAGE
+Name
+
+xdg-terminal - opens the user's preferred terminal emulator application
+
+Synopsis
+
+xdg-terminal [command]
+
+xdg-terminal { --help | --manual | --version }
+
+Description
+
+xdg-terminal opens the user's preferred terminal emulator application. If a
+command is provided the command will be executed by the shell within the newly
+opened terminal window.
+
+xdg-terminal is for use inside a desktop session only. It is not recommended to
+use xdg-terminal as root.
+
+Options
+
+--help
+    Show command synopsis.
+--manual
+    Show this manualpage.
+--version
+    Show the xdg-utils version information.
+
+Exit Codes
+
+An exit code of 0 indicates success while a non-zero exit code indicates
+failure. The following failure codes can be returned:
+
+1
+    Error in command line syntax.
+3
+    A required tool could not be found.
+4
+    The action failed.
+
+Examples
+
+xdg-terminal
+
+Opens the user's default terminal emulator, just starting an interactive shell.
+
+xdg-terminal top
+
+Opens the user's default terminal emulator and lets it run the top executable.
+
+_MANUALPAGE
+}
+
+usage()
+{
+cat << _USAGE
+xdg-terminal - opens the user's preferred terminal emulator application
+
+Synopsis
+
+xdg-terminal [command]
+
+xdg-terminal { --help | --manual | --version }
+
+_USAGE
+}
+
+#@xdg-utils-common@
+
+#----------------------------------------------------------------------------
+#   Common utility functions included in all XDG wrapper scripts
+#----------------------------------------------------------------------------
+
+DEBUG()
+{
+  [ -z "${XDG_UTILS_DEBUG_LEVEL}" ] && return 0;
+  [ ${XDG_UTILS_DEBUG_LEVEL} -lt $1 ] && return 0;
+  shift
+  echo "$@" >&2
+}
+
+#-------------------------------------------------------------
+# Exit script on successfully completing the desired operation
+
+exit_success()
+{
+    if [ $# -gt 0 ]; then
+        echo "$@"
+        echo
+    fi
+
+    exit 0
+}
+
+
+#-----------------------------------------
+# Exit script on malformed arguments, not enough arguments
+# or missing required option.
+# prints usage information
+
+exit_failure_syntax()
+{
+    if [ $# -gt 0 ]; then
+        echo "xdg-terminal: $@" >&2
+        echo "Try 'xdg-terminal --help' for more information." >&2
+    else
+        usage
+        echo "Use 'man xdg-terminal' or 'xdg-terminal --manual' for additional info."
+    fi
+
+    exit 1
+}
+
+#-------------------------------------------------------------
+# Exit script on missing file specified on command line
+
+exit_failure_file_missing()
+{
+    if [ $# -gt 0 ]; then
+        echo "xdg-terminal: $@" >&2
+    fi
+
+    exit 2
+}
+
+#-------------------------------------------------------------
+# Exit script on failure to locate necessary tool applications
+
+exit_failure_operation_impossible()
+{
+    if [ $# -gt 0 ]; then
+        echo "xdg-terminal: $@" >&2
+    fi
+
+    exit 3
+}
+
+#-------------------------------------------------------------
+# Exit script on failure returned by a tool application
+
+exit_failure_operation_failed()
+{
+    if [ $# -gt 0 ]; then
+        echo "xdg-terminal: $@" >&2
+    fi
+
+    exit 4
+}
+
+#------------------------------------------------------------
+# Exit script on insufficient permission to read a specified file
+
+exit_failure_file_permission_read()
+{
+    if [ $# -gt 0 ]; then
+        echo "xdg-terminal: $@" >&2
+    fi
+
+    exit 5
+}
+
+#------------------------------------------------------------
+# Exit script on insufficient permission to write a specified file
+
+exit_failure_file_permission_write()
+{
+    if [ $# -gt 0 ]; then
+        echo "xdg-terminal: $@" >&2
+    fi
+
+    exit 6
+}
+
+check_input_file()
+{
+    if [ ! -e "$1" ]; then
+        exit_failure_file_missing "file '$1' does not exist"
+    fi
+    if [ ! -r "$1" ]; then
+        exit_failure_file_permission_read "no permission to read file '$1'"
+    fi
+}
+
+check_vendor_prefix()
+{
+    file_label="$2"
+    [ -n "$file_label" ] || file_label="filename"
+    file=`basename "$1"`
+    case "$file" in
+       [a-zA-Z]*-*)
+         return
+         ;;
+    esac
+
+    echo "xdg-terminal: $file_label '$file' does not have a proper vendor prefix" >&2
+    echo 'A vendor prefix consists of alpha characters ([a-zA-Z]) and is terminated' >&2
+    echo 'with a dash ("-"). An example '"$file_label"' is '"'example-$file'" >&2
+    echo "Use --novendor to override or 'xdg-terminal --manual' for additional info." >&2
+    exit 1
+}
+
+check_output_file()
+{
+    # if the file exists, check if it is writeable
+    # if it does not exists, check if we are allowed to write on the directory
+    if [ -e "$1" ]; then
+        if [ ! -w "$1" ]; then
+            exit_failure_file_permission_write "no permission to write to file '$1'"
+        fi
+    else
+        DIR=`dirname "$1"`
+        if [ ! -w "$DIR" -o ! -x "$DIR" ]; then
+            exit_failure_file_permission_write "no permission to create file '$1'"
+        fi
+    fi
+}
+
+#----------------------------------------
+# Checks for shared commands, e.g. --help
+
+check_common_commands()
+{
+    while [ $# -gt 0 ] ; do
+        parm="$1"
+        shift
+
+        case "$parm" in
+            --help)
+            usage
+            echo "Use 'man xdg-terminal' or 'xdg-terminal --manual' for additional info."
+            exit_success
+            ;;
+
+            --manual)
+            manualpage
+            exit_success
+            ;;
+
+            --version)
+            echo "xdg-terminal 1.0.2"
+            exit_success
+            ;;
+        esac
+    done
+}
+
+check_common_commands "$@"
+
+[ -z "${XDG_UTILS_DEBUG_LEVEL}" ] && unset XDG_UTILS_DEBUG_LEVEL;
+if [ ${XDG_UTILS_DEBUG_LEVEL-0} -lt 1 ]; then
+    # Be silent
+    xdg_redirect_output=" > /dev/null 2> /dev/null"
+else
+    # All output to stderr
+    xdg_redirect_output=" >&2"
+fi
+
+#--------------------------------------
+# Checks for known desktop environments
+# set variable DE to the desktop environments name, lowercase
+
+detectDE()
+{
+    if [ x"$KDE_FULL_SESSION" = x"true" ]; then DE=kde;
+    elif [ x"$GNOME_DESKTOP_SESSION_ID" != x"" ]; then DE=gnome;
+    elif `dbus-send --print-reply --dest=org.freedesktop.DBus /org/freedesktop/DBus org.freedesktop.DBus.GetNameOwner string:org.gnome.SessionManager > /dev/null 2>&1` ; then DE=gnome;
+    elif xprop -root _DT_SAVE_MODE 2> /dev/null | grep ' = \"xfce4\"$' >/dev/null 2>&1; then DE=xfce;
+    elif [ x"$DESKTOP_SESSION" == x"LXDE" ]; then DE=lxde;
+    else DE=""
+    fi
+}
+
+#----------------------------------------------------------------------------
+# kfmclient exec/openURL can give bogus exit value in KDE <= 3.5.4
+# It also always returns 1 in KDE 3.4 and earlier
+# Simply return 0 in such case
+
+kfmclient_fix_exit_code()
+{
+    version=`kde${KDE_SESSION_VERSION}-config --version 2>/dev/null | grep '^KDE'`
+    major=`echo $version | sed 's/KDE.*: \([0-9]\).*/\1/'`
+    minor=`echo $version | sed 's/KDE.*: [0-9]*\.\([0-9]\).*/\1/'`
+    release=`echo $version | sed 's/KDE.*: [0-9]*\.[0-9]*\.\([0-9]\).*/\1/'`
+    test "$major" -gt 3 && return $1
+    test "$minor" -gt 5 && return $1
+    test "$release" -gt 4 && return $1
+    return 0
+}
+
+terminal_kde()
+{
+    terminal=`kreadconfig --file kdeglobals --group General --key TerminalApplication --default konsole`
+
+    terminal_exec=`which $terminal 2>/dev/null`
+
+    if [ -x "$terminal_exec" ]; then
+        if [ x"$1" == x"" ]; then
+            $terminal_exec
+        else
+            $terminal_exec -e "$1"
+        fi
+
+        if [ $? -eq 0 ]; then
+            exit_success
+        else
+            exit_failure_operation_failed
+        fi
+    else
+        exit_failure_operation_impossible "configured terminal program '$terminal' not found or not executable"
+    fi
+}
+
+terminal_gnome()
+{
+    term_exec_key="/desktop/gnome/applications/terminal/exec"
+    term_exec_arg_key="/desktop/gnome/applications/terminal/exec_arg"
+
+    term_exec=`gconftool-2 --get ${term_exec_key}`
+    term_exec_arg=`gconftool-2 --get ${term_exec_arg_key}`
+
+    terminal_exec=`which $term_exec 2>/dev/null`
+
+    if [ -x "$terminal_exec" ]; then
+        if [ x"$1" == x"" ]; then
+            $terminal_exec
+        else
+            if [ x"$term_exec_arg" == x"" ]; then
+                $terminal_exec "$1"
+            else
+                $terminal_exec "$term_exec_arg" "$1"
+            fi
+        fi
+
+        if [ $? -eq 0 ]; then
+            exit_success
+        else
+            exit_failure_operation_failed
+        fi
+    else
+        exit_failure_operation_impossible "configured terminal program '$term_exec' not found or not executable"
+    fi
+}
+
+terminal_xfce()
+{
+    if [ x"$1" == x"" ]; then
+        exo-open --launch TerminalEmulator
+    else
+        exo-open --launch TerminalEmulator "$1"
+    fi
+
+    if [ $? -eq 0 ]; then
+        exit_success
+    else
+        exit_failure_operation_failed
+    fi
+}
+
+terminal_generic()
+{
+    # if $TERM is not set, try xterm
+    if [ x"$TERM" == x"" ]; then
+        TERM=xterm
+    fi
+
+    terminal_exec=`which $TERM >/dev/null 2>/dev/null`
+
+    if [ -x "$terminal_exec" ]; then
+        if [ $? -eq 0 ]; then
+            exit_success
+        else
+            exit_failure_operation_failed
+        fi
+    else
+        exit_failure_operation_impossible "configured terminal program '$TERM' not found or not executable"
+    fi
+}
+
+terminal_lxde()
+{
+    if which lxterminal &>/dev/null; then
+        if [ x"$1" == x"" ]; then
+            lxterminal
+        else
+            lxterminal -e "$1"
+        fi
+    else
+        terminal_generic "$1"
+    fi
+}
+
+#[ x"$1" != x"" ] || exit_failure_syntax
+
+command=
+while [ $# -gt 0 ] ; do
+    parm="$1"
+    shift
+
+    case "$parm" in
+      -*)
+        exit_failure_syntax "unexpected option '$parm'"
+        ;;
+
+      *)
+        if [ -n "$command" ] ; then
+            exit_failure_syntax "unexpected argument '$parm'"
+        fi
+        command="$parm"
+        ;;
+    esac
+done
+
+detectDE
+
+if [ x"$DE" = x"" ]; then
+    # if TERM variable is not set, try xterm
+    if [ x"$TERM" = x"" ]; then
+        TERM=xterm
+    fi
+    DE=generic
+fi
+
+case "$DE" in
+    kde)
+    terminal_kde "$command"
+    ;;
+
+    gnome)
+    terminal_gnome "$command"
+    ;;
+
+    xfce)
+    terminal_xfce "$command"
+    ;;
+
+    lxde)
+    terminal_lxde "$command"
+    ;;
+
+    generic)
+    terminal_generic "$command"
+    ;;
+
+    *)
+    exit_failure_operation_impossible "no terminal emulator available"
+    ;;
+esac
diff -Naur orig/scripts/xdg-terminal.in git/scripts/xdg-terminal.in
--- orig/scripts/xdg-terminal.in	1970-01-01 01:00:00.000000000 +0100
+++ git/scripts/xdg-terminal.in	2013-08-06 05:04:22.641970799 +0200
@@ -0,0 +1,200 @@
+#!/bin/sh
+#---------------------------------------------
+#   xdg-terminal
+#
+#   Utility script to open the registered terminal emulator
+#
+#   Refer to the usage() function below for usage.
+#
+#   Copyright 2009-2010, Fathi Boudra <fabo@freedesktop.org>
+#   Copyright 2009-2010, Rex Dieter <rdieter@fedoraproject.org>
+#   Copyright 2006, Kevin Krammer <kevin.krammer@gmx.at>
+#
+#   LICENSE:
+#
+#---------------------------------------------
+
+manualpage()
+{
+cat << _MANUALPAGE
+_MANUALPAGE
+}
+
+usage()
+{
+cat << _USAGE
+_USAGE
+}
+
+#@xdg-utils-common@
+
+terminal_kde()
+{
+    terminal=`kreadconfig --file kdeglobals --group General --key TerminalApplication --default konsole`
+
+    terminal_exec=`which $terminal 2>/dev/null`
+
+    if [ -x "$terminal_exec" ]; then
+        if [ x"$1" = x"" ]; then
+            $terminal_exec
+        else
+            # screen and urxvt won't do their own parsing of quoted arguments
+            if [ x"$TERM" = x"screen" ]; then
+                # screen has an incompatible meaning for -e
+                sh -c "exec $terminal_exec $1"
+            elif [ x"$TERM" = x"urxvt" ] || [ x"$TERM" = x"rxvt-unicode" ] || [ x"$TERM" = x"rxvt" ]; then
+                #TODO: Use whatever mechanism dash supports to test for
+                #      rxvt-* to match things like rxvt-unicode-256color
+                sh -c "exec $terminal_exec -e $1"
+            else
+                $terminal_exec -e "$1"
+            fi
+        fi
+
+        if [ $? -eq 0 ]; then
+            exit_success
+        else
+            exit_failure_operation_failed
+        fi
+    else
+        exit_failure_operation_impossible "configured terminal program '$terminal' not found or not executable"
+    fi
+}
+
+terminal_gnome()
+{
+    term_exec_key="/desktop/gnome/applications/terminal/exec"
+    term_exec_arg_key="/desktop/gnome/applications/terminal/exec_arg"
+
+    term_exec=`gconftool-2 --get ${term_exec_key}`
+    term_exec_arg=`gconftool-2 --get ${term_exec_arg_key}`
+
+    terminal_exec=`which $term_exec 2>/dev/null`
+
+    if [ -x "$terminal_exec" ]; then
+        if [ x"$1" = x"" ]; then
+            $terminal_exec
+        else
+            if [ x"$term_exec_arg" = x"" ]; then
+                $terminal_exec "$1"
+            else
+                $terminal_exec "$term_exec_arg" "$1"
+            fi
+        fi
+
+        if [ $? -eq 0 ]; then
+            exit_success
+        else
+            exit_failure_operation_failed
+        fi
+    else
+        exit_failure_operation_impossible "configured terminal program '$term_exec' not found or not executable"
+    fi
+}
+
+terminal_xfce()
+{
+    if [ x"$1" = x"" ]; then
+        exo-open --launch TerminalEmulator
+    else
+        exo-open --launch TerminalEmulator "$1"
+    fi
+
+    if [ $? -eq 0 ]; then
+        exit_success
+    else
+        exit_failure_operation_failed
+    fi
+}
+
+terminal_generic()
+{
+    # if $TERM is a known non-command, use hard-coded fallbacks
+    if [ x"$TERM" = x"" ] || [ x"$TERM" = x"linux" ] || [ x"$TERM" = x"vt100" ]; then
+        TERM=xterm
+    fi
+
+    terminal_exec=`which $TERM 2>/dev/null`
+
+    if [ -x "$terminal_exec" ]; then
+        if [ x"$1" = x"" ]; then
+            $terminal_exec
+        else
+            $terminal_exec -e "$1"
+        fi
+
+        if [ $? -eq 0 ]; then
+            exit_success
+        else
+            exit_failure_operation_failed
+        fi
+    else
+        exit_failure_operation_impossible "configured terminal program '$TERM' not found or not executable"
+    fi
+}
+
+terminal_lxde()
+{
+    if which lxterminal &>/dev/null; then
+        if [ x"$1" = x"" ]; then
+            lxterminal
+        else
+            lxterminal -e "$1"
+        fi
+    else
+        terminal_generic "$1"
+    fi
+}
+
+#[ x"$1" != x"" ] || exit_failure_syntax
+
+command=
+while [ $# -gt 0 ] ; do
+    parm="$1"
+    shift
+
+    case "$parm" in
+      -*)
+        exit_failure_syntax "unexpected option '$parm'"
+        ;;
+
+      *)
+        if [ -n "$command" ] ; then
+            exit_failure_syntax "unexpected argument '$parm'"
+        fi
+        command="$parm"
+        ;;
+    esac
+done
+
+detectDE
+
+if [ x"$DE" = x"" ]; then
+    DE=generic
+fi
+
+case "$DE" in
+    kde)
+    terminal_kde "$command"
+    ;;
+
+    gnome*)
+    terminal_gnome "$command"
+    ;;
+
+    xfce)
+    terminal_xfce "$command"
+    ;;
+
+    lxde)
+    terminal_lxde "$command"
+    ;;
+
+    generic)
+    terminal_generic "$command"
+    ;;
+
+    *)
+    exit_failure_operation_impossible "no terminal emulator available"
+    ;;
+esac
diff -Naur orig/scripts/xdg-utils-common.in git/scripts/xdg-utils-common.in
--- orig/scripts/xdg-utils-common.in	1970-01-01 01:00:00.000000000 +0100
+++ git/scripts/xdg-utils-common.in	2013-08-06 05:04:22.641970799 +0200
@@ -0,0 +1,337 @@
+
+#----------------------------------------------------------------------------
+#   Common utility functions included in all XDG wrapper scripts
+#----------------------------------------------------------------------------
+
+DEBUG()
+{
+  [ -z "${XDG_UTILS_DEBUG_LEVEL}" ] && return 0;
+  [ ${XDG_UTILS_DEBUG_LEVEL} -lt $1 ] && return 0;
+  shift
+  echo "$@" >&2
+}
+
+# This handles backslashes but not quote marks.
+first_word()
+{
+    read first rest
+    echo "$first"
+}
+
+#-------------------------------------------------------------
+# map a binary to a .desktop file
+binary_to_desktop_file()
+{
+    search="${XDG_DATA_HOME:-$HOME/.local/share}:${XDG_DATA_DIRS:-/usr/local/share:/usr/share}"
+    binary="`which "$1"`"
+    binary="`readlink -f "$binary"`"
+    base="`basename "$binary"`"
+    IFS=:
+    for dir in $search; do
+        unset IFS
+        [ "$dir" ] || continue
+        [ -d "$dir/applications" ] || [ -d "$dir/applnk" ] || continue
+        for file in "$dir"/applications/*.desktop "$dir"/applications/*/*.desktop "$dir"/applnk/*.desktop "$dir"/applnk/*/*.desktop; do
+            [ -r "$file" ] || continue
+            # Check to make sure it's worth the processing.
+            grep -q "^Exec.*$base" "$file" || continue
+            # Make sure it's a visible desktop file (e.g. not "preferred-web-browser.desktop").
+            grep -Eq "^(NoDisplay|Hidden)=true" "$file" && continue
+            command="`grep -E "^Exec(\[[^]=]*])?=" "$file" | cut -d= -f 2- | first_word`"
+            command="`which "$command"`"
+            if [ x"`readlink -f "$command"`" = x"$binary" ]; then
+                # Fix any double slashes that got added path composition
+                echo "$file" | sed -e 's,//*,/,g'
+                return
+            fi
+        done
+    done
+}
+
+#-------------------------------------------------------------
+# map a .desktop file to a binary
+## FIXME: handle vendor dir case
+desktop_file_to_binary()
+{
+    search="${XDG_DATA_HOME:-$HOME/.local/share}:${XDG_DATA_DIRS:-/usr/local/share:/usr/share}"
+    desktop="`basename "$1"`"
+    IFS=:
+    for dir in $search; do
+        unset IFS
+        [ "$dir" ] && [ -d "$dir/applications" ] || continue
+        file="$dir/applications/$desktop"
+        [ -r "$file" ] || continue
+        # Remove any arguments (%F, %f, %U, %u, etc.).
+        command="`grep -E "^Exec(\[[^]=]*])?=" "$file" | cut -d= -f 2- | first_word`"
+        command="`which "$command"`"
+        readlink -f "$command"
+        return
+    done
+}
+
+#-------------------------------------------------------------
+# Exit script on successfully completing the desired operation
+
+exit_success()
+{
+    if [ $# -gt 0 ]; then
+        echo "$@"
+        echo
+    fi
+
+    exit 0
+}
+
+
+#-----------------------------------------
+# Exit script on malformed arguments, not enough arguments
+# or missing required option.
+# prints usage information
+
+exit_failure_syntax()
+{
+    if [ $# -gt 0 ]; then
+        echo "@NAME@: $@" >&2
+        echo "Try '@NAME@ --help' for more information." >&2
+    else
+        usage
+        echo "Use 'man @NAME@' or '@NAME@ --manual' for additional info."
+    fi
+
+    exit 1
+}
+
+#-------------------------------------------------------------
+# Exit script on missing file specified on command line
+
+exit_failure_file_missing()
+{
+    if [ $# -gt 0 ]; then
+        echo "@NAME@: $@" >&2
+    fi
+
+    exit 2
+}
+
+#-------------------------------------------------------------
+# Exit script on failure to locate necessary tool applications
+
+exit_failure_operation_impossible()
+{
+    if [ $# -gt 0 ]; then
+        echo "@NAME@: $@" >&2
+    fi
+
+    exit 3
+}
+
+#-------------------------------------------------------------
+# Exit script on failure returned by a tool application
+
+exit_failure_operation_failed()
+{
+    if [ $# -gt 0 ]; then
+        echo "@NAME@: $@" >&2
+    fi
+
+    exit 4
+}
+
+#------------------------------------------------------------
+# Exit script on insufficient permission to read a specified file
+
+exit_failure_file_permission_read()
+{
+    if [ $# -gt 0 ]; then
+        echo "@NAME@: $@" >&2
+    fi
+
+    exit 5
+}
+
+#------------------------------------------------------------
+# Exit script on insufficient permission to write a specified file
+
+exit_failure_file_permission_write()
+{
+    if [ $# -gt 0 ]; then
+        echo "@NAME@: $@" >&2
+    fi
+
+    exit 6
+}
+
+check_input_file()
+{
+    if [ ! -e "$1" ]; then
+        exit_failure_file_missing "file '$1' does not exist"
+    fi
+    if [ ! -r "$1" ]; then
+        exit_failure_file_permission_read "no permission to read file '$1'"
+    fi
+}
+
+check_vendor_prefix()
+{
+    file_label="$2"
+    [ -n "$file_label" ] || file_label="filename"
+    file=`basename "$1"`
+    case "$file" in
+       [a-zA-Z]*-*)
+         return
+         ;;
+    esac
+
+    echo "@NAME@: $file_label '$file' does not have a proper vendor prefix" >&2
+    echo 'A vendor prefix consists of alpha characters ([a-zA-Z]) and is terminated' >&2
+    echo 'with a dash ("-"). An example '"$file_label"' is '"'example-$file'" >&2
+    echo "Use --novendor to override or '@NAME@ --manual' for additional info." >&2
+    exit 1
+}
+
+check_output_file()
+{
+    # if the file exists, check if it is writeable
+    # if it does not exists, check if we are allowed to write on the directory
+    if [ -e "$1" ]; then
+        if [ ! -w "$1" ]; then
+            exit_failure_file_permission_write "no permission to write to file '$1'"
+        fi
+    else
+        DIR=`dirname "$1"`
+        if [ ! -w "$DIR" ] || [ ! -x "$DIR" ]; then
+            exit_failure_file_permission_write "no permission to create file '$1'"
+        fi
+    fi
+}
+
+#----------------------------------------
+# Checks for shared commands, e.g. --help
+
+check_common_commands()
+{
+    while [ $# -gt 0 ] ; do
+        parm="$1"
+        shift
+
+        case "$parm" in
+            --help)
+            usage
+            echo "Use 'man @NAME@' or '@NAME@ --manual' for additional info."
+            exit_success
+            ;;
+
+            --manual)
+            manualpage
+            exit_success
+            ;;
+
+            --version)
+            echo "@NAME@ 1.1.0 rc1"
+            exit_success
+            ;;
+        esac
+    done
+}
+
+check_common_commands "$@"
+
+[ -z "${XDG_UTILS_DEBUG_LEVEL}" ] && unset XDG_UTILS_DEBUG_LEVEL;
+if [ ${XDG_UTILS_DEBUG_LEVEL-0} -lt 1 ]; then
+    # Be silent
+    xdg_redirect_output=" > /dev/null 2> /dev/null"
+else
+    # All output to stderr
+    xdg_redirect_output=" >&2"
+fi
+
+#--------------------------------------
+# Checks for known desktop environments
+# set variable DE to the desktop environments name, lowercase
+
+detectDE()
+{
+    # see https://bugs.freedesktop.org/show_bug.cgi?id=34164
+    unset GREP_OPTIONS
+
+    if [ -n "${XDG_CURRENT_DESKTOP}" ]; then
+      case "${XDG_CURRENT_DESKTOP}" in
+         GNOME)
+           DE=gnome;
+           ;;
+         KDE)
+           DE=kde;
+           ;;
+         LXDE)
+           DE=lxde;
+           ;;
+         MATE)
+           DE=mate;
+           ;;
+         XFCE)
+           DE=xfce
+           ;;
+      esac
+    fi
+
+    if [ x"$DE" = x"" ]; then
+      # classic fallbacks
+      if [ x"$KDE_FULL_SESSION" = x"true" ]; then DE=kde;
+      elif [ x"$GNOME_DESKTOP_SESSION_ID" != x"" ]; then DE=gnome;
+      elif [ x"$MATE_DESKTOP_SESSION_ID" != x"" ]; then DE=mate;
+      elif `dbus-send --print-reply --dest=org.freedesktop.DBus /org/freedesktop/DBus org.freedesktop.DBus.GetNameOwner string:org.gnome.SessionManager > /dev/null 2>&1` ; then DE=gnome;
+      elif xprop -root _DT_SAVE_MODE 2> /dev/null | grep ' = \"xfce4\"$' >/dev/null 2>&1; then DE=xfce;
+      elif xprop -root 2> /dev/null | grep -i '^xfce_desktop_window' >/dev/null 2>&1; then DE=xfce
+      fi
+    fi
+
+    if [ x"$DE" = x"" ]; then
+      # fallback to checking $DESKTOP_SESSION
+      case "$DESKTOP_SESSION" in
+         gnome)
+           DE=gnome;
+           ;;
+         LXDE|Lubuntu)
+           DE=lxde; 
+           ;;
+         MATE)
+           DE=mate;
+           ;;
+         xfce|xfce4|'Xfce Session')
+           DE=xfce;
+           ;;
+      esac
+    fi
+
+    if [ x"$DE" = x"" ]; then
+      # fallback to uname output for other platforms
+      case "$(uname 2>/dev/null)" in 
+        Darwin)
+          DE=darwin;
+          ;;
+      esac
+    fi
+
+    if [ x"$DE" = x"gnome" ]; then
+      # gnome-default-applications-properties is only available in GNOME 2.x
+      # but not in GNOME 3.x
+      which gnome-default-applications-properties > /dev/null 2>&1  || DE="gnome3"
+    fi
+}
+
+#----------------------------------------------------------------------------
+# kfmclient exec/openURL can give bogus exit value in KDE <= 3.5.4
+# It also always returns 1 in KDE 3.4 and earlier
+# Simply return 0 in such case
+
+kfmclient_fix_exit_code()
+{
+    version=`LC_ALL=C.UTF-8 kde-config --version 2>/dev/null | grep '^KDE'`
+    major=`echo $version | sed 's/KDE.*: \([0-9]\).*/\1/'`
+    minor=`echo $version | sed 's/KDE.*: [0-9]*\.\([0-9]\).*/\1/'`
+    release=`echo $version | sed 's/KDE.*: [0-9]*\.[0-9]*\.\([0-9]\).*/\1/'`
+    test "$major" -gt 3 && return $1
+    test "$minor" -gt 5 && return $1
+    test "$release" -gt 4 && return $1
+    return 0
+}
diff -Naur orig/scripts/xsl/README git/scripts/xsl/README
--- orig/scripts/xsl/README	1970-01-01 01:00:00.000000000 +0100
+++ git/scripts/xsl/README	2013-08-06 05:04:22.641970799 +0200
@@ -0,0 +1,23 @@
+Here you find some XSL transformation scripts for processing mime
+type definitions in XML format as defined by the Shared MIME-info Database
+specification [1]
+
+xdg-mime actually embeds a version of these scripts, the versions in this
+directory are for entertainment purposes only
+
+[1] http://www.freedesktop.org/wiki/Standards/shared-mime-info-spec
+===
+Command: xsltproc sharedmime-list.xsl input-file.xml
+
+Lists all mimetypes contained in a shared mime Database XML input file
+===
+Command: xsltproc --stringparam type mime/type \
+                  --stringparam source input-file.xml \
+                  sharedmime2mimelnk.xsl /path/to/input-file.xml
+
+Converts the mimetype "mime/type" contained in a shared mime Database XML
+input file into KDE's mimelnk format.
+===
+TODO:
+* Add support for magic entries and convert to KDE magic chunks in
+  share/config/magic/*
diff -Naur orig/scripts/xsl/refentry2htmlindex.xsl git/scripts/xsl/refentry2htmlindex.xsl
--- orig/scripts/xsl/refentry2htmlindex.xsl	1970-01-01 01:00:00.000000000 +0100
+++ git/scripts/xsl/refentry2htmlindex.xsl	2013-08-06 05:04:22.641970799 +0200
@@ -0,0 +1,20 @@
+<?xml version="1.0" encoding="ISO-8859-1"?>
+<xsl:stylesheet version="1.0"
+xmlns:xsl="http://www.w3.org/1999/XSL/Transform">
+<xsl:output method="html"
+            encoding="UTF-8"
+            omit-xml-declaration="yes"
+            indent="no"/>
+<xsl:template match="/">
+      <xsl:for-each select='refentry/refnamediv'>
+        <xsl:variable name="href">
+          <xsl:value-of select="refname"/>
+          <xsl:text>.html</xsl:text>
+        </xsl:variable>
+        <tr>
+         <td><a href="{$href}"><xsl:value-of select="refname"/></a>:</td>
+         <td><xsl:value-of select="refpurpose"/></td>
+        </tr>
+     </xsl:for-each>
+</xsl:template>
+</xsl:stylesheet>
diff -Naur orig/scripts/xsl/sharedmime2mimelnk.xsl git/scripts/xsl/sharedmime2mimelnk.xsl
--- orig/scripts/xsl/sharedmime2mimelnk.xsl	1970-01-01 01:00:00.000000000 +0100
+++ git/scripts/xsl/sharedmime2mimelnk.xsl	2013-08-06 05:04:22.641970799 +0200
@@ -0,0 +1,32 @@
+<?xml version="1.0" encoding="ISO-8859-1"?>
+<xsl:stylesheet version="1.0"
+xmlns:xsl="http://www.w3.org/1999/XSL/Transform"
+xmlns:mime="http://www.freedesktop.org/standards/shared-mime-info">
+<xsl:output method="text"
+            encoding="UTF-8"
+            indent="no"/>
+<xsl:template match="/">
+      <xsl:for-each select='mime:mime-info/mime:mime-type[@type=$type]'>
+        <xsl:text>[Desktop Entry]&#10;</xsl:text>
+        <xsl:text># Installed by xdg-mime from </xsl:text><xsl:value-of select="$source"/><xsl:text>&#10;</xsl:text>
+        <xsl:text>Type=MimeType&#10;</xsl:text>
+        <xsl:text>MimeType=</xsl:text><xsl:value-of select="@type"/><xsl:text>&#10;</xsl:text>
+        <xsl:text>Icon=</xsl:text><xsl:value-of select="translate(@type,'/','-')"/><xsl:text>&#10;</xsl:text>
+        <xsl:if test="mime:sub-class-of">
+           <xsl:text>X-KDE-IsAlso=</xsl:text><xsl:value-of select="mime:sub-class-of/@type"/><xsl:text>&#10;</xsl:text>
+        </xsl:if>
+        <xsl:if test="mime:glob">
+          <xsl:text>Patterns=</xsl:text>
+          <xsl:for-each select='mime:glob[@pattern]'>
+            <xsl:value-of select="@pattern"/><xsl:text>;</xsl:text>
+          </xsl:for-each>
+          <xsl:text>&#10;</xsl:text>
+        </xsl:if>
+        <xsl:text>Comment=</xsl:text><xsl:value-of select="mime:comment[not(@xml:lang)]"/><xsl:text>&#10;</xsl:text>
+        <xsl:for-each select='mime:comment[@xml:lang]'>
+          <xsl:sort select='@xml:lang'/>
+          <xsl:text>Comment[</xsl:text><xsl:value-of select="@xml:lang"/><xsl:text>]=</xsl:text><xsl:value-of select="."/><xsl:text>&#10;</xsl:text>
+        </xsl:for-each>
+     </xsl:for-each>
+</xsl:template>
+</xsl:stylesheet>
diff -Naur orig/scripts/xsl/sharedmime-list.xsl git/scripts/xsl/sharedmime-list.xsl
--- orig/scripts/xsl/sharedmime-list.xsl	1970-01-01 01:00:00.000000000 +0100
+++ git/scripts/xsl/sharedmime-list.xsl	2013-08-06 05:04:22.641970799 +0200
@@ -0,0 +1,13 @@
+<?xml version="1.0" encoding="ISO-8859-1"?>
+<xsl:stylesheet version="1.0"
+xmlns:xsl="http://www.w3.org/1999/XSL/Transform"
+xmlns:mime="http://www.freedesktop.org/standards/shared-mime-info">
+<xsl:output method="text"
+            encoding="UTF-8"
+            indent="no"/>
+<xsl:template match="/">
+      <xsl:for-each select='mime:mime-info/mime:mime-type'>
+        <xsl:value-of select="@type"/><xsl:text>&#10;</xsl:text>
+      </xsl:for-each>
+</xsl:template>
+</xsl:stylesheet>
diff -Naur orig/tests/Makefile git/tests/Makefile
--- orig/tests/Makefile	2011-01-01 11:09:15.000000000 +0100
+++ git/tests/Makefile	1970-01-01 01:00:00.000000000 +0100
@@ -1,45 +0,0 @@
-MKDIR      	= mkdir -p
-RMDIR      	= rmdir
-INSTALL         = /usr/bin/install -c $(INSTALL_FLAGS)
-INSTALL_PROGRAM = ${INSTALL} $(INSTALL_PROGRAM_FLAGS)
-INSTALL_LIBRARY = ${INSTALL} $(INSTALL_PROGRAM_FLAGS)
-INSTALL_SCRIPT  = ${INSTALL} $(INSTALL_SCRIPT_FLAGS)
-INSTALL_DATA    = ${INSTALL} -m 644 $(INSTALL_DATA_FLAGS)
-XMLTO           = /usr/bin/xmlto
-
-prefix          = /usr/local
-exec_prefix     = ${prefix}
-bindir          = ${exec_prefix}/bin
-mandir          = ${prefix}/man
-
-all:
-
-release:
-	rm -rf xdg-su tmp
-	rm -f xdg-test.log *~
-
-test:
-	./testrun -IRC
-	rm -rf tmp/xdgt*
-
-distclean: clean
-	rm -f Makefile
-
-clean:
-	rm -rf tmp/xdgt*
-
-tests-userclean:
-	find ${HOME} -name 'xdgtestdata*' | xargs rm -rf
-	find ${HOME} -name 'x-xdg*.xml' | xargs rm -f
-	find ${HOME}/.kde/share/mimelnk -name 'x-xdg*.desktop' | xargs rm -f
-
-tests-clean:	tests-userclean
-	find `echo "${XDG_DATA_DIRS}:/usr/local/share/:/usr/share/:${XDG_CONFIG_DIRS}:/etc/xdg" | sed -e 's/:/ /g'` -name 'xdgtestdata*' | xargs rm -rf
-	find `echo "${XDG_DATA_DIRS}:/usr/local/share/:/usr/share/:${XDG_CONFIG_DIRS}:/etc/xdg" | sed -e 's|:| |g'` -name 'x-xdgt*' | xargs rm -f
-
-install:
-
-uninstall:
-
-doc:
-	perl doc_gen.pl
